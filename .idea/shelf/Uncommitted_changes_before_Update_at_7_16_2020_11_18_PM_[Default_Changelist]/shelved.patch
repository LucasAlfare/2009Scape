Index: Server/src/main/java/Server/plugin/command/VisualCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.command;\r\n\r\nimport core.cache.Cache;\r\nimport plugin.tutorial.CharacterDesign;\r\nimport plugin.skill.farming.wrapper.PatchWrapper;\r\nimport core.game.node.entity.combat.ImpactHandler.HitsplatType;\r\nimport core.game.node.entity.impl.Projectile;\r\nimport core.game.node.entity.npc.NPC;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.link.IronmanMode;\r\nimport core.game.node.entity.player.link.audio.Audio;\r\nimport core.game.node.object.GameObject;\r\nimport core.game.node.object.ObjectBuilder;\r\nimport core.game.system.SystemLogger;\r\nimport core.game.system.command.CommandPlugin;\r\nimport core.game.system.command.CommandSet;\r\nimport core.game.system.task.Pulse;\r\nimport core.game.world.GameWorld;\r\nimport core.game.world.map.Location;\r\nimport core.game.world.map.RegionManager;\r\nimport core.game.world.repository.Repository;\r\nimport core.game.world.update.flag.context.Animation;\r\nimport core.game.world.update.flag.context.Graphics;\r\nimport core.plugin.InitializablePlugin;\r\nimport core.plugin.Plugin;\r\n\r\nimport java.awt.*;\r\nimport java.awt.datatransfer.Clipboard;\r\nimport java.awt.datatransfer.StringSelection;\r\n\r\n/**\r\n * Represents the the command plugin used for visual commands.\r\n * @author Vexia\r\n * @author Emperor\r\n * \r\n */\r\n@InitializablePlugin\r\npublic final class VisualCommand extends CommandPlugin {\r\n\r\n\t@Override\r\n\tpublic Plugin<Object> newInstance(Object arg) throws Throwable {\r\n\t\tlink(CommandSet.ADMINISTRATOR);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t@SuppressWarnings(\"deprecation\")\r\n\t@Override\r\n\tpublic boolean parse(final Player player, String name, String[] args) {\r\n\t\tLocation location = null;\r\n\t\tGameObject object = null;\r\n\t\tPlayer o = null;\r\n\r\n\t\tswitch (name) {\r\n\t\tcase \"invisible\":\r\n\t\tcase \"invis\":\r\n\t\tcase \"seti\":\r\n\t\t\tplayer.setInvisible(!player.isInvisible());\r\n\t\t\tplayer.sendMessage(\"You are now \"+(player.isInvisible() ? \"invisible\" : \"rendering\")+\" for other players.\");\r\n\t\t\tbreak;\r\n\t\tcase \"maxkc\":\r\n\t\t\tfor (int i = 0; i < 6; i++) {\r\n\t\t\t\tplayer.getSavedData().getActivityData().getBarrowBrothers()[i] = true;\r\n\t\t\t}\r\n\t\t\tString[] names = new String[] { \"Ahrim\", \"Dharok\", \"Guthan\", \"Karil\", \"Torag\", \"Verac\" };\r\n\t\t\tplayer.getSavedData().getActivityData().setBarrowKills(50);\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"Flagged all barrow brothers killed and 50 catacomb kills, current entrance: \" + names[player.getSavedData().getActivityData().getBarrowTunnelIndex()] + \".\");\r\n\t\t\treturn true;\r\n\t\tcase \"1hko\":\r\n\t\t\tplayer.setAttribute(\"1hko\", !player.getAttribute(\"1hko\", false));\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"1-hit KO mode \" + (player.getAttribute(\"1hko\", false) ? \"on.\" : \"off.\"));\r\n\t\t\treturn true;\r\n\t\tcase \"anim\":\r\n\t\tcase \"emote\":\r\n\t\t\tif (args.length < 2) {\r\n\t\t\t\tplayer.debug(\"syntax error: id (optional) delay\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tfinal Animation animation = new Animation(Integer.parseInt(args[1]), args.length > 2 ? Integer.parseInt(args[2]) : 0);\r\n\t\t\tplayer.animate(animation);\r\n\t\t\treturn true;\r\n\t\tcase \"gfx\":\r\n\t\tcase \"graphic\":\r\n\t\tcase \"graphics\":\r\n\t\t\tif (args.length < 2) {\r\n\t\t\t\tplayer.debug(\"syntax error: id (optional) height delay\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tplayer.graphics(new Graphics(Integer.parseInt(args[1]), args.length > 2 ? Integer.parseInt(args[2]) : 0, args.length > 3 ? Integer.parseInt(args[3]) : 0));\r\n\t\t\treturn true;\r\n\t\tcase \"sync\":\r\n\t\tcase \"visual\":\r\n\t\t\tif (args.length < 3) {\r\n\t\t\t\tplayer.debug(\"syntax error: anim_id gfx_id (optional) height\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tint animId = toInteger(args[1]);\r\n\t\t\tint gfxId = toInteger(args[2]);\r\n\t\t\tint height = args.length > 3 ? toInteger(args[3]) : 0;\r\n\t\t\tplayer.visualize(Animation.create(animId), new Graphics(gfxId, height));\r\n\t\t\treturn true;\r\n\t\tcase \"pos_graphic\":\r\n\t\tcase \"position_gfx\":\r\n\t\tcase \"pos_gfx\":\r\n\t\tcase \"lgfx\":\r\n\t\t\tif (args.length < 2) {\r\n\t\t\t\tplayer.debug(\"syntax error: id x y (optional) height delay\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tlocation = Location.create(Integer.parseInt(args[2]), Integer.parseInt(args[3]), args.length > 4 ? Integer.parseInt(args[4]) : 0);\r\n\t\t\tplayer.getPacketDispatch().sendPositionedGraphic(Integer.parseInt(args[1]), args.length > 5 ? Integer.parseInt(args[5]) : 0, args.length > 6 ? Integer.parseInt(args[6]) : 0, location);\r\n\t\t\tbreak;\r\n\t\tcase \"npc\":\r\n\t\t\tif (args.length < 2) {\r\n\t\t\t\tplayer.debug(\"syntax error: id (optional) direction\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tNPC npc = NPC.create(toInteger(args[1]), player.getLocation());\r\n\t\t\tnpc.setAttribute(\"spawned:npc\", true);\r\n\t\t\tnpc.setRespawn(false);\r\n\t\t\tnpc.setDirection(player.getDirection());\r\n\t\t\tnpc.init();\r\n\t\t\tnpc.setWalks(args.length > 2 ? true : false);\r\n\t\t\tString npcString = \"{\" + npc.getLocation().getX() + \",\" + npc.getLocation().getY() + \",\" + npc.getLocation().getZ() + \",\" + (npc.isWalks() ? \"1\" : \"0\") + \",\" + npc.getDirection().ordinal() + \"}\";\r\n\t\t\tClipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();\r\n\t\t\tclpbrd.setContents(new StringSelection(npcString), null);\r\n\t\t\tSystem.out.println(npcString);\r\n\t\t\treturn true;\r\n\t\tcase \"npcsquad\":\r\n\t\t\tif (args.length < 2) {\r\n\t\t\t\tplayer.debug(\"syntax error: id (optional) sizeX sizeY\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tint sizeX = 3;\r\n\t\t\tint sizeY = 3;\r\n\t\t\tif (args.length > 2) {\r\n\t\t\t\tsizeX = toInteger(args[2]);\r\n\t\t\t\tif (args.length > 3) {\r\n\t\t\t\t\tsizeY = toInteger(args[3]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsizeY = sizeX;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tboolean aggressive = args.length > 4;\r\n\t\t\tfor (int x = 0; x < sizeX; x++) {\r\n\t\t\t\tfor (int y = 0; y < sizeY; y++) {\r\n\t\t\t\t\tnpc = NPC.create(toInteger(args[1]), player.getLocation().transform(1 + x, 1 + y, 0));\r\n\t\t\t\t\tnpc.setAttribute(\"spawned:npc\", true);\r\n\t\t\t\t\tnpc.setAggressive(aggressive);\r\n\t\t\t\t\tnpc.init();\r\n\t\t\t\t\tnpc.setRespawn(false);\r\n\t\t\t\t\tnpc.setWalks(aggressive);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\tcase \"oib\":\r\n\t\t\tplayer.getInterfaceManager().openInfoBars();\r\n\t\t\tbreak;\r\n\t\tcase \"char\":\r\n\t\t\tCharacterDesign.open(player);\r\n\t\t\tbreak;\r\n\t\tcase \"savenpc\":\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\tcase \"object\":\r\n\t\tcase \"obj\":\r\n\t\t\tif (args.length < 2) {\r\n\t\t\t\tplayer.debug(\"syntax error: id (optional) type rotation or rotation\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobject = args.length > 3 ? new GameObject(toInteger(args[1]), player.getLocation(), toInteger(args[2]), toInteger(args[3])) : args.length == 3 ? new GameObject(toInteger(args[1]), player.getLocation(), toInteger(args[2])) : new GameObject(toInteger(args[1]), player.getLocation());\r\n\t\t\tObjectBuilder.add(object);\r\n\t\t\tSystemLogger.log(\"object = \" + object);\r\n\t\t\treturn true;\r\n\t\tcase \"objwithanim\":\r\n\t\t\tGameObject go = new GameObject(toInteger(args[1]), player.getLocation(), 0);\r\n\t\t\tObjectBuilder.add(go);\r\n\t\t\tplayer.getPacketDispatch().sendObjectAnimation(go, Animation.create(toInteger(args[2])));\r\n\t\t\treturn true;\r\n\t\tcase \"oa\":\r\n\t\tcase \"object_anim\":\r\n\t\tcase \"obj_anim\":\r\n\t\tcase \"objectanim\":\r\n\t\tcase \"objanim\":\r\n\t\t\tif (args.length < 2) {\r\n\t\t\t\tplayer.debug(\"syntax error: x y id\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tlocation = args.length > 2 ? Location.create(Integer.parseInt(args[1]), Integer.parseInt(args[2]), 3) : player.getLocation();\r\n\t\t\tobject = RegionManager.getObject(location);\r\n\t\t\tif (object == null) {\r\n\t\t\t\tplayer.debug(\"error: object not found in region cache.\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tplayer.getPacketDispatch().sendObjectAnimation(object, new Animation(toInteger(args[args.length - 1])));\r\n\t\t\treturn true;\r\n\t\tcase \"inter\":\r\n\t\tcase \"component\":\r\n\t\tcase \"interface\":\r\n\t\t\tif (args.length < 2) {\r\n\t\t\t\tplayer.debug(\"syntax error: interface-id\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tint componentId = toInteger(args[1]);\r\n\t\t\tif (componentId < 0 || componentId > Cache.getInterfaceDefinitionsSize()) {\r\n\t\t\t\tplayer.debug(\"Invalid component id [id=\" + componentId + \", max=\" + Cache.getInterfaceDefinitionsSize() + \"].\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tplayer.getInterfaceManager().openComponent(componentId);\r\n\t\t\treturn true;\r\n\t\tcase \"ti\":\r\n\t\t\tplayer.getPacketDispatch().sendInterfaceConfig(90, 87, false);\r\n\t\t\tbreak;\r\n\t\tcase \"iconfig\":\r\n\t\tcase \"inter_config\":\r\n\t\t\tif (args.length < 2) {\r\n\t\t\t\tplayer.debug(\"syntax error: interface-id child hidden\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tboolean hidden = args.length > 3 ? Boolean.parseBoolean(args[3]) : true;\r\n\t\t\tplayer.getPacketDispatch().sendInterfaceConfig(toInteger(args[1]), toInteger(args[2]), hidden);\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"Interface child (id=\" + args[1] + \", child=\" + args[2] + \") is \" + (hidden ? \"hidden.\" : \"visible.\"));\r\n\t\t\treturn true;\r\n\t\tcase \"saveconfig\":\r\n\t\tcase \"config\":\r\n\t\t\tif (args.length < 2) {\r\n\t\t\t\tplayer.debug(\"syntax error: config-id (optional) value\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (name.equals(\"saveconfig\")) {\r\n\t\t\t\tplayer.getConfigManager().set(toInteger(args[1]), args.length > 2 ? toInteger(args[2]) : 0, true);\r\n\t\t\t} else {\r\n\t\t\t\tplayer.getConfigManager().send(toInteger(args[1]), args.length > 2 ? toInteger(args[2]) : 0);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\tcase \"loop_inter\":\r\n\t\t\tfinal int st = toInteger(args[1]);\r\n\t\t\tfinal int en = args.length > 2 ? toInteger(args[2]) : 740;\r\n\t\t\tGameWorld.Pulser.submit(new Pulse(3, player) {\r\n\t\t\t\tint id = st;\r\n\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic boolean pulse() {\r\n//\t\t\t\t\tPacketRepository.send(Interface.class, new InterfaceContext(player, 548, 77, id, false));\r\n\t\t\t\t\tplayer.getInterfaceManager().openComponent(id);\r\n\t\t\t\t\tplayer.debug(\"Interface id: \" + id);\r\n\t\t\t\t\treturn ++id >= en;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn true;\r\n\t\tcase \"loop_config\":\r\n\t\tcase \"config_loop\":\r\n\t\t\tif (args.length < 4) {\r\n\t\t\t\tplayer.debug(\"syntax error: config-id start end value\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tint value = toInteger(args[3]);\r\n\t\t\tfor (int i = toInteger(args[1]); i < toInteger(args[2]); i++) {\r\n\t\t\t\tplayer.getConfigManager().set(i, value);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\tcase \"string\":\r\n\t\t\tif (args.length < 3) {\r\n\t\t\t\tplayer.debug(\"syntax error: interface child text\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tplayer.getPacketDispatch().sendString(args[3], toInteger(args[1]), toInteger(args[2]));\r\n\t\t\treturn true;\r\n\t\tcase \"loop_string\":\r\n\t\tcase \"string_loop\":\r\n\t\t\tif (args.length < 3) {\r\n\t\t\t\tplayer.debug(\"syntax error: interface min max\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tint interfaceId = toInteger(args[1]);\r\n\t\t\tfor (int i = toInteger(args[2]); i < toInteger(args[3]); i++) {\r\n\t\t\t\tplayer.getPacketDispatch().sendString(\"child=\" + i, interfaceId, i);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\tcase \"loop_oa\":\r\n\t\t\tfinal int startId = toInteger(args[1]);\r\n\t\t\tfinal int endId = args.length > 2 ? toInteger(args[2]) : 11000;\r\n\t\t\tGameWorld.Pulser.submit(new Pulse(3, player) {\r\n\t\t\t\tint id = startId;\r\n\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic boolean pulse() {\r\n\t\t\t\t\tGameObject object = RegionManager.getObject(player.getLocation());\r\n\t\t\t\t\tif (object == null) {\r\n\t\t\t\t\t\tplayer.debug(\"error: object not found in region cache.\");\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tplayer.getPacketDispatch().sendObjectAnimation(object, new Animation(id));\r\n\t\t\t\t\tplayer.debug(\"Animation id: \" + id);\r\n\t\t\t\t\treturn ++id >= endId;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn true;\r\n\t\tcase \"loop_anim\":\r\n\t\t\tfinal int start = toInteger(args[1]);\r\n\t\t\tfinal int end = args.length > 2 ? toInteger(args[2]) : 11000;\r\n\t\t\tGameWorld.Pulser.submit(new Pulse(3, player) {\r\n\t\t\t\tint id = start;\r\n\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic boolean pulse() {\r\n\t\t\t\t\tplayer.animate(Animation.create(id));\r\n\t\t\t\t\tplayer.debug(\"Animation id: \" + id);\r\n\t\t\t\t\treturn ++id >= end;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn true;\r\n\t\tcase \"loop_gfx\":\r\n\t\t\tfinal int s = toInteger(args[1]);\r\n\t\t\tfinal int e = args.length > 2 ? toInteger(args[2]) : 11000;\r\n\t\t\tGameWorld.Pulser.submit(new Pulse(3, player) {\r\n\t\t\t\tint id = s;\r\n\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic boolean pulse() {\r\n\t\t\t\t\tProjectile.create(player.getLocation(), player.getLocation().transform(0, 3, 0), id, 42, 36, 46, 75, 5, 11).send();\r\n\t\t\t\t\tplayer.graphics(new Graphics(id, 96));\r\n\t\t\t\t\tplayer.debug(\"Graphic id: \" + id);\r\n\t\t\t\t\treturn ++id >= e;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn true;\r\n\t\tcase \"removenpc\":\r\n\t\t\tplayer.setAttribute(\"removenpc\", !player.getAttribute(\"removenpc\", false));\r\n\t\t\tplayer.debug(\"You have set remove npc value to \" + player.getAttribute(\"removenpc\", false) + \".\");\r\n\t\t\treturn true;\r\n\t\tcase \"pnpc\":\r\n\t\t\tif (args.length < 2) {\r\n\t\t\t\tplayer.debug(\"syntax error: id\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tplayer.getAppearance().transformNPC(toInteger(args[1]));\r\n\t\t\treturn true;\r\n\t\tcase \"itemoni\":\r\n\t\t\tint inter = toInteger(args[1]);\r\n\t\t\tint child = toInteger(args[2]);\r\n\t\t\tint item = args.length > 3 ? toInteger(args[3]) : 1038;\r\n\t\t\tplayer.getPacketDispatch().sendItemZoomOnInterface(item, 270, inter, child);\r\n\t\t\treturn true;\r\n\t\tcase \"hit\":\r\n\t\t\tplayer.getImpactHandler().manualHit(player, toInteger(args[1]), HitsplatType.NORMAL);\r\n\t\t\treturn true;\r\n\t\tcase \"sound\":\r\n\t\t\tplayer.getAudioManager().send(new Audio(Integer.parseInt(args[1]), 10, 1));\r\n\t\t\treturn true;\r\n\t\tcase \"noclip\":\r\n\t\t\tplayer.setAttribute(\"no_clip\", !player.getAttribute(\"no_clip\", false));\r\n\t\t\treturn true;\r\n\t\tcase \"grow\":\r\n\t\t\tfor (PatchWrapper wrapper : player.getFarmingManager().getPatches()) {\r\n\t\t\t\tif (wrapper == null || wrapper.getPatch() == null || wrapper.getCycle() == null || wrapper.getCycle().getGrowthHandler() == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\twrapper.getCycle().getGrowthHandler().handle();\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\tcase \"disabledisease\":\r\n\t\t\tplayer.setAttribute(\"stop-disease\", !player.getAttribute(\"stop-disease\", false));\r\n\t\t\tplayer.sendMessage(\"Disable disease=\" + player.getAttribute(\"stop-disease\", false));\r\n\t\t\treturn true;\r\n\t\tcase \"rake\":\r\n\t\t\tfor (PatchWrapper wrapper : player.getFarmingManager().getPatches()) {\r\n\t\t\t\twrapper.getCycle().clear(player);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\tcase \"full\":\r\n\t\t\tfor (PatchWrapper wrapper : player.getFarmingManager().getPatches()) {\r\n\t\t\t\tfor (int i = 0; i < 20; i++) {\r\n\t\t\t\t\tif (wrapper == null || wrapper.getPatch() == null || wrapper.getCycle() == null || wrapper.getCycle().getGrowthHandler() == null) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\twrapper.getCycle().getGrowthHandler().handle();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\tcase \"toreg\"://these fucking kids are so goddam annoying\r\n\t\t\to = Repository.getPlayer(args[1]);\r\n\t\t\to.getIronmanManager().setMode(IronmanMode.NONE);\r\n\t\t\tplayer.sendMessage(\"done...\");\r\n\t\t\to.sendMessage(\"<col=FF0000>You are no longer an ironman. Log out to see the ironman icon disappear.</col>\");\r\n\t\t\tbreak;\r\n\t\tcase \"clearpatches\":\r\n\t\t\tif (args.length > 1) {\r\n\t\t\t\to = Repository.getPlayer(args[1]);\r\n\t\t\t}\r\n\t\t\tif (o != null) {\r\n\t\t\t\tfor (PatchWrapper wrapper : o.getFarmingManager().getPatches()) {\r\n\t\t\t\t\twrapper.getCycle().clear(o);\r\n\t\t\t\t}\r\n\t\t\t\to.sendMessage(\"Your patches have been cleared.\");\r\n\t\t\t\tplayer.sendMessage(\"You cleared \" + o.getUsername() + \"'s patches.\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tfor (PatchWrapper wrapper : player.getFarmingManager().getPatches()) {\r\n\t\t\t\twrapper.getCycle().clear(player);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/command/VisualCommand.java	(revision 25177c7389a44663bd7623221b75d446b8940c03)
+++ Server/src/main/java/Server/plugin/command/VisualCommand.java	(date 1594952600728)
@@ -78,6 +78,25 @@
 			final Animation animation = new Animation(Integer.parseInt(args[1]), args.length > 2 ? Integer.parseInt(args[2]) : 0);
 			player.animate(animation);
 			return true;
+		case "render":
+		case "remote":
+			if (args.length < 2) {
+				player.debug("syntax error: ::render id");
+				return true;
+			}
+			try {
+				player.getAppearance().setAnimations(Animation.create(Integer.parseInt(args[1])));
+				player.getAppearance().sync();
+			} catch (NumberFormatException e) {
+				player.getPacketDispatch().sendMessage("Use: ::remote id");
+			}
+				return true;
+		case "normalwalk":
+			player.getAppearance().prepareBodyData(player);
+			player.getAppearance().setDefaultAnimations();
+			player.getAppearance().setAnimations();
+			player.getAppearance().sync();
+			return true;
 		case "gfx":
 		case "graphic":
 		case "graphics":
Index: Server/src/main/java/Server/core/cache/def/impl/NPCDefinition.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.cache.def.impl;\r\n\r\nimport java.nio.ByteBuffer;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport core.tools.StringUtils;\r\nimport core.cache.Cache;\r\nimport core.cache.def.Definition;\r\nimport core.cache.misc.buffer.ByteBufferUtils;\r\nimport core.game.interaction.OptionHandler;\r\nimport core.game.node.entity.npc.NPC;\r\nimport core.game.node.entity.npc.drop.NPCDropTables;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.system.mysql.impl.NPCConfigSQLHandler;\r\nimport core.game.world.GameWorld;\r\nimport core.game.world.update.flag.context.Animation;\r\nimport core.game.world.update.flag.context.Graphics;\r\n\r\n/**\r\n * Debug NPC Opcodes Line 483, Uncomment\r\n */\r\n\r\n/**\r\n * Represents an NPC's definitions.\r\n * @author Emperor\r\n */\r\npublic final class NPCDefinition extends Definition<NPC> {\r\n\r\n\t/**\r\n\t * The definitions.\r\n\t */\r\n\tprivate static final Map<Integer, NPCDefinition> DEFINITIONS = new HashMap<>();\r\n\r\n\t/**\r\n\t * The default option handlers.\r\n\t */\r\n\tprivate static final Map<String, OptionHandler> OPTION_HANDLERS = new HashMap<>();\r\n\r\n\t/**\r\n\t * The size.\r\n\t */\r\n\tpublic int size = 1;\r\n\r\n\t/**\r\n\t * The combat level.\r\n\t */\r\n\tprivate int combatLevel;\r\n\r\n\t/**\r\n\t * The head icons.\r\n\t */\r\n\tpublic int headIcons;\r\n\r\n\t/**\r\n\t * If the NPC can be seen on the minimap.\r\n\t */\r\n\tpublic boolean isVisibleOnMap;\r\n\r\n\t/**\r\n\t * The examine option value\r\n\t */\r\n\tpublic String examine;\r\n\r\n\t/**\r\n\t * The drop tables.\r\n\t */\r\n\tprivate NPCDropTables dropTables;\r\n\r\n\t/**\r\n\t * Unidentified variables.\r\n\t */\r\n\tpublic int anInt833;\r\n\tpublic int anInt836;\r\n\tpublic int anInt837;\r\n\tpublic boolean aBoolean841;\r\n\tpublic int anInt842;\r\n\tpublic int configFileId;\r\n\tpublic int[] childNPCIds;\r\n\tpublic int anInt846;\r\n\tpublic int anInt850;\r\n\tpublic byte aByte851;\r\n\tpublic boolean aBoolean852;\r\n\tpublic int anInt853;\r\n\tpublic byte aByte854;\r\n\tpublic boolean aBoolean856;\r\n\tpublic boolean aBoolean857;\r\n\tpublic short[] aShortArray859;\r\n\tpublic byte[] aByteArray861;\r\n\tpublic short aShort862;\r\n\tpublic boolean aBoolean863;\r\n\tpublic int anInt864;\r\n\tpublic short[] aShortArray866;\r\n\tpublic int[] anIntArray868;\r\n\tpublic int anInt869;\r\n\tpublic int anInt870;\r\n\tpublic int anInt871;\r\n\tpublic int anInt872;\r\n\tpublic int anInt874;\r\n\tpublic int anInt875;\r\n\tpublic int anInt876;\r\n\tpublic int anInt879;\r\n\tpublic short[] aShortArray880;\r\n\tpublic int anInt884;\r\n\tpublic int configId;\r\n\tpublic int anInt889;\r\n\tpublic int[] anIntArray892;\r\n\tpublic short aShort894;\r\n\tpublic short[] aShortArray896;\r\n\tpublic int anInt897;\r\n\tpublic int anInt899;\r\n\tpublic int anInt901;\r\n\tpublic int standAnimation;\r\n\tpublic int walkAnimation;\r\n\t\r\n\tprivate int renderAnimationId;\r\n\r\n\t/**\r\n\t * The minimum combat distance (0 uses default distances).\r\n\t */\r\n\tprivate int combatDistance;\r\n\r\n\t/**\r\n\t * The combat graphics.\r\n\t */\r\n\tprivate Graphics[] combatGraphics = new Graphics[3];\r\n\r\n\t/**\r\n\t * The turning animation.\r\n\t */\r\n\tprivate int turnAnimation;\r\n\r\n\t/**\r\n\t * The turn 180� animation.\r\n\t */\r\n\tprivate int turn180Animation;\r\n\r\n\t/**\r\n\t * The turn clock-wise animation.\r\n\t */\r\n\tprivate int turnCWAnimation;\r\n\r\n\t/**\r\n\t * The turn counter clock-wise animation.\r\n\t */\r\n\tprivate int turnCCWAnimation;\r\n\r\n\t/**\r\n\t * Constructs a new {@code NPCDefinition} {@code Object}.\r\n\t * @param id The NPC id.\r\n\t */\r\n\tpublic NPCDefinition(int id) {\r\n\t\tthis.id = id;\r\n\t\tanInt842 = -1;\r\n\t\tconfigFileId = -1;\r\n\t\tanInt837 = -1;\r\n\t\tanInt846 = -1;\r\n\t\tanInt853 = 32;\r\n\t\tstandAnimation = -1;\r\n\t\twalkAnimation = -1;\r\n\t\tcombatLevel = 0;\r\n\t\tanInt836 = -1;\r\n\t\tname = \"null\";\r\n\t\tanInt869 = 0;\r\n\t\tanInt850 = 255;\r\n\t\tanInt871 = -1;\r\n\t\taBoolean852 = true;\r\n\t\taShort862 = (short) 0;\r\n\t\tanInt876 = -1;\r\n\t\taByte851 = (byte) -96;\r\n\t\tanInt875 = 0;\r\n\t\tanInt872 = -1;\r\n\t\taBoolean857 = true;\r\n\t\tanInt870 = -1;\r\n\t\tanInt874 = -1;\r\n\t\tanInt833 = -1;\r\n\t\tanInt864 = 128;\r\n\t\theadIcons = -1;\r\n\t\taBoolean856 = false;\r\n\t\tconfigId = -1;\r\n\t\taByte854 = (byte) -16;\r\n\t\taBoolean863 = false;\r\n\t\tisVisibleOnMap = true;\r\n\t\tanInt889 = -1;\r\n\t\tanInt884 = -1;\r\n\t\taBoolean841 = true;\r\n\t\tanInt879 = -1;\r\n\t\tanInt899 = 128;\r\n\t\taShort894 = (short) 0;\r\n\t\toptions = new String[5];\r\n\t\tanInt897 = 0;\r\n\t\tanInt901 = -1;\r\n\t\tanIntArray868 = new int[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the NPC definition for this id.\r\n\t * @param id The NPC id.\r\n\t * @return The NPC definition object.\r\n\t */\r\n\tpublic static NPCDefinition forId(int id) {\r\n\t\tNPCDefinition def = DEFINITIONS.get(id);\r\n\t\tif (def == null) {\r\n\t\t\tdef = new NPCDefinition(id);\r\n\t\t\tbyte[] data = Cache.getIndexes()[18].getFileData(id >>> 134238215, id & 0x7f);\r\n\t\t\tif (data == null) {\r\n\t\t\t\tif (id != -1) {\r\n\t\t\t\t\t// System.out.println(\"Failed loading NPC \" + id + \".\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdef.parse(ByteBuffer.wrap(data));\r\n\t\t\t}\r\n\t\t\tDEFINITIONS.put(id, def);\r\n\t\t}\r\n\t\treturn def;\r\n\t}\r\n\r\n\tpublic static void main(String... args) throws Throwable {\r\n\t\tGameWorld.prompt(false);\r\n\t\tSystem.out.println(\"Roar: \" + NPCDefinition.forId(2329).standAnimation);\r\n\t\t// for (int i = 0; i < 11000; i++) {\r\n\t\t// ItemDefinition def = ItemDefinition.forId(i);\r\n\t\t// if (def.getMaleWornModelId1() >= 1250 && def.getMaleWornModelId1() <=\r\n\t\t// 1550) {\r\n\t\t// System.out.println(def.getName() + \" \" + i + \": \" +\r\n\t\t// def.getMaleWornModelId1());\r\n\t\t// }\r\n\t\t// }\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the child object definitions.\r\n\t * @param player The player to get it for.\r\n\t * @return The object definition.\r\n\t */\r\n\tpublic NPCDefinition getChildNPC(Player player) {\r\n\t\tif (childNPCIds == null || childNPCIds.length < 1) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tint configValue = -1;\r\n\t\tif (player != null) {\r\n\t\t\tif (configFileId != -1) {\r\n\t\t\t\tconfigValue = ConfigFileDefinition.forId(configFileId).getValue(player);\r\n\t\t\t} else if (configId != -1) {\r\n\t\t\t\tconfigValue = player.getConfigManager().get(configId);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconfigValue = 0;\r\n\t\t}\r\n\t\tif (configValue < 0 || configValue >= childNPCIds.length - 1 || childNPCIds[configValue] == -1) {\r\n\t\t\tint objectId = childNPCIds[childNPCIds.length - 1];\r\n\t\t\tif (objectId != -1) {\r\n\t\t\t\treturn forId(objectId);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\treturn forId(childNPCIds[configValue]);\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the data.\r\n\t * @param buffer The data input stream.\r\n\t */\r\n\tprivate void parse(ByteBuffer buffer) {\r\n\t\twhile (true) {\r\n\t\t\tint opcode = buffer.get() & 0xFF;\r\n\t\t\tif (opcode == 0) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tparseOpcode(buffer, opcode);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parses an opcode.\r\n\t * @param buffer The data input stream.\r\n\t * @param opcode The opcode to parse.\r\n\t */\r\n\tprivate void parseOpcode(ByteBuffer buffer, int opcode) {\r\n\t\tswitch (opcode) {\r\n\t\tcase 1:\r\n\t\t\tint length = buffer.get() & 0xFF;\r\n\t\t\tanIntArray868 = new int[length];\r\n\t\t\tfor (int i_66_ = 0; i_66_ < length; i_66_++) {\r\n\t\t\t\tanIntArray868[i_66_] = buffer.getShort() & 0xFFFF;\r\n\t\t\t\tif ((anIntArray868[i_66_] ^ 0xffffffff) == -65536)\r\n\t\t\t\t\tanIntArray868[i_66_] = -1;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\tname = ByteBufferUtils.getString(buffer);\r\n\t\t\tbreak;\r\n\t\tcase 12:\r\n\t\t\tsize = buffer.get() & 0xFF;\r\n\t\t\tbreak;\r\n\t\tcase 13:\r\n\t\t\tstandAnimation = buffer.getShort();\r\n\t\t\tbreak;\r\n\t\tcase 14:\r\n\t\t\twalkAnimation = buffer.getShort();\r\n\t\t\tbreak;\r\n\t\tcase 15:\r\n\t\t\tturnAnimation = buffer.getShort();\r\n\t\t\tbreak;\r\n\t\tcase 16:\r\n\t\t\tbuffer.getShort(); // Another turn animation\r\n\t\t\tbreak;\r\n\t\tcase 17:\r\n\t\t\twalkAnimation = buffer.getShort();\r\n\t\t\tturn180Animation = buffer.getShort();\r\n\t\t\tturnCWAnimation = buffer.getShort();\r\n\t\t\tturnCCWAnimation = buffer.getShort();\r\n\t\t\tbreak;\r\n\t\tcase 30:\r\n\t\tcase 31:\r\n\t\tcase 32:\r\n\t\tcase 33:\r\n\t\tcase 34:\r\n\t\t\toptions[opcode - 30] = ByteBufferUtils.getString(buffer);\r\n\t\t\tbreak;\r\n\t\tcase 40:\r\n\t\t\tlength = buffer.get() & 0xFF;\r\n\t\t\taShortArray859 = new short[length];\r\n\t\t\taShortArray896 = new short[length];\r\n\t\t\tfor (int i_65_ = 0; (length ^ 0xffffffff) < (i_65_ ^ 0xffffffff); i_65_++) {\r\n\t\t\t\taShortArray896[i_65_] = (short) (buffer.getShort() & 0xFFFF);\r\n\t\t\t\taShortArray859[i_65_] = (short) (buffer.getShort() & 0xFFFF);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 41:\r\n\t\t\tlength = buffer.get() & 0xFF;\r\n\t\t\taShortArray880 = new short[length];\r\n\t\t\taShortArray866 = new short[length];\r\n\t\t\tfor (int i_54_ = 0; (i_54_ ^ 0xffffffff) > (length ^ 0xffffffff); i_54_++) {\r\n\t\t\t\taShortArray880[i_54_] = (short) (buffer.getShort() & 0xFFFF);\r\n\t\t\t\taShortArray866[i_54_] = (short) (buffer.getShort() & 0xFFFF);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 42:\r\n\t\t\tlength = buffer.get() & 0xFF;\r\n\t\t\taByteArray861 = new byte[length];\r\n\t\t\tfor (int i_55_ = 0; length > i_55_; i_55_++) {\r\n\t\t\t\taByteArray861[i_55_] = (byte) buffer.get();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 60:\r\n\t\t\tlength = buffer.get() & 0xFF;\r\n\t\t\tanIntArray892 = new int[length];\r\n\t\t\tfor (int i_64_ = 0; (i_64_ ^ 0xffffffff) > (length ^ 0xffffffff); i_64_++) {\r\n\t\t\t\tanIntArray892[i_64_] = buffer.getShort() & 0xFFFF;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 93:\r\n\t\t\tisVisibleOnMap = false;\r\n\t\t\tbreak;\r\n\t\tcase 95:\r\n\t\t\tsetCombatLevel(buffer.getShort() & 0xFFFF);\r\n\t\t\tbreak;\r\n\t\tcase 97:\r\n\t\t\tanInt864 = buffer.getShort() & 0xFFFF;\r\n\t\t\tbreak;\r\n\t\tcase 98:\r\n\t\t\tanInt899 = buffer.getShort() & 0xFFFF;\r\n\t\t\tbreak;\r\n\t\tcase 99:\r\n\t\t\taBoolean863 = true;\r\n\t\t\tbreak;\r\n\t\tcase 100:\r\n\t\t\tanInt869 = buffer.get();\r\n\t\t\tbreak;\r\n\t\tcase 101:\r\n\t\t\tanInt897 = buffer.get() * 5;\r\n\t\t\tbreak;\r\n\t\tcase 102:\r\n\t\t\theadIcons = buffer.getShort() & 0xFFFF;\r\n\t\t\tbreak;\r\n\t\tcase 103:\r\n\t\t\tanInt853 = buffer.getShort() & 0xFFFF;\r\n\t\t\tbreak;\r\n\t\tcase 106:\r\n\t\tcase 118:\r\n\t\t\tconfigFileId = buffer.getShort() & 0xFFFF;\r\n\t\t\tif (configFileId == 65535) {\r\n\t\t\t\tconfigFileId = -1;\r\n\t\t\t}\r\n\t\t\tconfigId = buffer.getShort() & 0xFFFF;\r\n\t\t\tif (configId == 65535) {\r\n\t\t\t\tconfigId = -1;\r\n\t\t\t}\r\n\t\t\tint defaultValue = -1;\r\n\t\t\tif ((opcode ^ 0xffffffff) == -119) {\r\n\t\t\t\tdefaultValue = buffer.getShort() & 0xFFFF;\r\n\t\t\t\tif (defaultValue == 65535) {\r\n\t\t\t\t\tdefaultValue = -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlength = buffer.get() & 0xFF;\r\n\t\t\tchildNPCIds = new int[2 + length];\r\n\t\t\tfor (int i = 0; length >= i; i++) {\r\n\t\t\t\tchildNPCIds[i] = buffer.getShort() & 0xFFFF;\r\n\t\t\t\tif (childNPCIds[i] == 65535) {\r\n\t\t\t\t\tchildNPCIds[i] = -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tchildNPCIds[length + 1] = defaultValue;\r\n\t\t\tbreak;\r\n\t\tcase 107:\r\n\t\t\taBoolean841 = false;\r\n\t\t\tbreak;\r\n\t\tcase 109:\r\n\t\t\taBoolean852 = false;\r\n\t\t\tbreak;\r\n\t\tcase 111:\r\n\t\t\taBoolean857 = false;\r\n\t\t\tbreak;\r\n\t\tcase 113:\r\n\t\t\taShort862 = (short) (buffer.getShort() & 0xFFFF);\r\n\t\t\taShort894 = (short) (buffer.getShort() & 0xFFFF);\r\n\t\t\tbreak;\r\n\t\tcase 114:\r\n\t\t\taByte851 = (byte) (buffer.get());\r\n\t\t\taByte854 = (byte) (buffer.get());\r\n\t\t\tbreak;\r\n\t\tcase 115:\r\n\t\t\tbuffer.get();// & 0xFF;\r\n\t\t\tbuffer.get();// & 0xFF;\r\n\t\t\tbreak;\r\n\t\tcase 119:\r\n\t\t\tbuffer.get();\r\n\t\t\tbreak;\r\n\t\tcase 121:\r\n\t\t\tlength = buffer.get() & 0xFF;\r\n\t\t\tfor (int i = 0; i < length; i++) {\r\n\t\t\t\tbuffer.get();\r\n\t\t\t\tbuffer.get();\r\n\t\t\t\tbuffer.get();\r\n\t\t\t\tbuffer.get();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 122:\r\n\t\t\tbuffer.getShort();\r\n\t\t\tbreak;\r\n\t\tcase 123:\r\n\t\t\tbuffer.getShort();\r\n\t\t\tbreak;\r\n\t\tcase 125:\r\n\t\t\tbuffer.get();\r\n\t\t\tbreak;\r\n\t\tcase 126:\r\n\t\t\tbuffer.getShort();\r\n\t\tcase 127:\r\n\t\t\trenderAnimationId = buffer.getShort();\r\n\t\t\tbreak;\r\n\t\tcase 128:\r\n\t\t\tbuffer.get();\r\n\t\t\tbreak;\r\n\t\tcase 134:\r\n\t\t\tbuffer.getShort();\r\n\t\t\tbuffer.getShort();\r\n\t\t\tbuffer.getShort();\r\n\t\t\tbuffer.getShort();\r\n\t\t\tbuffer.get();\r\n\t\t\tbreak;\r\n\t\tcase 135:\r\n\t\t\tbuffer.get();\r\n\t\t\tbuffer.getShort();\r\n\t\t\tbreak;\r\n\t\tcase 136:\r\n\t\t\tbuffer.get();\r\n\t\t\tbuffer.getShort();\r\n\t\t\tbreak;\r\n\t\tcase 137:\r\n\t\t\tbuffer.getShort();\r\n\t\t\tbreak;\r\n\t\tcase 249:\r\n\t\t\tlength = buffer.get() & 0xFF;\r\n\t\t\tfor (int i = 0; i < length; i++) {\r\n\t\t\t\tboolean string = buffer.get() == 1;\r\n\t\t\t\tByteBufferUtils.getTriByte(buffer); // script id\r\n\t\t\t\tif (!string) {\r\n\t\t\t\t\tbuffer.getInt(); // Value\r\n\t\t\t\t} else {\r\n\t\t\t\t\tByteBufferUtils.getString(buffer); // value\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\t//System.err.println(\"Unhandled NPC definition opcode: \" + opcode);\r\n\t\t}\r\n\t\tif (id == 3074) {\r\n\t\t\tsetName(\"Monk\");\r\n\t\t\toptions[0] = \"Talk-to\";\r\n\t\t}\r\n\t\tif (id == 2020) {\r\n\t\t\tsetName(\"Vanstrom Klause\");\r\n\t\t}\r\n\t\tif (id == 381) {\r\n\t\t\tsetName(\"Captain Barnaby\");\r\n\t\t\toptions[0] = \"Talk-to\";\r\n\t\t\toptions[2] = \"Pay-fare\";\r\n\t\t}\r\n\t\tif (id == 3820) {\r\n\t\t\tsetName(\"Wise Old Man\");\r\n\t\t\toptions[0] = \"Talk-to\";\r\n\t\t}\r\n\t\tif (id == 4495) {\r\n\t\t\tsetName(\"Grubfoot\");\r\n\t\t\toptions[0] = \"Talk-to\";\r\n\t\t}\r\n\t\tif (id == 7707) {\r\n\t\t\tsetName(\"Drezel\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this NPC has an attack option.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasAttackOption() {\r\n\t\tfor (String option : options) {\r\n\t\t\tif (option != null && option.equalsIgnoreCase(\"attack\")) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the option handler for the given option name.\r\n\t * @param nodeId The node id.\r\n\t * @param name The name.\r\n\t * @return The option handler, or {@code null} if there was no default\r\n\t * option handler.\r\n\t */\r\n\tpublic static OptionHandler getOptionHandler(int nodeId, String name) {\r\n\t\tNPCDefinition def = forId(nodeId);\r\n\t\tOptionHandler handler = def.getConfiguration(\"option:\" + name);\r\n\t\tif (handler != null) {\r\n\t\t\treturn handler;\r\n\t\t}\r\n\t\treturn OPTION_HANDLERS.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if an npc has an reward.\r\n\t * @param optionName The option name.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasAction(String optionName) {\r\n\t\tif (options == null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfor (String action : options) {\r\n\t\t\tif (action == null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (action.equalsIgnoreCase(optionName)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the default option handler for an option.\r\n\t * @param name The option name.\r\n\t * @param handler The default option handler.\r\n\t * @return {@code True} if there was a previous default handler mapped.\r\n\t */\r\n\tpublic static boolean setOptionHandler(String name, OptionHandler handler) {\r\n\t\treturn OPTION_HANDLERS.put(name, handler) != null;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the option handlers.\r\n\t * @return The option handlers.\r\n\t */\r\n\tpublic static Map<String, OptionHandler> getOptionHandlers() {\r\n\t\treturn OPTION_HANDLERS;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the definitions mapping.\r\n\t * @return The mapping.\r\n\t */\r\n\tpublic static final Map<Integer, NPCDefinition> getDefinitions() {\r\n\t\treturn DEFINITIONS;\r\n\t}\r\n\r\n\t/**\r\n\t * Method returns the value for 'examine'\r\n\t * @return the examine.\r\n\t */\r\n\tpublic final String getExamine() {\r\n\t\tString string = getConfiguration(NPCConfigSQLHandler.EXAMINE, examine);\r\n\t\tif (string != null) {\r\n\t\t\treturn string;\r\n\t\t}\r\n\t\tif (name.length() <= 1) {\r\n\t\t\treturn string;\r\n\t\t}\r\n\t\treturn \"It's a\" + (StringUtils.isPlusN(name) ? \"n \" : \" \") + name + \".\";\r\n\t}\r\n\r\n\t/**\r\n\t * Method sets the value for 'examine'\r\n\t * @param examine the examine to set.\r\n\t */\r\n\tpublic final void setExamine(String examine) {\r\n\t\tthis.examine = examine;\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the combat graphics.\r\n\t * @param config The configurations.\r\n\t */\r\n\tpublic void initCombatGraphics(Map<String, Object> config) {\r\n\t\tif (config.containsKey(NPCConfigSQLHandler.START_GRAPHIC)) {\r\n\t\t\tcombatGraphics[0] = new Graphics((Integer) config.get(NPCConfigSQLHandler.START_GRAPHIC), getConfiguration(NPCConfigSQLHandler.START_HEIGHT, 0));\r\n\t\t}\r\n\t\tif (config.containsKey(NPCConfigSQLHandler.PROJECTILE)) {\r\n\t\t\tcombatGraphics[1] = new Graphics((Integer) config.get(NPCConfigSQLHandler.PROJECTILE), getConfiguration(NPCConfigSQLHandler.PROJECTILE_HEIGHT, 42));\r\n\t\t}\r\n\t\tif (config.containsKey(NPCConfigSQLHandler.END_GRAPHIC)) {\r\n\t\t\tcombatGraphics[2] = new Graphics((Integer) config.get(NPCConfigSQLHandler.END_GRAPHIC), getConfiguration(NPCConfigSQLHandler.END_HEIGHT, 96));\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Gets the combat animation. \r\n\t * @param index The index.\r\n\t * @return The Animation.\r\n\t */\r\n\tpublic Animation getCombatAnimation(int index) {\r\n\t\tString name = \"\";\r\n\t\tswitch (index) {\r\n\t\tcase 0:\r\n\t\t\tname = NPCConfigSQLHandler.MELEE_ANIMATION;\r\n\t\t\tbreak;\r\n\t\tcase 1:\r\n\t\t\tname = NPCConfigSQLHandler.MAGIC_ANIMATION;\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\tname = NPCConfigSQLHandler.RANGE_ANIMATION;\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\tname = NPCConfigSQLHandler.DEFENCE_ANIMATION;\r\n\t\t\tbreak;\r\n\t\tcase 4:\r\n\t\t\tname = NPCConfigSQLHandler.DEATH_ANIMATION;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn getConfiguration(name, null);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the size.\r\n\t * @return The size.\r\n\t */\r\n\tpublic int getSize() {\r\n\t\treturn size;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the headIcons.\r\n\t * @return The headIcons.\r\n\t */\r\n\tpublic int getHeadIcons() {\r\n\t\treturn headIcons;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the isVisibleOnMap.\r\n\t * @return The isVisibleOnMap.\r\n\t */\r\n\tpublic boolean isVisibleOnMap() {\r\n\t\treturn isVisibleOnMap;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt833.\r\n\t * @return The anInt833.\r\n\t */\r\n\tpublic int getAnInt833() {\r\n\t\treturn anInt833;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt836.\r\n\t * @return The anInt836.\r\n\t */\r\n\tpublic int getAnInt836() {\r\n\t\treturn anInt836;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt837.\r\n\t * @return The anInt837.\r\n\t */\r\n\tpublic int getAnInt837() {\r\n\t\treturn anInt837;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the aBoolean841.\r\n\t * @return The aBoolean841.\r\n\t */\r\n\tpublic boolean isaBoolean841() {\r\n\t\treturn aBoolean841;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt842.\r\n\t * @return The anInt842.\r\n\t */\r\n\tpublic int getAnInt842() {\r\n\t\treturn anInt842;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the configFileId.\r\n\t * @return The configFileId.\r\n\t */\r\n\tpublic int getConfigFileId() {\r\n\t\treturn configFileId;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the childNPCIds.\r\n\t * @return The childNPCIds.\r\n\t */\r\n\tpublic int[] getChildNPCIds() {\r\n\t\treturn childNPCIds;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt846.\r\n\t * @return The anInt846.\r\n\t */\r\n\tpublic int getAnInt846() {\r\n\t\treturn anInt846;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt850.\r\n\t * @return The anInt850.\r\n\t */\r\n\tpublic int getAnInt850() {\r\n\t\treturn anInt850;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the aByte851.\r\n\t * @return The aByte851.\r\n\t */\r\n\tpublic byte getaByte851() {\r\n\t\treturn aByte851;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the aBoolean852.\r\n\t * @return The aBoolean852.\r\n\t */\r\n\tpublic boolean isaBoolean852() {\r\n\t\treturn aBoolean852;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt853.\r\n\t * @return The anInt853.\r\n\t */\r\n\tpublic int getAnInt853() {\r\n\t\treturn anInt853;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the aByte854.\r\n\t * @return The aByte854.\r\n\t */\r\n\tpublic byte getaByte854() {\r\n\t\treturn aByte854;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the aBoolean856.\r\n\t * @return The aBoolean856.\r\n\t */\r\n\tpublic boolean isaBoolean856() {\r\n\t\treturn aBoolean856;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the aBoolean857.\r\n\t * @return The aBoolean857.\r\n\t */\r\n\tpublic boolean isaBoolean857() {\r\n\t\treturn aBoolean857;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the aShortArray859.\r\n\t * @return The aShortArray859.\r\n\t */\r\n\tpublic short[] getaShortArray859() {\r\n\t\treturn aShortArray859;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the aByteArray861.\r\n\t * @return The aByteArray861.\r\n\t */\r\n\tpublic byte[] getaByteArray861() {\r\n\t\treturn aByteArray861;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the aShort862.\r\n\t * @return The aShort862.\r\n\t */\r\n\tpublic short getaShort862() {\r\n\t\treturn aShort862;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the aBoolean863.\r\n\t * @return The aBoolean863.\r\n\t */\r\n\tpublic boolean isaBoolean863() {\r\n\t\treturn aBoolean863;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt864.\r\n\t * @return The anInt864.\r\n\t */\r\n\tpublic int getAnInt864() {\r\n\t\treturn anInt864;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the aShortArray866.\r\n\t * @return The aShortArray866.\r\n\t */\r\n\tpublic short[] getaShortArray866() {\r\n\t\treturn aShortArray866;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anIntArray868.\r\n\t * @return The anIntArray868.\r\n\t */\r\n\tpublic int[] getAnIntArray868() {\r\n\t\treturn anIntArray868;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt869.\r\n\t * @return The anInt869.\r\n\t */\r\n\tpublic int getAnInt869() {\r\n\t\treturn anInt869;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt870.\r\n\t * @return The anInt870.\r\n\t */\r\n\tpublic int getAnInt870() {\r\n\t\treturn anInt870;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt871.\r\n\t * @return The anInt871.\r\n\t */\r\n\tpublic int getAnInt871() {\r\n\t\treturn anInt871;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt872.\r\n\t * @return The anInt872.\r\n\t */\r\n\tpublic int getAnInt872() {\r\n\t\treturn anInt872;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt874.\r\n\t * @return The anInt874.\r\n\t */\r\n\tpublic int getAnInt874() {\r\n\t\treturn anInt874;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt875.\r\n\t * @return The anInt875.\r\n\t */\r\n\tpublic int getAnInt875() {\r\n\t\treturn anInt875;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt876.\r\n\t * @return The anInt876.\r\n\t */\r\n\tpublic int getAnInt876() {\r\n\t\treturn anInt876;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt879.\r\n\t * @return The anInt879.\r\n\t */\r\n\tpublic int getAnInt879() {\r\n\t\treturn anInt879;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the aShortArray880.\r\n\t * @return The aShortArray880.\r\n\t */\r\n\tpublic short[] getaShortArray880() {\r\n\t\treturn aShortArray880;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt884.\r\n\t * @return The anInt884.\r\n\t */\r\n\tpublic int getAnInt884() {\r\n\t\treturn anInt884;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the configId.\r\n\t * @return The configId.\r\n\t */\r\n\tpublic int getConfigId() {\r\n\t\treturn configId;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt889.\r\n\t * @return The anInt889.\r\n\t */\r\n\tpublic int getAnInt889() {\r\n\t\treturn anInt889;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anIntArray892.\r\n\t * @return The anIntArray892.\r\n\t */\r\n\tpublic int[] getAnIntArray892() {\r\n\t\treturn anIntArray892;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the aShort894.\r\n\t * @return The aShort894.\r\n\t */\r\n\tpublic short getaShort894() {\r\n\t\treturn aShort894;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the aShortArray896.\r\n\t * @return The aShortArray896.\r\n\t */\r\n\tpublic short[] getaShortArray896() {\r\n\t\treturn aShortArray896;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt897.\r\n\t * @return The anInt897.\r\n\t */\r\n\tpublic int getAnInt897() {\r\n\t\treturn anInt897;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt899.\r\n\t * @return The anInt899.\r\n\t */\r\n\tpublic int getAnInt899() {\r\n\t\treturn anInt899;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the anInt901.\r\n\t * @return The anInt901.\r\n\t */\r\n\tpublic int getAnInt901() {\r\n\t\treturn anInt901;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the standAnimation.\r\n\t * @return The standAnimation.\r\n\t */\r\n\tpublic int getStandAnimation() {\r\n\t\treturn standAnimation;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the walkAnimation.\r\n\t * @return The walkAnimation.\r\n\t */\r\n\tpublic int getWalkAnimation() {\r\n\t\treturn walkAnimation;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the turnAnimation.\r\n\t * @return The turnAnimation.\r\n\t */\r\n\tpublic int getTurnAnimation() {\r\n\t\treturn turnAnimation;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the turn180Animation.\r\n\t * @return The turn180Animation.\r\n\t */\r\n\tpublic int getTurn180Animation() {\r\n\t\treturn turn180Animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the turnCWAnimation.\r\n\t * @return The turnCWAnimation.\r\n\t */\r\n\tpublic int getTurnCWAnimation() {\r\n\t\treturn turnCWAnimation;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the turnCCWAnimation.\r\n\t * @return The turnCCWAnimation.\r\n\t */\r\n\tpublic int getTurnCCWAnimation() {\r\n\t\treturn turnCCWAnimation;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the dropTables.\r\n\t */\r\n\tpublic NPCDropTables getDropTables() {\r\n\t\treturn dropTables;\r\n\t}\r\n\r\n\t/**\r\n\t * @param dropTables the dropTables to set.\r\n\t */\r\n\tpublic void setDropTables(NPCDropTables dropTables) {\r\n\t\tthis.dropTables = dropTables;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the combatLevel.\r\n\t * @return The combatLevel.\r\n\t */\r\n\tpublic int getCombatLevel() {\r\n\t\treturn combatLevel;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the combatLevel.\r\n\t * @param combatLevel The combatLevel to set.\r\n\t */\r\n\tpublic void setCombatLevel(int combatLevel) {\r\n\t\tthis.combatLevel = combatLevel;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the combatDistance.\r\n\t * @return The combatDistance.\r\n\t */\r\n\tpublic int getCombatDistance() {\r\n\t\treturn combatDistance;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the combatDistance.\r\n\t * @param combatDistance The combatDistance to set.\r\n\t */\r\n\tpublic void setCombatDistance(int combatDistance) {\r\n\t\tthis.combatDistance = combatDistance;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the combatGraphics.\r\n\t * @return The combatGraphics.\r\n\t */\r\n\tpublic Graphics[] getCombatGraphics() {\r\n\t\treturn combatGraphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the combatGraphics.\r\n\t * @param combatGraphics The combatGraphics to set.\r\n\t */\r\n\tpublic void setCombatGraphics(Graphics[] combatGraphics) {\r\n\t\tthis.combatGraphics = combatGraphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the renderAnimationId value.\r\n\t * @return The renderAnimationId.\r\n\t */\r\n\tpublic int getRenderAnimationId() {\r\n\t\treturn renderAnimationId;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the renderAnimationId value.\r\n\t * @param renderAnimationId The renderAnimationId to set.\r\n\t */\r\n\tpublic void setRenderAnimationId(int renderAnimationId) {\r\n\t\tthis.renderAnimationId = renderAnimationId;\r\n\t}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/cache/def/impl/NPCDefinition.java	(revision 25177c7389a44663bd7623221b75d446b8940c03)
+++ Server/src/main/java/Server/core/cache/def/impl/NPCDefinition.java	(date 1594953850973)
@@ -1,10 +1,5 @@
 package core.cache.def.impl;
 
-import java.nio.ByteBuffer;
-import java.util.HashMap;
-import java.util.Map;
-
-import core.tools.StringUtils;
 import core.cache.Cache;
 import core.cache.def.Definition;
 import core.cache.misc.buffer.ByteBufferUtils;
@@ -16,6 +11,11 @@
 import core.game.world.GameWorld;
 import core.game.world.update.flag.context.Animation;
 import core.game.world.update.flag.context.Graphics;
+import core.tools.StringUtils;
+
+import java.nio.ByteBuffer;
+import java.util.HashMap;
+import java.util.Map;
 
 /**
  * Debug NPC Opcodes Line 483, Uncomment
@@ -112,8 +112,7 @@
 	public int anInt901;
 	public int standAnimation;
 	public int walkAnimation;
-	
-	private int renderAnimationId;
+	public int renderAnimationId;
 
 	/**
 	 * The minimum combat distance (0 uses default distances).
@@ -509,6 +508,9 @@
 		}
 		if (id == 7707) {
 			setName("Drezel");
+		}
+		if (id == 1) {
+
 		}
 	}
 
Index: Server/worldprops/server1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><worldprops>\r\n    <GameSettings\r\n    name=\"2009scape\"\r\n    beta=\"false\"\r\n    dev=\"false\"\r\n    startGui=\"false\"\r\n    worldID=\"1\"\r\n    countryID=\"0\"\r\n    activity=\"2009scape\"\r\n    pvpWorld=\"false\"\r\n    msip=\"127.0.0.1\"\r\n    />\r\n\r\n    <!--Plugin configuration goes down here-->\r\n    <PluginSetting name=\"Trivia\" enabled=\"true\"/>\r\n    <PluginSetting name=\"RPS\" enabled=\"false\"/>\r\n    <PluginSetting name=\"Boredom\" enabled=\"false\"/>\r\n    <PluginSetting name=\"ShootingStars\" enabled=\"false\"/>\r\n    <PluginSetting name=\"MysteryBox\" enabled=\"false\"/>\r\n    <PluginSetting name=\"PKZone\" enabled=\"false\"/>\r\n    <PluginSetting name=\"ObjectParser\" enabled=\"true\"/>\r\n    <PluginSetting name=\"BlackJack\" enabled=\"false\"/>\r\n\r\n</worldprops>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/worldprops/server1.xml	(revision 25177c7389a44663bd7623221b75d446b8940c03)
+++ Server/worldprops/server1.xml	(date 1594954381461)
@@ -1,24 +1,23 @@
 <worldprops>
     <GameSettings
-    name="2009scape"
+    name="2009scapeDev"
     beta="false"
     dev="false"
     startGui="false"
-    worldID="1"
-    countryID="0"
-    activity="2009scape"
-    pvpWorld="false"
-    msip="127.0.0.1"
-    />
+    worldID="3"
+    countryID="1"
+    activity="2009scape Development"
+    pvpWorld="true"
+    msip="192.168.1.180"
+    /><!--192.168.1.180-->
 
     <!--Plugin configuration goes down here-->
-    <PluginSetting name="Trivia" enabled="true"/>
+    <PluginSetting name="Trivia" enabled="false"/>
     <PluginSetting name="RPS" enabled="false"/>
     <PluginSetting name="Boredom" enabled="false"/>
     <PluginSetting name="ShootingStars" enabled="false"/>
     <PluginSetting name="MysteryBox" enabled="false"/>
     <PluginSetting name="PKZone" enabled="false"/>
     <PluginSetting name="ObjectParser" enabled="true"/>
-    <PluginSetting name="BlackJack" enabled="false"/>
 
 </worldprops>
\ No newline at end of file
Index: Server/src/main/java/Server/plugin/skill/agility/WildernessCourse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.skill.agility;\r\n\r\nimport core.cache.def.impl.ObjectDefinition;\r\nimport core.game.content.global.action.DoorActionHandler;\r\nimport plugin.skill.Skills;\r\nimport core.game.node.Node;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.object.GameObject;\r\nimport core.game.system.task.LocationLogoutTask;\r\nimport core.game.system.task.LogoutTask;\r\nimport core.game.system.task.Pulse;\r\nimport core.game.world.GameWorld;\r\nimport core.game.world.map.Location;\r\nimport core.game.world.map.RegionManager;\r\nimport core.game.world.update.flag.context.Animation;\r\nimport core.plugin.InitializablePlugin;\r\n\r\n/**\r\n * Handles the wilderness agility course.\r\n * @author 'Vexia\r\n */\r\n@InitializablePlugin\r\npublic final class WildernessCourse extends AgilityCourse {\r\n\r\n\t/**\r\n\t * The rope delay.\r\n\t */\r\n\tprivate static int ropeDelay;\r\n\r\n\t/**\r\n\t * Constructs a new {@code WildernessCourse} {@code Object}.\r\n\t */\r\n\tpublic WildernessCourse() {\r\n\t\tthis(null);\r\n\t}\r\n\r\n\t/**\r\n\t * Constructs a new {@code WildernessCourse} {@code Object}.\r\n\t * @param player the player.\r\n\t */\r\n\tpublic WildernessCourse(Player player) {\r\n\t\tsuper(player, 5, 499);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean handle(final Player player, Node node, String option) {\r\n\t\tgetCourse(player); // Sets the extension.\r\n\t\tGameObject object = (GameObject) node;\r\n\t\tswitch (object.getId()) {\r\n\t\tcase 2309:\r\n\t\t\thandleEntrance(player, object);\r\n\t\t\tbreak;\r\n\t\tcase 2307:\r\n\t\tcase 2308:\r\n\t\t\tDoorActionHandler.handleAutowalkDoor(player, object);\r\n\t\t\thandleEntranceObstacle(player, object);\r\n\t\t\tbreak;\r\n\t\tcase 2288:\r\n\t\t\thandlePipe(player, object);\r\n\t\t\tbreak;\r\n\t\tcase 2283:\r\n\t\t\thandleRopeSwing(player, object);\r\n\t\t\tbreak;\r\n\t\tcase 37704:\r\n\t\t\thandleSteppingStones(player, object);\r\n\t\t\tbreak;\r\n\t\tcase 2297:\r\n\t\t\thandleLogBalance(player, object);\r\n\t\t\tbreak;\r\n\t\tcase 2328:\r\n\t\t\thandleRockClimb(player, object);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the door entrance.\r\n\t * @param player the player.\r\n\t * @param object the object.\r\n\t */\r\n\tprivate void handleEntrance(final Player player, final GameObject object) {\r\n\t\tif (player.getLocation().getY() > 3916 || player.getSkills().getLevel(Skills.AGILITY) >= 52) {\r\n\t\t\tDoorActionHandler.handleAutowalkDoor(player, object);\r\n\t\t\tif (player.getLocation().getY() <= 3916) {\r\n\t\t\t\thandleEntranceObstacle(player, object);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tplayer.getDialogueInterpreter().sendDialogue(\"You need an Agility level of at least 52 to enter.\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the entrance obstacle.\r\n\t * @param player the player.\r\n\t * @param object the object.\r\n\t */\r\n\tprivate void handleEntranceObstacle(final Player player, final GameObject object) {\r\n\t\tGameWorld.Pulser.submit(new Pulse(1, player) {\r\n\t\t\tint counter;\r\n\t\t\tfinal boolean fail = AgilityHandler.hasFailed(player, 1, 0.3);\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic boolean pulse() {\r\n\t\t\t\tswitch (++counter) {\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tfinal Location end = fail ? Location.create(2998, 3924, 0) : object.getId() < 2309 ? Location.create(2998, 3917, 0) : Location.create(2998, 3930, 0);\r\n\t\t\t\t\tfinal Location start = object.getId() < 2309 ? player.getLocation() : Location.create(2998, 3917, 0);\r\n\t\t\t\t\tplayer.getPacketDispatch().sendMessage(\"You go through the gate and try to edge over the ridge...\");\r\n\t\t\t\t\tAgilityHandler.walk(player, -1, start, end, Animation.create(155), fail ? 0.0 : 15.00, fail ? \"You loose your footing and fail into the wolf pit.\" : \"You skillfully balance across the ridge...\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 9:\r\n\t\t\t\t\tif (fail) {\r\n\t\t\t\t\t\tAgilityHandler.fail(player, 0, player.getLocation().transform(object.getId() < 2309 ? -2 : 2, 0, 0), Animation.create(object.getId() < 2309 ? 771 : 771), getHitAmount(player), null);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn fail;\r\n\t\t\t\tcase 15:\r\n\t\t\t\t\tplayer.lock(3);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 16:\r\n\t\t\t\t\tLocation doorLoc = object.getId() < 2309 ? new Location(2998, 3917, 0) : new Location(2998, 3931, 0);\r\n\t\t\t\t\tDoorActionHandler.handleAutowalkDoor(player, RegionManager.getObject(doorLoc));\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the pipe obstacle.\r\n\t * @param player the pipe.\r\n\t * @param object the object.\r\n\t */\r\n\tprivate void handlePipe(final Player player, final GameObject object) {\r\n\t\tif (object.getLocation().getY() == 3948) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"You can't do that from here.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (player.getSkills().getLevel(Skills.AGILITY) < 49) {\r\n\t\t\tplayer.getDialogueInterpreter().sendDialogue(\"You need an Agility level of at least 49 to do this.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tplayer.lock(12);\r\n\t\tGameWorld.Pulser.submit(new Pulse(1, player) {\r\n\t\t\t@Override\r\n\t\t\tpublic boolean pulse() {\r\n\t\t\t\tint x = 3004;\r\n\t\t\t\tAgilityHandler.forceWalk(player, -1, Location.create(x, 3937, 0), Location.create(x, 3939, 0), Animation.create(749), 10, 0, null);\r\n\t\t\t\tAgilityHandler.forceWalk(player, -1, Location.create(x, 3939, 0), Location.create(x, 3948, 0), Animation.create(844), 10, 0, null, 1);\r\n\t\t\t\tAgilityHandler.forceWalk(player, 0, Location.create(x, 3948, 0), Location.create(x, 3950, 0), Animation.create(748), 20, 12.5, null, 14);\r\n\t\t\t\tplayer.addExtension(LogoutTask.class, new LocationLogoutTask(14, Location.create(3004, 3937, 0)));\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the rope swing obstacle.\r\n\t * @param player the player.\r\n\t * @param object the object.\r\n\t */\r\n\tprivate void handleRopeSwing(final Player player, final GameObject object) {\r\n\t\tif (player.getLocation().getY() < 3554) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"You cannot do that from here.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (ropeDelay > GameWorld.getTicks()) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"The rope is being used.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (AgilityHandler.hasFailed(player, 1, 0.1)) {\r\n\t\t\tAgilityHandler.fail(player, 0, Location.create(3005, 10357, 0), null, getHitAmount(player), \"You slip and fall to the pit bellow.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tropeDelay = GameWorld.getTicks() + 2;\r\n\t\tplayer.getPacketDispatch().sendObjectAnimation(object, Animation.create(497), true);\r\n\t\tAgilityHandler.forceWalk(player, 1, player.getLocation(), Location.create(3005, 3958, 0), Animation.create(751), 50, 20, \"You skillfully swing across.\", 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the stepping stone obstacle.\r\n\t * @param player the player.\r\n\t * @param object the object.\r\n\t */\r\n\tprivate void handleSteppingStones(final Player player, final GameObject object) {\r\n\t\tfinal boolean fail = AgilityHandler.hasFailed(player, 1, 0.3);\r\n\t\tplayer.addExtension(LogoutTask.class, new LocationLogoutTask(12, player.getLocation()));\r\n\t\tGameWorld.Pulser.submit(new Pulse(2, player) {\r\n\t\t\tint counter;\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic boolean pulse() {\r\n\t\t\t\tif (counter == 3 && fail) {\r\n\t\t\t\t\tAgilityHandler.fail(player, -1, Location.create(3001, 3963, 0), Animation.create(771), (int) (player.getSkills().getLifepoints() * 0.26), \"...You lose your footing and fall into the lava.\");\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tAgilityHandler.forceWalk(player, counter == 5 ? 2 : -1, player.getLocation(), player.getLocation().transform(-1, 0, 0), Animation.create(741), 10, counter == 5 ? 20 : 0, counter != 0 ? null : \"You carefully start crossing the stepping stones...\");\r\n\t\t\t\treturn ++counter == 6;\r\n\t\t\t}\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic void stop() {\r\n\t\t\t\tsuper.stop();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the log balance obstacle.\r\n\t * @param player the player.\r\n\t * @param object the object.\r\n\t */\r\n\tprivate void handleLogBalance(final Player player, final GameObject object) {\r\n\t\tfinal boolean failed = AgilityHandler.hasFailed(player, 1, 0.5);\r\n\t\tfinal Location end = failed ? Location.create(2998, 3945, 0) : Location.create(2994, 3945, 0);\r\n\t\tplayer.getPacketDispatch().sendMessage(\"You walk carefully across the slippery log...\");\r\n\t\tAgilityHandler.walk(player, failed ? -1 : 3, player.getLocation(), end, Animation.create(155), failed ? 0.0 : 20, failed ? null : \"You skillfully edge across the gap.\");\r\n\t\tif (failed) {\r\n\t\t\tGameWorld.Pulser.submit(new Pulse(5, player) {\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic boolean pulse() {\r\n\t\t\t\t\tplayer.faceLocation(Location.create(2998, 3944, 0));\r\n\t\t\t\t\tAgilityHandler.fail(player, 3, Location.create(2998, 10345, 0), Animation.create(770), getHitAmount(player), \"You slip and fall onto the spikes below.\");\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the rock climbing obstacle.\r\n\t * @param player the player.\r\n\t * @param object the object.\r\n\t */\r\n\tprivate void handleRockClimb(final Player player, final GameObject object) {\r\n\t\tAgilityHandler.walk(player, 4, player.getLocation(), player.getLocation().transform(0, -4, 0), Animation.create(740), 0, \"You reach the top.\");\r\n\t\tGameWorld.Pulser.submit(new Pulse(4, player) {\r\n\t\t\t@Override\r\n\t\t\tpublic boolean pulse() {\r\n\t\t\t\tplayer.getAnimator().reset();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Location getDestination(Node node, Node n) {\r\n\t\tswitch (n.getId()) {\r\n\t\tcase 2283:\r\n\t\t\treturn Location.create(3005, 3953, 0);\r\n\t\tcase 37704:\r\n\t\t\treturn Location.create(3002, 3960, 0);\r\n\t\tcase 2297:\r\n\t\t\treturn Location.create(3002, 3945, 0);\r\n\t\tcase 2328:\r\n\t\t\treturn n.getLocation().transform(0, 1, 0);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void configure() {\r\n\t\tObjectDefinition.forId(2309).getConfigurations().put(\"option:open\", this);\r\n\t\tObjectDefinition.forId(2308).getConfigurations().put(\"option:open\", this);\r\n\t\tObjectDefinition.forId(2307).getConfigurations().put(\"option:open\", this);\r\n\t\tObjectDefinition.forId(2288).getConfigurations().put(\"option:squeeze-through\", this);\r\n\t\tObjectDefinition.forId(2283).getConfigurations().put(\"option:swing-on\", this);\r\n\t\tObjectDefinition.forId(37704).getConfigurations().put(\"option:cross\", this);\r\n\t\tObjectDefinition.forId(2297).getConfigurations().put(\"option:walk-across\", this);\r\n\t\tObjectDefinition.forId(2328).getConfigurations().put(\"option:climb\", this);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic AgilityCourse createInstance(Player player) {\r\n\t\treturn new WildernessCourse(player);\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/skill/agility/WildernessCourse.java	(revision 25177c7389a44663bd7623221b75d446b8940c03)
+++ Server/src/main/java/Server/plugin/skill/agility/WildernessCourse.java	(date 1594771823730)
@@ -2,6 +2,7 @@
 
 import core.cache.def.impl.ObjectDefinition;
 import core.game.content.global.action.DoorActionHandler;
+import core.game.node.entity.player.link.TeleportManager;
 import plugin.skill.Skills;
 import core.game.node.Node;
 import core.game.node.entity.player.Player;
@@ -17,7 +18,7 @@
 
 /**
  * Handles the wilderness agility course.
- * @author 'Vexia
+ * @author Woah
  */
 @InitializablePlugin
 public final class WildernessCourse extends AgilityCourse {
@@ -47,29 +48,29 @@
 		getCourse(player); // Sets the extension.
 		GameObject object = (GameObject) node;
 		switch (object.getId()) {
-		case 2309:
-			handleEntrance(player, object);
-			break;
-		case 2307:
-		case 2308:
-			DoorActionHandler.handleAutowalkDoor(player, object);
-			handleEntranceObstacle(player, object);
-			break;
-		case 2288:
-			handlePipe(player, object);
-			break;
-		case 2283:
-			handleRopeSwing(player, object);
-			break;
-		case 37704:
-			handleSteppingStones(player, object);
-			break;
-		case 2297:
-			handleLogBalance(player, object);
-			break;
-		case 2328:
-			handleRockClimb(player, object);
-			break;
+			case 2309:
+				handleEntrance(player, object);
+				break;
+			case 2307:
+			case 2308:
+				DoorActionHandler.handleAutowalkDoor(player, object);
+				handleEntranceObstacle(player, object);
+				break;
+			case 2288:
+				handlePipe(player, object);
+				break;
+			case 2283:
+				handleRopeSwing(player, object);
+				break;
+			case 37704:
+				handleSteppingStones(player, object);
+				break;
+			case 2297:
+				handleLogBalance(player, object);
+				break;
+			case 2328:
+				handleRockClimb(player, object);
+				break;
 		}
 		return true;
 	}
@@ -103,24 +104,24 @@
 			@Override
 			public boolean pulse() {
 				switch (++counter) {
-				case 2:
-					final Location end = fail ? Location.create(2998, 3924, 0) : object.getId() < 2309 ? Location.create(2998, 3917, 0) : Location.create(2998, 3930, 0);
-					final Location start = object.getId() < 2309 ? player.getLocation() : Location.create(2998, 3917, 0);
-					player.getPacketDispatch().sendMessage("You go through the gate and try to edge over the ridge...");
-					AgilityHandler.walk(player, -1, start, end, Animation.create(155), fail ? 0.0 : 15.00, fail ? "You loose your footing and fail into the wolf pit." : "You skillfully balance across the ridge...");
-					break;
-				case 9:
-					if (fail) {
-						AgilityHandler.fail(player, 0, player.getLocation().transform(object.getId() < 2309 ? -2 : 2, 0, 0), Animation.create(object.getId() < 2309 ? 771 : 771), getHitAmount(player), null);
-					}
-					return fail;
-				case 15:
-					player.lock(3);
-					break;
-				case 16:
-					Location doorLoc = object.getId() < 2309 ? new Location(2998, 3917, 0) : new Location(2998, 3931, 0);
-					DoorActionHandler.handleAutowalkDoor(player, RegionManager.getObject(doorLoc));
-					return true;
+					case 2:
+						final Location end = fail ? Location.create(2998, 3924, 0) : object.getId() < 2309 ? Location.create(2998, 3917, 0) : Location.create(2998, 3930, 0);
+						final Location start = object.getId() < 2309 ? player.getLocation() : Location.create(2998, 3917, 0);
+						player.getPacketDispatch().sendMessage("You go through the gate and try to edge over the ridge...");
+						AgilityHandler.walk(player, -1, start, end, Animation.create(155), fail ? 0.0 : 15.00, fail ? "You loose your footing and fail into the wolf pit." : "You skillfully balance across the ridge...");
+						break;
+					case 9:
+						if (fail) {
+							AgilityHandler.fail(player, 0, player.getLocation().transform(object.getId() < 2309 ? -2 : 2, 0, 0), Animation.create(object.getId() < 2309 ? 771 : 771), getHitAmount(player), null);
+						}
+						return fail;
+					case 15:
+						player.lock(3);
+						break;
+					case 16:
+						Location doorLoc = object.getId() < 2309 ? new Location(2998, 3917, 0) : new Location(2998, 3931, 0);
+						DoorActionHandler.handleAutowalkDoor(player, RegionManager.getObject(doorLoc));
+						return true;
 				}
 				return false;
 			}
@@ -141,15 +142,29 @@
 			player.getDialogueInterpreter().sendDialogue("You need an Agility level of at least 49 to do this.");
 			return;
 		}
-		player.lock(12);
+		player.lock(10);
 		GameWorld.Pulser.submit(new Pulse(1, player) {
+			int counter = 0;
 			@Override
 			public boolean pulse() {
 				int x = 3004;
-				AgilityHandler.forceWalk(player, -1, Location.create(x, 3937, 0), Location.create(x, 3939, 0), Animation.create(749), 10, 0, null);
-				AgilityHandler.forceWalk(player, -1, Location.create(x, 3939, 0), Location.create(x, 3948, 0), Animation.create(844), 10, 0, null, 1);
-				AgilityHandler.forceWalk(player, 0, Location.create(x, 3948, 0), Location.create(x, 3950, 0), Animation.create(748), 20, 12.5, null, 14);
-				player.addExtension(LogoutTask.class, new LocationLogoutTask(14, Location.create(3004, 3937, 0)));
+				switch(counter++){
+					case 0:
+						AgilityHandler.forceWalk(player, -1, Location.create(x, 3937, 0), Location.create(x, 3940, 0), Animation.create(10580), 15, 0, null, 1);//10
+						System.out.println("1");
+
+					case 2:
+						player.getTeleporter().send(Location.create(3004, 3947, 0), TeleportManager.TeleportType.INSTANT, TeleportManager.WILDY_TELEPORT);
+						System.out.println("tele");
+						counter++;
+
+					case 3:
+						AgilityHandler.forceWalk(player, 0, Location.create(x, 3948, 0), Location.create(x, 3950, 0), Animation.create(10579), 20, 12.5, null, 5);//20
+						System.out.println("3");
+						//player.addExtension(LogoutTask.class, new LocationLogoutTask(14, Location.create(3004, 3937, 0)));
+						return true;
+
+				}
 				return true;
 			}
 		});
@@ -175,7 +190,7 @@
 		}
 		ropeDelay = GameWorld.getTicks() + 2;
 		player.getPacketDispatch().sendObjectAnimation(object, Animation.create(497), true);
-		AgilityHandler.forceWalk(player, 1, player.getLocation(), Location.create(3005, 3958, 0), Animation.create(751), 50, 20, "You skillfully swing across.", 1);
+		AgilityHandler.forceWalk(player, 1, player.getLocation(), Location.create(3005, 3958, 0), Animation.create(751), 45, 20, "You skillfully swing across.", 1);
 	}
 
 	/**
@@ -235,7 +250,7 @@
 	 * @param object the object.
 	 */
 	private void handleRockClimb(final Player player, final GameObject object) {
-		AgilityHandler.walk(player, 4, player.getLocation(), player.getLocation().transform(0, -4, 0), Animation.create(740), 0, "You reach the top.");
+		AgilityHandler.forceWalk(player, 4, Location.create(2994, 3937, 0), Location.create(2994, 3933, 0), Animation.create(740), 8, 0, "You reach the top.");
 		GameWorld.Pulser.submit(new Pulse(4, player) {
 			@Override
 			public boolean pulse() {
@@ -248,14 +263,14 @@
 	@Override
 	public Location getDestination(Node node, Node n) {
 		switch (n.getId()) {
-		case 2283:
-			return Location.create(3005, 3953, 0);
-		case 37704:
-			return Location.create(3002, 3960, 0);
-		case 2297:
-			return Location.create(3002, 3945, 0);
-		case 2328:
-			return n.getLocation().transform(0, 1, 0);
+			case 2283:
+				return Location.create(3005, 3953, 0);
+			case 37704:
+				return Location.create(3002, 3960, 0);
+			case 2297:
+				return Location.create(3002, 3945, 0);
+			case 2328:
+				return n.getLocation().transform(0, 1, 0);
 		}
 		return null;
 	}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"false\" project-jdk-name=\"1.8.0_242\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/CompiledServer\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 25177c7389a44663bd7623221b75d446b8940c03)
+++ .idea/misc.xml	(date 1594771659651)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="false" project-jdk-name="1.8.0_242" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="false" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/CompiledServer" />
   </component>
 </project>
\ No newline at end of file
Index: Server/src/main/java/Server/plugin/command/BetaCommandPlugin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.command;\r\n\r\nimport core.ServerConstants;\r\nimport core.cache.Cache;\r\nimport core.cache.def.impl.ItemDefinition;\r\nimport core.cache.def.impl.NPCDefinition;\r\nimport plugin.ge.GrandExchangeDatabase;\r\nimport plugin.ge.GrandExchangeEntry;\r\nimport plugin.skill.Skills;\r\nimport core.game.node.entity.npc.NPC;\r\nimport core.game.node.entity.player.Player;\r\nimport plugin.ai.resource.ResourceAIPManager;\r\nimport core.game.node.entity.player.info.Rights;\r\nimport core.game.node.entity.player.link.TeleportManager.TeleportType;\r\nimport core.game.node.entity.player.link.quest.Quest;\r\nimport core.game.node.entity.player.link.quest.QuestRepository;\r\nimport core.game.node.item.Item;\r\nimport core.game.system.SystemLogger;\r\nimport core.game.system.command.CommandPlugin;\r\nimport core.game.system.command.CommandSet;\r\nimport core.game.world.map.Location;\r\nimport core.game.world.map.Region;\r\nimport core.game.world.map.RegionManager;\r\nimport core.game.world.map.build.DynamicRegion;\r\nimport core.game.world.repository.Repository;\r\nimport core.plugin.InitializablePlugin;\r\nimport core.plugin.Plugin;\r\nimport core.tools.StringUtils;\r\nimport core.tools.npc.TestStats;\r\n\r\nimport java.awt.*;\r\nimport java.awt.datatransfer.Clipboard;\r\nimport java.awt.datatransfer.StringSelection;\r\n\r\n/**\r\n * The commands available during beta stage.\r\n *\r\n * @author Emperor\r\n */\r\n@InitializablePlugin\r\npublic final class BetaCommandPlugin extends CommandPlugin {\r\n    String sqlLog = \"\";\r\n\r\n    @Override\r\n    public boolean parse(Player player, String name, String[] args) {\r\n        int id, amount;\r\n        Player p;\r\n        switch (name) {\r\n        case \"rights\":\r\n        \tplayer.getDetails().setRights(Rights.forId(Integer.parseInt(args[1])));\r\n        \tplayer.sendMessage(\"Set rights to \" + Rights.forId(Integer.parseInt(args[1])).name());\r\n        \tbreak;\r\n            case \"lo\":\r\n                int index = 0;\r\n                for (int i = 8349; i < 8367; i++) {\r\n                    NPC n = NPC.create(i, player.getLocation().transform(0, -index, 0));\r\n                    n.init();\r\n                    index += 2;\r\n                }\r\n                player.sendMessage(\"Lol\");\r\n                break;\r\n            case \"resetquest\":\r\n            case \"reset_quest\":\r\n                if (args.length < 2) {\r\n                    player.debug(\"syntax error: name\");\r\n                    return true;\r\n                }\r\n                name = \"\";\r\n                for (int i = 1; i < args.length; i++) {\r\n                    name += (i == 1 ? \"\" : \" \") + args[i];\r\n                }\r\n                name = StringUtils.formatDisplayName(name);\r\n                if (player.getQuestRepository().getQuest(name) == null) {\r\n                    player.debug(\"err or: invalid quest - \" + name);\r\n                    return true;\r\n                }\r\n                player.getQuestRepository().getQuest(name).setStage(player, 0);\r\n                player.getQuestRepository().dockPoints(player.getQuestRepository().getQuest(name).getQuestPoints());\r\n                player.getQuestRepository().syncronizeTab(player);\r\n                return true;\r\n\r\n            case \"allquest\":\r\n                for (Quest quest : QuestRepository.getQuests().values()) {\r\n                    quest.finish(player);\r\n                }\r\n                return true;\r\n\r\n            case \"pos\":\r\n            case \"position\":\r\n            case \"coords\":\r\n            case \"loc\":\r\n                final Location l = player.getLocation();\r\n                final Region r = player.getViewport().getRegion();\r\n                player.getPacketDispatch().sendMessage(\"Absolute: \" + l + \", regional: [\" + l.getLocalX() + \", \" + l.getLocalY() + \"], chunk: [\" + l.getChunkOffsetX() + \", \" + l.getChunkOffsetY() + \"], flag: [\" + RegionManager.isTeleportPermitted(l) + \", \" + RegionManager.getClippingFlag(l) + \", \" + RegionManager.isLandscape(l) + \"].\");\r\n                player.getPacketDispatch().sendMessage(\"Region: [id=\" + l.getRegionId() + \", active=\" + r.isActive() + \", instanced=\" + ((r instanceof DynamicRegion)) + \"], obj=\" + RegionManager.getObject(l) + \".\");\r\n                player.getPacketDispatch().sendMessage(\"Object: \" + RegionManager.getObject(l) + \".\");\r\n                SystemLogger.log(\"Viewport: \" + l.getSceneX(player.getPlayerFlags().getLastSceneGraph()) + \",\" + l.getSceneY(player.getPlayerFlags().getLastSceneGraph()));\r\n                String loc = \"Location.create(\" + l.getX() + \", \" + l.getY() + \", \" + l.getZ() + \")\";\r\n                SystemLogger.log(loc + \"; \"+ player.getPlayerFlags().getLastSceneGraph() + \", \" + l.getLocalX() + \", \" + l.getLocalY());\r\n                StringSelection stringSelection = new StringSelection(loc);\r\n                Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();\r\n                clpbrd.setContents(stringSelection, null);\r\n                return true;\r\n\r\n            case \"setquest\":\r\n            case \"setoquest\":\r\n                if (args.length < 2) {\r\n                    player.debug(\"syntax error: name\");\r\n                    return true;\r\n                }\r\n                Player m = name.equals(\"setoquest\") ? getTarget(args[args.length - 1]) : player;\r\n                if (m == null || !m.isActive()) {\r\n                    player.sendMessage(\"Error! \" + args[3] + \" in invalid.\");\r\n                    return true;\r\n                }\r\n                name = \"\";\r\n                for (int i = 1; i < args.length - 1; i++) {\r\n                    name += (i == 1 ? \"\" : \" \") + args[i];\r\n                }\r\n                Quest quest = null;\r\n                for (Quest q : QuestRepository.getQuests().values()) {\r\n                    if (q.getName().toLowerCase().equals(name.toLowerCase())) {\r\n                        quest = q;\r\n                        break;\r\n                    }\r\n                }\r\n                if (quest == null) {\r\n                    player.debug(\"error: invalid quest - \" + name);\r\n                    return true;\r\n                }\r\n                int stage = toInteger(args[args.length - 1]);\r\n                quest.setStage(player, stage);\r\n                m.getPacketDispatch().sendMessage(\"quest=\" + name + \", new stage=\" + stage);\r\n                m.getQuestRepository().syncronizeTab(player);\r\n                break;\r\n\r\n            case \"empty\":\r\n                player.getInventory().clear();\r\n                return true;\r\n\r\n            case \"setvalue\":\r\n                int itemId = toInteger(args[1]);\r\n                int value = toInteger(args[2]);\r\n                Item item = new Item(itemId);\r\n                GrandExchangeEntry entry = GrandExchangeDatabase.getDatabase().get(itemId);\r\n                if (entry == null) {\r\n                    player.getPacketDispatch().sendMessage(\"Could not find G.E entry for item [id=\" + itemId + \", name=\" + item.getName() + \"]!\");\r\n                    break;\r\n                }\r\n                entry.setValue(value);\r\n                player.getPacketDispatch().sendMessage(\"Set Grand Exchange value for item [id=\" + itemId + \", name=\" + item.getName() + \"] to \" + value + \"gp!\");\r\n                break;\r\n\r\n            case \"npc\":\r\n                if (args.length < 2) {\r\n                    player.debug(\"syntax error: id (optional) direction\");\r\n                    return true;\r\n                }\r\n                NPC npc = NPC.create(toInteger(args[1]), player.getLocation());\r\n                npc.setAttribute(\"spawned:npc\", true);\r\n                npc.setRespawn(false);\r\n                npc.setDirection(player.getDirection());\r\n                npc.init();\r\n                npc.setWalks(args.length > 2 ? true : false);\r\n                String npcString = \"{\" + npc.getLocation().getX() + \",\" + npc.getLocation().getY() + \",\" + npc.getLocation().getZ() + \",\" + (npc.isWalks() ? \"1\" : \"0\") + \",\" + npc.getDirection().ordinal() + \"}\";\r\n                clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();\r\n                clpbrd.setContents(new StringSelection(npcString), null);\r\n                System.out.println(npcString);\r\n                return true;\r\n\r\n            case \"npcn\":\r\n                if (args.length < 2) {\r\n                    player.debug(\"syntax error: npc-name (optional) amount\");\r\n                    return true;\r\n                }\r\n                String parameters = \"\";\r\n                for (int i = 1; i < args.length; i++) {\r\n                    parameters += i == args.length - 1 ? args[i] : args[i] + \" \";\r\n                }\r\n\r\n                for (int i = 0; i < NPCDefinition.getDefinitions().size(); i++) {\r\n                    NPCDefinition npcDefinition = NPCDefinition.forId(i);\r\n                    if (npcDefinition != null && npcDefinition.getName().equalsIgnoreCase(parameters.toLowerCase())) {\r\n                        NPC n = NPC.create(npcDefinition.getId(), player.getLocation());\r\n                        n.setAttribute(\"spawned:npcDefinition\", true);\r\n                        n.setRespawn(false);\r\n                        n.setDirection(player.getDirection());\r\n                        n.init();\r\n                        n.setWalks(args.length > 2 ? true : false);\r\n                        String npcs = \"{\" + n.getLocation().getX() + \",\" + n.getLocation().getY() + \",\" + n.getLocation().getZ() + \",\" + (n.isWalks() ? \"1\" : \"0\") + \",\" + n.getDirection().ordinal() + \"}\";\r\n                        System.out.println(npcs);\r\n                        break;\r\n                    }\r\n                }\r\n                return true;\r\n\r\n            // Get item by id\r\n            case \"item\":\r\n            \tif (args.length < 2) {\r\n            \t\tplayer.sendMessage(\"You must specify an item ID\");\r\n            \t\treturn false;\r\n            \t}\r\n                id = toInteger(args[1]);\r\n                amount = args.length > 2 ? toInteger(args[2]) : 1;\r\n                if (id > Cache.getItemDefinitionsSize()) {\r\n            \t\tplayer.sendMessage(\"Item ID '\" + id + \"' out of range.\");\r\n                    return true;\r\n                }\r\n                item = new Item(id, amount);\r\n                int max = player.getInventory().getMaximumAdd(item);\r\n                if (amount > max) {\r\n                    amount = max;\r\n                }\r\n                item.setAmount(amount);\r\n                player.getInventory().add(item);\r\n                return true;\r\n\r\n            case \"give\":\r\n            case \"giveitem\":\r\n                if (args.length < 3) {\r\n                    player.sendMessage(\"Syntax: ::give id amt playername\");\r\n                }\r\n                String n = \"\";\r\n                for (int i = 3; i < args.length; i++) {\r\n                    if (i == 3) {\r\n                        n += args[i];\r\n                        continue;\r\n                    }\r\n                    n += \" \" + args[i];\r\n                }\r\n                player.sendMessage(\"Giving \" + n + \" item..\");\r\n                Player recipient = Repository.getPlayer(n);\r\n                if (recipient == null) {\r\n                    player.debug(\"syntax error: name\");\r\n                    return true;\r\n                }\r\n                item = new Item(toInteger(args[1]), toInteger(args[2]));\r\n                item.setAmount(toInteger(args[2]));\r\n                recipient.getInventory().add(item);\r\n                return true;\r\n\r\n            case \"logsql\":\r\n                final Location lsql = player.getLocation();\r\n                player.getPacketDispatch().sendMessage(\"Absolute: \" + lsql);\r\n                sqlLog += \"{\" + lsql.getX() + \",\" + lsql.getY() + \",\" + lsql.getZ() + \",0,0}\";\r\n                return true;\r\n\r\n            case \"sqldone\":\r\n                stringSelection = new StringSelection(sqlLog);\r\n                clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();\r\n                clpbrd.setContents(stringSelection, null);\r\n                sqlLog = \"\";\r\n                return true;\r\n\r\n            case \"locsql\":\r\n                final Location lsqlatom = player.getLocation();\r\n                player.getPacketDispatch().sendMessage(\"Absolute: \" + lsqlatom);\r\n                String locql = \"{\" + lsqlatom.getX() + \",\" + lsqlatom.getY() + \",\" + lsqlatom.getZ() + \",0,0}\";\r\n                stringSelection = new StringSelection(locql);\r\n                clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();\r\n                clpbrd.setContents(stringSelection, null);\r\n                return true;\r\n\r\n            // Get item by name\r\n            case \"itemn\":\r\n                if (args.length < 2) {\r\n                    player.sendMessage(\"You must specify an item name\");\r\n                    return true;\r\n                }\r\n                String itemName = \"\";\r\n                for (int i = 1; i < args.length; i++) {\r\n                \titemName += i == args.length - 1 ? args[i] : args[i] + \" \";\r\n                }\r\n                Boolean foundItem = false;\r\n                for (int i = 0; i < ItemDefinition.getDefinitions().size(); i++) {\r\n                    ItemDefinition def1 = ItemDefinition.forId(i);\r\n                    if (def1 != null && def1.getName().equalsIgnoreCase(itemName.toLowerCase())) {\r\n                        player.getInventory().add(new Item(i, 1));\r\n                        player.sendMessage(\"Added \" + def1.getName() + \"[\" + def1.getId() + \"] to inventory\");\r\n                        foundItem = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!foundItem) {\r\n                \tplayer.sendMessage(\"@red@Unable to find item: \" + itemName + \"\");\r\n                }\r\n                return true;\r\n            case \"task\":\r\n                ResourceAIPManager.get().runTask(player, \"Willow Logs\");\r\n                break;\r\n            case \"master\":\r\n            case \"max\":\r\n                if (player.getDetails().getRights() != Rights.ADMINISTRATOR) {\r\n                    if (player.inCombat() || player.getLocks().isInteractionLocked() || player.getSkullManager().isWilderness()) {\r\n                        player.getPacketDispatch().sendMessage(\"You can't do that right now.\");\r\n                        return true;\r\n                    }\r\n                }\r\n                for (int i = 0; i < Skills.SKILL_NAME.length; i++) {\r\n                    player.getSkills().setLevel(i, 99);\r\n                    player.getSkills().setStaticLevel(i, 99);\r\n                }\r\n                player.getSkills().updateCombatLevel();\r\n                player.getAppearance().sync();\r\n                return true;\r\n            case \"runes\":\r\n                for (int i = 554; i < 567; i++) {\r\n                    player.getInventory().add(new Item(i, 50000));\r\n                }\r\n                player.getInventory().add(new Item(9075, 50000));\r\n                return true;\r\n            case \"skill\":\r\n            case \"oskill\":\r\n                if (player.getDetails().getRights() != Rights.ADMINISTRATOR) {\r\n                    if (player.inCombat() || player.getLocks().isInteractionLocked() || player.getSkullManager().isWilderness()) {\r\n                        player.getPacketDispatch().sendMessage(\"You can't do that right now.\");\r\n                        return true;\r\n                    }\r\n                }\r\n                if (args.length < 3) {\r\n                    player.getPacketDispatch().sendMessage(\"Use as ::skill skillname/id level.\");\r\n                    return true;\r\n                }\r\n                int skillId = -1;\r\n                if (Character.isDigit(args[1].charAt(0))) {\r\n                    skillId = toInteger(args[1]);\r\n                } else {\r\n                    for (id = 0; id < Skills.SKILL_NAME.length; id++) {\r\n                        String skill = Skills.SKILL_NAME[id];\r\n                        if (args[1].equals(skill.toLowerCase())) {\r\n                            skillId = id;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (skillId < 0) {\r\n                    player.getPacketDispatch().sendMessage(\"Use as ::skill skillname/id level.\");\r\n                    return true;\r\n                }\r\n                int level = Math.abs(toInteger(args[2]));\r\n                if (level > 99) {\r\n                    level = 99;\r\n                }\r\n                p = name.equals(\"oskill\") && args.length > 3 ? Repository.getPlayer(args[3]) : player;\r\n                if (p == null) {\r\n                    player.getPacketDispatch().sendMessage(\"Unable to set level for \" + args[3] + \".\");\r\n                    return true;\r\n                }\r\n                p.getSkills().setLevel(skillId, level);\r\n                p.getSkills().setStaticLevel(skillId, level);\r\n                p.getSkills().updateCombatLevel();\r\n                p.getAppearance().sync();\r\n                player.getPacketDispatch().sendMessage(\"Set \" + p.getName() + \"'s \" + Skills.SKILL_NAME[skillId] + \" level to \" + args[2] + \".\");\r\n                return true;\r\n            case \"copy\":\r\n                Player target = Repository.getPlayer(args[1]);\r\n                if (target != null) {\r\n                    player.getInventory().copy(target.getInventory());\r\n                    player.getInventory().refresh();\r\n                    player.getSkills().copy(target.getSkills());\r\n                    player.getSkills().configure();\r\n                    player.getEquipment().copy(target.getEquipment());\r\n                    player.getEquipment().refresh();\r\n                    player.getAppearance().sync();\r\n                }\r\n                return true;\r\n            case \"to\":\r\n                if (player.getDetails().getRights() != Rights.ADMINISTRATOR) {\r\n                    if (player.inCombat() || player.getLocks().isTeleportLocked()) {\r\n                        player.getPacketDispatch().sendMessage(\"You can't teleport right now.\");\r\n                        return true;\r\n                    }\r\n                }\r\n                Location destination = null;\r\n                String place = getArgumentLine(args);\r\n                for (Object[] destinations : ServerConstants.TELEPORT_DESTINATIONS) {\r\n                    for (int i = 1; i < destinations.length; i++) {\r\n                        if (place.equals(destinations[i])) {\r\n                            destination = (Location) destinations[0];\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (destination != null) {\r\n                    player.getTeleporter().send(destination, TeleportType.NORMAL);\r\n                } else {\r\n                    player.getPacketDispatch().sendMessage(\"Could not locate teleport destination [name=\" + place + \"]!\");\r\n                }\r\n                return true;\r\n            case \"teleports\":\r\n            case \"destinations\":\r\n                player.getInterfaceManager().close();\r\n                player.getPacketDispatch().sendString(\"<u>Teleport destinations</u>\", 239, 1);\r\n                StringBuilder sb = new StringBuilder();\r\n                for (int i = 0; i < ServerConstants.TELEPORT_DESTINATIONS.length; i++) {\r\n                    sb.append(ServerConstants.TELEPORT_DESTINATIONS[i][1]);\r\n                    if (i != ServerConstants.TELEPORT_DESTINATIONS.length - 1) {\r\n                        sb.append(\", \");\r\n                    }\r\n                }\r\n                player.getPacketDispatch().sendString(\"<br>\" + sb.toString(), 239, 2);\r\n                player.getPacketDispatch().sendString(\"\", 239, 3);\r\n                player.getPacketDispatch().sendString(\"\", 239, 4);\r\n                player.getPacketDispatch().sendString(\"\", 239, 5);\r\n                player.getInterfaceManager().openComponent(239);\r\n                return true;\r\n            case \"maxmag\":\r\n                TestStats.setMaxedMagicAcc(player);\r\n                return true;\r\n            case \"maxstr\":\r\n                TestStats.setMaxedMeleeStr(player);\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public Plugin<Object> newInstance(Object arg) throws Throwable {\r\n        link(CommandSet.BETA, CommandSet.ADMINISTRATOR);\r\n        return this;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/command/BetaCommandPlugin.java	(revision 25177c7389a44663bd7623221b75d446b8940c03)
+++ Server/src/main/java/Server/plugin/command/BetaCommandPlugin.java	(date 1594952560305)
@@ -4,12 +4,8 @@
 import core.cache.Cache;
 import core.cache.def.impl.ItemDefinition;
 import core.cache.def.impl.NPCDefinition;
-import plugin.ge.GrandExchangeDatabase;
-import plugin.ge.GrandExchangeEntry;
-import plugin.skill.Skills;
 import core.game.node.entity.npc.NPC;
 import core.game.node.entity.player.Player;
-import plugin.ai.resource.ResourceAIPManager;
 import core.game.node.entity.player.info.Rights;
 import core.game.node.entity.player.link.TeleportManager.TeleportType;
 import core.game.node.entity.player.link.quest.Quest;
@@ -27,6 +23,10 @@
 import core.plugin.Plugin;
 import core.tools.StringUtils;
 import core.tools.npc.TestStats;
+import plugin.ai.resource.ResourceAIPManager;
+import plugin.ge.GrandExchangeDatabase;
+import plugin.ge.GrandExchangeEntry;
+import plugin.skill.Skills;
 
 import java.awt.*;
 import java.awt.datatransfer.Clipboard;
@@ -46,10 +46,10 @@
         int id, amount;
         Player p;
         switch (name) {
-        case "rights":
-        	player.getDetails().setRights(Rights.forId(Integer.parseInt(args[1])));
-        	player.sendMessage("Set rights to " + Rights.forId(Integer.parseInt(args[1])).name());
-        	break;
+            case "rights":
+                player.getDetails().setRights(Rights.forId(Integer.parseInt(args[1])));
+                player.sendMessage("Set rights to " + Rights.forId(Integer.parseInt(args[1])).name());
+                break;
             case "lo":
                 int index = 0;
                 for (int i = 8349; i < 8367; i++) {
@@ -196,14 +196,14 @@
 
             // Get item by id
             case "item":
-            	if (args.length < 2) {
-            		player.sendMessage("You must specify an item ID");
-            		return false;
-            	}
+                if (args.length < 2) {
+                    player.sendMessage("You must specify an item ID");
+                    return false;
+                }
                 id = toInteger(args[1]);
                 amount = args.length > 2 ? toInteger(args[2]) : 1;
                 if (id > Cache.getItemDefinitionsSize()) {
-            		player.sendMessage("Item ID '" + id + "' out of range.");
+                    player.sendMessage("Item ID '" + id + "' out of range.");
                     return true;
                 }
                 item = new Item(id, amount);
@@ -252,6 +252,8 @@
                 sqlLog = "";
                 return true;
 
+            case "sqloc":
+            case "sqlloc":
             case "locsql":
                 final Location lsqlatom = player.getLocation();
                 player.getPacketDispatch().sendMessage("Absolute: " + lsqlatom);
@@ -261,6 +263,18 @@
                 clpbrd.setContents(stringSelection, null);
                 return true;
 
+            case "sqlocgs":
+            case "sqllocgs":
+            case "locsqlgspawn":
+                final Location lsqlgs = player.getLocation();
+                player.getPacketDispatch().sendMessage("Absolute: " + lsqlgs);
+                String lsqlgst = "{1," + lsqlgs.getX() + "," + lsqlgs.getY() + "," + lsqlgs.getZ() + ",196610}";
+                stringSelection = new StringSelection(lsqlgst);
+                clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
+                clpbrd.setContents(stringSelection, null);
+                return true;
+
+
             // Get item by name
             case "itemn":
                 if (args.length < 2) {
@@ -269,7 +283,7 @@
                 }
                 String itemName = "";
                 for (int i = 1; i < args.length; i++) {
-                	itemName += i == args.length - 1 ? args[i] : args[i] + " ";
+                    itemName += i == args.length - 1 ? args[i] : args[i] + " ";
                 }
                 Boolean foundItem = false;
                 for (int i = 0; i < ItemDefinition.getDefinitions().size(); i++) {
@@ -282,7 +296,7 @@
                     }
                 }
                 if (!foundItem) {
-                	player.sendMessage("@red@Unable to find item: " + itemName + "");
+                    player.sendMessage("@red@Unable to find item: " + itemName + "");
                 }
                 return true;
             case "task":
@@ -410,6 +424,7 @@
             case "maxstr":
                 TestStats.setMaxedMeleeStr(player);
                 return true;
+
         }
         return false;
     }
@@ -420,4 +435,4 @@
         return this;
     }
 
-}
+}
\ No newline at end of file
Index: Server/src/main/java/Server/plugin/quest/fremtrials/ChieftanBrundtDialogue.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.quest.fremtrials\r\n\r\nimport core.game.node.entity.player.Player\r\nimport core.game.node.entity.player.info.PlayerDetails\r\nimport plugin.dialogue.DialoguePlugin\r\n\r\nclass ChieftanBrundt(player: Player? = Player(PlayerDetails(null))) : DialoguePlugin(){\r\n    override fun open(vararg args: Any?): Boolean {\r\n        npc(\"Greetings outlander!\")\r\n        stage = 0\r\n        return true\r\n    }\r\n\r\n    override fun handle(interfaceId: Int, buttonId: Int): Boolean {\r\n        when(stage){\r\n            0 -> { options(\"What is this place?\", \"Why will no-one talk to me?\", \"Do you have any quests?\", \"Nice hat!\");stage++}\r\n            1 -> when(buttonId){\r\n                    1 -> TODO(\"Not yet implemented\")\r\n                    2 -> TODO(\"Not yet implemented\")\r\n                    3 -> {player(\"Do you have any quests?\");stage = 300}\r\n                    4 -> TODO(\"Not yet implemented\")\r\n                 }\r\n\r\n            //Do you have any quests?\r\n            300 -> {npc(\"Quests, you say outlander? Well, I would not call it a\",\"quest as such, but if you are brave of heart and strong\",\"of body, perhaps...\"); stage++}\r\n            301 -> {npc(\"No, you would not be interested. Forget I said\",\"anything, outerlander.\");stage++}\r\n            302 -> {options(\"Yes, I am interested.\",\"No, I'm not interested.\");stage++}\r\n            303 -> when(buttonId){\r\n                    1 -> {player(\"Actually, I would be very interested to hear what you\",\"have to offer.\");stage = 310}\r\n                    2 -> {player(\"No, I'm not interested.\");stage = 340}\r\n                  }\r\n\r\n                //Yes, I am interested in what you have to say.\r\n                310 -> {npc(\"You would? These are unusual sentiments to hear from\",\"an outerlander! My suggestion was going to be that if\",\"you crave adventure and battle,\"); stage++}\r\n                311 -> {npc(\"and your heart sings for glory, then perhaps you would\",\"be interested in joining our clan, and becoming a\",\"Fremennik yourself?\");stage++}\r\n                312 -> {player(\"What would that involve exactly?\");stage++}\r\n                313 -> {npc(\"Well, there are two ways to become a member of our\",\"clan and call yourself a Fremennik: be born a\",\"Fremennik, or be voted in by our council of elders.\");stage++}\r\n                314 -> {player(\"Well, I think I've missed the first way, but how can I\",\"get the council of elders to vote to let me join your\",\"clan?\");stage++}\r\n                315 -> {npc(\"Well, that I cannot answer myself. You will need to\",\"speak to each of them and see what they require of you\",\"as proof of your dedication.\");stage++}\r\n                316 -> {npc(\"There are twelve council members around this village;\",\"you will need to gain a majority vote of at least seven\",\"councillors in your favor.\");stage++}\r\n                317 -> {npc(\"So, what say you? Give me the word and I will tell all\",\"of my tribe of your intentions, be they yes or nay.\");stage++}\r\n                318 -> {options(\"I want to become a Fremennik!\",\"I don't want to become a Fremennik.\");stage++}\r\n                319 -> when(buttonId){\r\n                        1 -> {player(\"I think I would enjoy the challenge of becoming an\",\"honorary Fremennik. Where and how do I start?\");stage = 320}\r\n                        2 -> {player(\"That sounds too complicated to me.\");stage = 322}\r\n                      }\r\n\r\n                    //I think I would enjoy the challenge of becoming an honorary fremennik\r\n                    320 -> {npc(\"As I say outerlander, you must find and speak to the\",\"twelve members of the council of elders, and see what\",\"tasks they might set you.\");stage++}\r\n                    321 -> {npc(\"If you can gain the support of seven of the twelve, then\",\"you will be accepted as one of us without question.\");stage = 1000}\r\n\r\n                    //That sounds too complicated for me.\r\n                    322 -> {npc(\"Well, that's what I expect from an outerlander.\");stage = 1000}\r\n\r\n                //No, I'm not interested\r\n                340 -> TODO(\"Not implemented yet\")\r\n\r\n\r\n            1000 -> end()\r\n        }\r\n        return true\r\n    }\r\n\r\n\r\n    override fun newInstance(player: Player?): DialoguePlugin {\r\n        TODO(\"Not yet implemented\")\r\n    }\r\n\r\n    override fun getIds(): IntArray {\r\n        return intArrayOf(1294)\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/quest/fremtrials/ChieftanBrundtDialogue.kt	(revision 25177c7389a44663bd7623221b75d446b8940c03)
+++ Server/src/main/java/Server/plugin/quest/fremtrials/ChieftanBrundtDialogue.kt	(date 1594775100699)
@@ -2,17 +2,22 @@
 
 import core.game.node.entity.player.Player
 import core.game.node.entity.player.info.PlayerDetails
+import core.plugin.InitializablePlugin
 import plugin.dialogue.DialoguePlugin
 
-class ChieftanBrundt(player: Player? = Player(PlayerDetails(null))) : DialoguePlugin(){
+@InitializablePlugin
+class ChieftanBrundt(player: Player? = Player(PlayerDetails("",""))) : DialoguePlugin(player){
     override fun open(vararg args: Any?): Boolean {
-        npc("Greetings outlander!")
-        stage = 0
+        if(player?.questRepository?.getStage("Fremennik Trials")!! == 0) {
+            npc("Greetings outlander!")
+            stage = 0
+        }
         return true
     }
 
     override fun handle(interfaceId: Int, buttonId: Int): Boolean {
         when(stage){
+            //Pre-Quest
             0 -> { options("What is this place?", "Why will no-one talk to me?", "Do you have any quests?", "Nice hat!");stage++}
             1 -> when(buttonId){
                     1 -> TODO("Not yet implemented")
@@ -47,7 +52,7 @@
 
                     //I think I would enjoy the challenge of becoming an honorary fremennik
                     320 -> {npc("As I say outerlander, you must find and speak to the","twelve members of the council of elders, and see what","tasks they might set you.");stage++}
-                    321 -> {npc("If you can gain the support of seven of the twelve, then","you will be accepted as one of us without question.");stage = 1000}
+                    321 -> {npc("If you can gain the support of seven of the twelve, then","you will be accepted as one of us without question.");stage = 1000;player?.questRepository?.getQuest("Fremennik Trials")?.start(player)}
 
                     //That sounds too complicated for me.
                     322 -> {npc("Well, that's what I expect from an outerlander.");stage = 1000}
@@ -63,7 +68,7 @@
 
 
     override fun newInstance(player: Player?): DialoguePlugin {
-        TODO("Not yet implemented")
+        return ChieftanBrundt(player)
     }
 
     override fun getIds(): IntArray {
Index: Server/src/main/java/Server/plugin/command/DeveloperCommandPlugin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.command;\r\n\r\nimport core.ServerConstants;\r\nimport core.cache.Cache;\r\nimport core.cache.def.impl.ItemDefinition;\r\nimport core.cache.def.impl.NPCDefinition;\r\nimport core.game.container.Container;\r\nimport core.game.container.impl.EquipmentContainer;\r\nimport core.game.content.eco.EconomyManagement;\r\nimport core.game.content.global.shop.Shop;\r\nimport plugin.tutorial.TutorialSession;\r\nimport core.game.content.holiday.HolidayItem;\r\nimport core.game.content.holiday.ItemLimitation;\r\nimport plugin.skill.Skills;\r\nimport plugin.skill.smithing.smelting.Bar;\r\nimport plugin.skill.construction.HouseLocation;\r\nimport plugin.skill.summoning.pet.Pets;\r\nimport core.game.node.entity.combat.ImpactHandler.HitsplatType;\r\nimport core.game.node.entity.npc.NPC;\r\nimport core.game.node.entity.npc.drop.DropTables;\r\nimport core.game.node.entity.npc.drop.RareDropTable;\r\nimport core.game.node.entity.player.Player;\r\nimport plugin.ai.resource.ResourceAIPManager;\r\nimport core.game.node.entity.player.info.PlayerDetails;\r\nimport core.game.node.entity.player.info.login.PlayerParser;\r\nimport core.game.node.entity.player.link.IronmanMode;\r\nimport core.game.node.entity.player.link.music.MusicEntry;\r\nimport core.game.node.entity.player.link.quest.Quest;\r\nimport core.game.node.entity.player.link.skillertasks.Difficulty;\r\nimport core.game.node.entity.state.EntityState;\r\nimport core.game.node.item.Item;\r\nimport core.game.node.object.GameObject;\r\nimport core.game.system.command.CommandPlugin;\r\nimport core.game.system.command.CommandSet;\r\nimport core.game.system.mysql.SQLManager;\r\nimport core.game.system.mysql.impl.ItemConfigSQLHandler;\r\nimport core.game.system.mysql.impl.NPCDropSQLHandler;\r\nimport core.game.system.script.ScriptManager;\r\nimport core.game.system.task.Pulse;\r\nimport core.game.world.GameWorld;\r\nimport core.game.world.map.Location;\r\nimport core.game.world.map.RegionManager;\r\nimport core.game.world.map.RegionPlane;\r\nimport core.game.world.map.path.Pathfinder;\r\nimport core.game.world.map.zone.RegionZone;\r\nimport core.game.world.repository.Repository;\r\nimport core.game.world.update.flag.context.Animation;\r\nimport core.game.world.update.flag.context.Graphics;\r\nimport core.plugin.InitializablePlugin;\r\nimport core.plugin.Plugin;\r\nimport core.plugin.PluginManager;\r\nimport core.tools.ItemNames;\r\nimport core.tools.RandomFunction;\r\nimport core.tools.StringUtils;\r\nimport plugin.skill.herblore.PotionDecantingPlugin;\r\n\r\nimport java.awt.*;\r\nimport java.awt.datatransfer.Clipboard;\r\nimport java.awt.datatransfer.StringSelection;\r\nimport java.sql.SQLException;\r\nimport java.util.*;\r\nimport java.util.List;\r\nimport java.util.Map.Entry;\r\nimport java.util.concurrent.Executors;\r\n\r\n/**\r\n * Handles the developer commands.\r\n *\r\n * @author Vexia\r\n */\r\n@InitializablePlugin\r\npublic final class DeveloperCommandPlugin extends CommandPlugin {\r\n\r\n    @Override\r\n    public Plugin<Object> newInstance(Object arg) throws Throwable {\r\n        link(CommandSet.ADMINISTRATOR);\r\n        return this;\r\n    }\r\n\r\n    public static class SpawnSearch extends Shop {\r\n\r\n        public SpawnSearch() {\r\n            super(\"Spawn Search\", false);\r\n        }\r\n\r\n        @Override\r\n        public void open(Player player) {\r\n            super.open(player);\r\n            player.getPacketDispatch().sendInterfaceConfig(620, 29, true);\r\n            player.getPacketDispatch().sendInterfaceConfig(620, 26, true);\r\n        }\r\n\r\n        @Override\r\n        public boolean canSell(Player player, Item item, ItemDefinition def) {\r\n            player.sendMessage(\"You cannot sell items to this store.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    @SuppressWarnings(\"deprecation\")\r\n    @Override\r\n    public boolean parse(final Player player, String name, String[] args) {\r\n        switch (name) {\r\n        \tcase \"unlockmusic\":\r\n        \t\tfor (MusicEntry me : MusicEntry.getSongs().values()) {\r\n        \t\t\tplayer.getMusicPlayer().unlock(me.getId());\r\n        \t\t}\r\n        \t\t\r\n        \tbreak;\r\n        \t\r\n        \tcase \"setlevel\":\r\n        \t\tplayer.getSkills().setLevel(Integer.parseInt(args[1]), Integer.parseInt(args[2]));\r\n        \t\tplayer.getSkills().setStaticLevel(Integer.parseInt(args[1]), Integer.parseInt(args[2]));\r\n        \t\tbreak;\r\n            case \"attr\":\r\n                player.setAttribute(\"/save:test\",true);\r\n                break;\r\n            case \"testattr\":\r\n                if(player.getAttribute(\"test\",false)){\r\n                    player.sendMessage(\"Attribute success\");\r\n                } else {\r\n                    player.sendMessage(\"Attribute failed\" + \" attribute value seen: \" + player.getAttribute(\"test\"));\r\n                }\r\n                break;\r\n            case \"remattr\":\r\n                player.removeAttribute(\"test\");\r\n                break;\r\n        \tcase \"playsong\":\r\n        \t\tplayer.getMusicPlayer().play(MusicEntry.getSongs().get(Integer.parseInt(args[1])));\r\n        \t\tplayer.sendMessage(\"Playing song: \" + MusicEntry.getSongs().get(Integer.parseInt(args[1])).getName());\r\n        \t\tbreak;\r\n            case \"doyellow\":\r\n                player.sendMessage(\"Running quest..\");\r\n                player.getQuestRepository().getQuest(\"What Quest\").finish(player);\r\n                break;\r\n            case \"find\":\r\n                try {\r\n                    player.getAttributes().put(\"spawning_items\", true);\r\n                    String itemName = \"\";\r\n                    for (int i = 1; i < args.length; i++)\r\n                        itemName += args[i] + ((i == args.length - 1) ? \"\" : \" \");\r\n                    int count = 0;\r\n                    player.getAttributes().computeIfAbsent(\"found_items\", k -> new HashMap<Integer, Integer>());\r\n                    player.getAttributes().remove(\"found_items\");\r\n                    Container storeItems = new Container(1200);\r\n                    for (int i = 0; i < ItemDefinition.getDefinitions().size(); i++) {\r\n                        ItemDefinition definition = ItemDefinition.forId(i);\r\n                        itemName = itemName.toLowerCase();\r\n                        if (definition == null)\r\n                            continue;\r\n                        String output = definition.getName().toLowerCase();\r\n                        int itemId = definition.getId();\r\n                        if (output.contains(itemName)) {\r\n                            storeItems.add(new Item(itemId, 1));\r\n                            player.getAttributes().put(\"\" + count, itemId);\r\n                            count++;\r\n                        }\r\n                    }\r\n\r\n                    SpawnSearch shop = new SpawnSearch();\r\n                    shop.getContainer(0).copy(storeItems);\r\n                    shop.open(player);\r\n\r\n                } catch (NumberFormatException e) {\r\n                    return true;\r\n                }\r\n                break;\r\n            case \"tut\":\r\n                System.out.println(\"TUT\");\r\n                if (player.getInventory().isEmpty()) {\r\n                    player.getPacketDispatch().sendMessage(\"You have nothing to deposit.\");\r\n                } else {\r\n                    dump(player, player.getInventory());\r\n                }\r\n                if (player.getEquipment().isEmpty()) {\r\n                    player.getPacketDispatch().sendMessage(\"You have nothing to deposit.\");\r\n                } else {\r\n                    dump(player, player.getEquipment());\r\n                }\r\n                TutorialSession.extend(player);\r\n                GameWorld.Pulser.submit(new Pulse(1, player) {\r\n                    @Override\r\n                    public boolean pulse() {\r\n                        TutorialSession.getExtension(player).init();\r\n                        return true;\r\n                    }\r\n                });\r\n                break;\r\n            case \"drops\":\r\n                try {\r\n                    new NPCDropSQLHandler().parse();\r\n                    player.sendMessage(EconomyManagement.getModificationRate() + \"\");\r\n                } catch (SQLException e1) {\r\n                    // TODO Auto-generated catch block\r\n                    e1.printStackTrace();\r\n                }\r\n                break;\r\n            case \"stask\":\r\n                player.getSkillTasks().getNewTask(player, Difficulty.NOVICE);\r\n                player.sendMessage(\"Your current task is \" + player.getSkillTasks().getCurrentTask().getAssignment() + \".\");\r\n                player.sendMessage(player.getSkillTasks().getCurrentTask().getDescription());\r\n                break;\r\n            case \"taskamount\":\r\n                player.sendMessage(\"You have \" + player.getSkillTasks().getTaskAmount() + \" more to go!\");\r\n                break;\r\n\r\n            case \"poison\":\r\n                player.getStateManager().set(EntityState.POISONED, 200, player);\r\n                player.getConfigManager().set(102, 1);\r\n                player.sendMessage(\"Poisoned...\");\r\n                break;\r\n\r\n            case \"reloaddb\":\r\n                SQLManager.init();\r\n                player.sendMessage(\"[MySQl] The database has been reloaded.\");\r\n                break;\r\n            case \"g\":\r\n                Location l = player.getLocation();\r\n                int xz = l.getX();\r\n                int yz = l.getY();\r\n                int er = Integer.parseInt(args[1]);\r\n                for (int w = 10; w > 0; w--) {\r\n                    Graphics gfx = new Graphics(er + w);\r\n                    Graphics.send(gfx, new Location(xz - (w > 5 ? -(w - 5) : 5 - w), yz));\r\n                }\r\n            case \"v\":\r\n                Map<Integer, ArrayList<NPC>> zz = new HashMap<>();\r\n                for (NPC n : Repository.getNpcs()) {\r\n                    if (n == null) {\r\n                        continue;\r\n                    }\r\n                    if (n.getAttribute(\"spawned:npc\", false) && n.getName().startsWith(\"Kalphite\") && n.getViewport().getRegion().getId() == 14939) {\r\n                        if (!zz.containsKey(n.getId())) {\r\n                            ArrayList<NPC> ooo = new ArrayList<NPC>();\r\n                            ooo.add(n);\r\n                            zz.put(n.getId(), ooo);\r\n                        } else {\r\n                            ArrayList<NPC> nn = zz.get(n.getId());\r\n                            nn.add(n);\r\n                            zz.put(n.getId(), nn);\r\n                        }\r\n                    }\r\n                }\r\n                for (Entry<Integer, ArrayList<NPC>> e : zz.entrySet()) {\r\n                    System.out.println(\"--- npc -> \" + e.getKey() + \"   ----\");\r\n                    List<NPC> bn = e.getValue();\r\n                    String ll = \"\";\r\n                    for (NPC n : bn) {\r\n                        Location hu = n.getProperties().getSpawnLocation();\r\n                        ll += \"{\" + hu.getX() + \",\" + hu.getY() + \",\" + hu.getZ() + \",\" + (n.isWalks() ? \"1\" : \"0\") + \",\" + n.getDirection().toInteger() + \"}-\";\r\n                    }\r\n                    System.out.println(ll);\r\n                }\r\n                break;\r\n            case \"fillbank\":\r\n                for (int zy = 0; zy < 100; zy++) {\r\n                    player.getBank().add(new Item(zy + 2000));\r\n                }\r\n                break;\r\n            case \"chins\":\r\n                player.getInventory().add(new Item(ItemNames.RED_CHINCHOMPA_10034,Integer.MAX_VALUE));\r\n                break;\r\n            case \"shop\":\r\n                int npc = Integer.parseInt(args[1]);\r\n                new NPC(npc).openShop(player);\r\n                break;\r\n            case \"simdrops\":\r\n                Executors.newSingleThreadExecutor().execute(()->{\r\n                    int npc_id = Integer.parseInt(args[1]);\r\n                    int npc_amt = Integer.parseInt(args[2]);\r\n                    player.getDropLog().clear();\r\n                    for(int i = 0; i < npc_amt; i++){\r\n                        DropTables.forId(npc_id).getDrops().forEach(drop -> {\r\n                            if(drop.getId() == RareDropTable.SLOT_ITEM_ID){\r\n                                drop = RareDropTable.retrieve();\r\n                            }\r\n                            if(drop.getId() != 0) {\r\n                                player.getDropLog().add(drop);\r\n                            }\r\n                        });\r\n                    }\r\n                    player.getDropLog().open();\r\n                });\r\n                break;\r\n            case \"anim\":\r\n                player.animate(new Animation(Integer.parseInt(args[1])));\r\n                break;\r\n            case \"em\":\r\n                final int[] y = new int[]{16044, 16045, 16256, 16259, 16260, 16334, 16381, 16556, 16564, 16638, 16642, 16673, 16710, 16713, 16715, 16722, 16796, 16797, 16805, 16831, 16886, 16890, 16926, 16938, 16942};\r\n                GameWorld.Pulser.submit(new Pulse(3) {\r\n                    int anim = 0;\r\n\r\n                    @Override\r\n                    public boolean pulse() {\r\n                        if (anim == (y.length - 1)) {\r\n                            player.sendChat(\"Done\");\r\n                            return true;\r\n                        }\r\n                        player.animate(new Animation(y[anim]));\r\n                        player.sendChat(\"Animation: \" + y[anim]);\r\n                        anim++;\r\n                        return false;\r\n                    }\r\n\r\n                });\r\n                break;\r\n               \r\n            case \"tempsound\":\r\n            \tplayer.getPacketDispatch().sendTempMusic(Integer.parseInt(args[1]));\r\n            \tbreak;\r\n            case \"loopsounds\":\r\n                GameWorld.Pulser.submit(new Pulse(5) {\r\n            \t\tint i = Integer.parseInt(args[2]);\r\n            \t\tint j = Integer.parseInt(args[1]);\r\n            \t\t@Override\r\n            \t\tpublic boolean pulse() {\r\n                \t\tplayer.sendMessage(\"Sound: \" + i);\r\n                \t\tplayer.getPacketDispatch().sendTempMusic(i);\r\n            \t\t\ti++;\r\n            \t\t\tif (i >= j) {\r\n            \t\t\t\treturn true;\r\n            \t\t\t}\r\n            \t\t\treturn false;\r\n            \t\t}\r\n            \t});\r\n            \tbreak;\r\n                \r\n            case \"c\":\r\n                for (Bar bar : Bar.values()) {\r\n                    System.out.println(bar.getProduct().getId() + \",\");\r\n                }\r\n                break;\r\n            /*\tcase \"zulrahzone\":\r\n\t\t\tDynamicRegion y = DynamicRegion.create(9007, 9008);\r\n\t\t\tif (y != null) {\r\n\t\t\t\tLocation l = y.getBaseLocation();\r\n\t\t\t\tint xOffset = 2240 - l.getX();\r\n\t\t\t\tint yOffset = 3008 - l.getY();\r\n\t\t\t\tSystem.out.println(y.getBaseLocation());\r\n\t\t\t\tplayer.teleport(y.getBaseLocation());\r\n\t\t\t\tZulrahPattern.startZulrahSpawn(ZulrahPattern.getPatterns().get(0), player, xOffset, yOffset);\r\n\t\t\t} else {\r\n\t\t\t\tSystem.out.println(\"No zone\");\r\n\t\t\t}\r\n\t\t\tbreak;*/\r\n            case \"damage\":\r\n                player.getImpactHandler().manualHit(player, 5, HitsplatType.VENOM);\r\n                break;\r\n            case \"region\":\r\n                System.out.println(\"You're in region: \" + player.getLocation().getRegionId() + \" \" + player.getLocation().getLocalX() + \" \" + player.getLocation().getLocalY());\r\n                player.getPacketDispatch().sendMessage(\"You're in region: \" + player.getLocation().getRegionId() + \" \" + player.getLocation().getRegionX() + \" \" + player.getLocation().getRegionY());\r\n                break;\r\n            case \"pots\":\r\n                for (int i = 0; i < ItemDefinition.getDefinitions().size(); i++) {\r\n                    if (ItemDefinition.getDefinitions().get(i).getName().contains(\"(1)\")) {\r\n                        System.out.println(ItemDefinition.getDefinitions().get(i).getName());\r\n                    }\r\n                }\r\n                break;\r\n            case \"t\":\r\n\r\n                RegionPlane plane = player.getViewport().getCurrentPlane();\r\n                int replace = 2103;\r\n                System.out.println(\"----------------------\");\r\n                for (GameObject[] o : plane.getObjects()) {\r\n                    if (o == null) {\r\n                        continue;\r\n                    }\r\n                    for (GameObject oo : o) {\r\n                        if (oo == null) {\r\n                            continue;\r\n                        }\r\n                        if (oo.getId() == 42036) {\r\n                            System.out.println(\"{new GameObject(\" + oo.getId() + \",\" + oo.getLocation().getX() + \",\" + oo.getLocation().getY() + \",0,\" + oo.getType() + \",\" + oo.getRotation() + \"),new GameObject(\" + replace + \",\" + oo.getLocation().getX() + \",\" + oo.getLocation().getY() + \",0,\" + oo.getType() + \",\" + oo.getRotation() + \")},\");\r\n                        }\r\n                    }\r\n                }\r\n                System.out.println(\"----------------------\");\r\n                break;\r\n            case \"rp\":\r\n                PluginManager.init();\r\n                player.sendMessage(\"Plugins reloaded\");\r\n                break;\r\n            case \"decant\":\r\n                PotionDecantingPlugin.decant(player);\r\n                break;\r\n            case \"removeiron\":\r\n                Player t = Repository.getPlayer(args[1], true);\r\n                if (t == null) {\r\n                    return true;\r\n                }\r\n                t.getIronmanManager().setMode(IronmanMode.NONE);\r\n                if (t.isActive()) {\r\n                    t.sendMessage(\"Iron man mode removed.\");\r\n                }\r\n                player.sendMessage(\"Removed ironman mode.\");\r\n                PlayerParser.dump(t);\r\n                break;\r\n            case \"holidayitemloc\":\r\n                if (args.length < 1) {\r\n                    player.sendMessage(\"Syntax error - please do ::holidayitemloc itemId\");\r\n                    return true;\r\n                }\r\n                int holidayItemId = Integer.parseInt(args[1]);\r\n                Location itemLoc = HolidayItem.getHolidayItemLocation(holidayItemId);\r\n                player.sendMessage(\"The location of the holiday item is - \" + (itemLoc != null ? itemLoc : \"null\") + \".\");\r\n                return true;\r\n            case \"krakme\":\r\n                player.getFamiliarManager().summon(new Item(14651), true);\r\n                break;\r\n            case \"addpets\":\r\n                player.getFamiliarManager().getInsuredPets().add(Pets.BABY_MOLE);\r\n                player.getFamiliarManager().getInsuredPets().add(Pets.KREE_JR);\r\n                player.getFamiliarManager().getInsuredPets().add(Pets.KQ_FORM_1);\r\n                player.getFamiliarManager().getInsuredPets().add(Pets.TZREK_JAD);\r\n                return true;\r\n            case \"clearpets\":\r\n                player.getFamiliarManager().getInsuredPets().clear();\r\n                return true;\r\n            case \"holidayitemamount\":\r\n                if (args.length < 1) {\r\n                    player.sendMessage(\"Syntax error - please do ::holidayitemamount itemId\");\r\n                    return true;\r\n                }\r\n                int itemAmount = Integer.parseInt(args[1]);\r\n                player.sendMessage(\"There are \" + ItemLimitation.getAmountLeft(itemAmount) + \" left.\");\r\n                return true;\r\n            case \"iparse\":\r\n                try {\r\n                    new ItemConfigSQLHandler().parse();\r\n                } catch (SQLException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                break;\r\n            case \"l\":\r\n                player.sendMessage(\"\" + player.getSavedData().getGlobalData().getLowAlchemyCharges());\r\n                //player.getSavedData().getGlobalData().setLowAlchemyCharges(2);\r\n                break;\r\n            case \"o\":\r\n                String[] stock = {\"Bronze arrow\", \"Iron arrow\", \"Steel arrow\", \"Mithril arrow\", \"Adamant arrow\", \"Bronze bolts\", \"Iron bolts\", \"Steel bolts\", \"Shortbow\", \"Oak shortbow\", \"Willow shortbow\", \"Maple shortbow\", \"Yew shortbow\", \"Magic shortbow\", \"Crossbow\", \"Iron crossbow\", \"Steel crossbow\", \"Mith crossbow\", \"Adamant crossbow\", \"Rune crossbow\", \"Green dragonhide set\", \"Blue dragonhide set\", \"Red dragonhide set\", \"Black dragonhide set\", \"Leather vambraces\", \"Leather chaps\", \"Leather body\", \"Leather body\", \"Hardleather body\", \"Leather cowl\", \"Studded body\", \"Studded chaps\", \"Snakeskin boots\", \"Archer helm\", \"Amulet of accuracy\", \"Dorgeshuun c'bow\", \"Bone bolts\", \"Iron knife\", \"Rune knife\"};\r\n                String output = \"\";\r\n                for (String string : stock) {\r\n                    for (int i = 0; i < Cache.getItemDefinitionsSize(); i++) {\r\n                        if (ItemDefinition.forId(i).getName().toLowerCase().equals(string.toLowerCase())) {\r\n                            output += \"{\" + i + \",10}-\";\r\n                            break;\r\n                        }\r\n                        if (i == Cache.getItemDefinitionsSize() - 1) {\r\n                            System.err.println(\"You failed on \" + string);\r\n                        }\r\n                    }\r\n                }\r\n                System.out.println(output);\r\n                break;\r\n            case \"rls\":\r\n                ScriptManager.load();\r\n                break;\r\n            case \"k\":\r\n                String[] types = {\"Adamant\", \"Rune\", \"Dragon\"};\r\n                String[] items = {\"dagger\", \"spear\", \"pickaxe\", \"sword\", \"longsword\", \"2h sword\", \"scimitar\", \"warhammer\", \"axe\", \"battleaxe\"};\r\n                String out = \"\";\r\n                for (String type : types) {\r\n                    for (String item : items) {\r\n                        for (int i = 0; i < Cache.getItemDefinitionsSize(); i++) {\r\n                            if (ItemDefinition.forId(i).getName().equals(type + \" \" + item)) {\r\n                                out += \"{\" + i + \",10}-\";\r\n                                break;\r\n                            }\r\n                            if (i == Cache.getItemDefinitionsSize()) {\r\n                                System.err.println(\"Could not do \" + type + \", & \" + item);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                System.out.println(out);\r\n                break;\r\n            case \"i\":\r\n                for (int i = 0; i < Cache.getNPCDefinitionsSize(); i++) {\r\n                    if (NPCDefinition.forId(i).getName().equals(\"Gnome traveller\")) {\r\n                        System.out.println(i + \", \" + NPCDefinition.forId(i).getExamine());\r\n                    }\r\n                }\r\n                break;\r\n            case \"setpin\":\r\n                if (args.length < 2) {\r\n                    player.sendMessage(\"Syntax error - ::setpin username 1234\");\r\n                    return true;\r\n                }\r\n                Player p = super.getTarget(args[1], true);\r\n                if (p == null) {\r\n                    player.sendMessage(\"Could not find player \" + args[1] + \"!\");\r\n                    return true;\r\n                }\r\n                String pin = args.length > 2 ? args[2] : null;\r\n                p.getBankPinManager().setPin(pin == \"\" ? null : pin);\r\n                p.sendMessage(\"Your pin has been set by an administrator.\");\r\n                player.sendMessage(\"Set \" + p.getUsername() + \"'s pin to \" + pin + \".\");\r\n                return true;\r\n            case \"special\":\r\n            case \"spec\":\r\n                int amount = args.length > 1 ? Integer.parseInt(args[1]) : 100;\r\n                player.getSettings().setSpecialEnergy(amount);\r\n                return true;\r\n            case \"god\":\r\n                player.setAttribute(\"godMode\", !player.getAttribute(\"godMode\", false));\r\n                player.sendMessage(\"God mode=<col=ff0000>\" + player.getAttribute(\"godMode\", false));\r\n                break;\r\n            case \"1hit\":\r\n                int[] bonuses = new int[15];\r\n                for (int z = 0; z < 15; z++) {\r\n                    if (player.getProperties().getBonuses()[z] > 1000) {\r\n                        EquipmentContainer.updateBonuses(player);\r\n                        break;\r\n                    }\r\n                    bonuses[z] = 10000;\r\n                }\r\n                if (bonuses[1] > 1000) {\r\n                    player.getProperties().setBonuses(bonuses);\r\n                }\r\n                return true;\r\n            case \"home\":\r\n                player.teleport(ServerConstants.HOME_LOCATION);\r\n                return true;\r\n            case \"heal\":\r\n            case \"hp\":\r\n            case \"life\":\r\n                player.getSettings().setSpecialEnergy(100);\r\n                player.getSettings().updateRunEnergy(-100);\r\n                player.getSkills().setLifepointsIncrease(0);\r\n                player.getSkills().rechargePrayerPoints();\r\n                player.getSkills().heal(100);\r\n                player.getSkills().setLevel(Skills.SUMMONING, player.getSkills().getStaticLevel(Skills.SUMMONING));\r\n                player.getStateManager().remove(EntityState.TELEBLOCK);\r\n                if (player.getFamiliarManager().hasFamiliar()) {\r\n                    player.getFamiliarManager().getFamiliar().updateSpecialPoints(-200);\r\n                }\r\n                return true;\r\n            case \"slayerpoints\":\r\n                player.getSlayer().setSlayerPoints(10000);\r\n                return true;\r\n            case \"bank\":\r\n                player.getBank().open();\r\n                return true;\r\n            case \"peekbank\":\r\n            \ttry {\r\n            \t\tPlayer pl = new Player(PlayerDetails.getDetails(args[1]));\r\n            \t\tplayer.sendMessage(\"penis\");\r\n            \t\tPlayerParser.parse(pl);\r\n            \t\tpl.getBank().open(player);\r\n            \t\tplayer.getPacketDispatch().sendString(pl.getUsername()+ \"'s bank.\",762,24);\r\n            \t} catch (Exception e) {player.sendMessage(\"damn\"); e.printStackTrace();}\r\n            \treturn true;\r\n            case \"iii\":\r\n            \tfor (int i = 0; i < Integer.parseInt(args[1]); ++i) {\r\n            \t\tplayer.getPacketDispatch().sendString(\"\" + i, Integer.parseInt(args[2]), i);\r\n            \t}\r\n            \treturn true;\r\n            case \"debugil\":\r\n                for (int itemIdv : ItemLimitation.getItems().keySet()) {\r\n                    player.getPacketDispatch().sendMessage(itemIdv + \": \" + ItemDefinition.forId(itemIdv).getName() + \" is limited to \" + ItemLimitation.getItems().get(itemIdv) + \".\");\r\n                    System.out.println(itemIdv + \": \" + ItemDefinition.forId(itemIdv).getName() + \" is limited to \" + ItemLimitation.getItems().get(itemIdv) + \".\");\r\n                }\r\n                return true;\r\n            case \"setil\":\r\n                if (args.length < 3) {\r\n                    player.getPacketDispatch().sendMessage(\"Syntax is ::setil itemId limit.\");\r\n                    return true;\r\n                }\r\n                player.getPacketDispatch().sendMessage(\"Limited item \" + args[1] + \" to \" + args[2] + \".\");\r\n                ItemLimitation.register(toInteger(args[1]), toInteger(args[2]));\r\n                return true;\r\n            case \"unlock\":\r\n                player.unlock();\r\n                return true;\r\n            case \"task\":\r\n                ResourceAIPManager.get().runTask(player, \"Willow Logs\");\r\n                break;\r\n            case \"gettask\":\r\n                ResourceAIPManager.get().runTask(player, \"Willow Logs\");\r\n                break;\r\n            case \"modroom\":\r\n                player.teleport(new Location(2843, 5214, 0));\r\n                return true;\r\n            case \"poh\":\r\n                if (!player.getHouseManager().hasHouse()) {\r\n                    player.getHouseManager().create(HouseLocation.RIMMINGTON);\r\n                }\r\n                player.getHouseManager().enter(player, true);\r\n                return true;\r\n            case \"resethouse\":\r\n            case \"rh\":\r\n                player.getHouseManager().clearRooms();\r\n                player.getHouseManager().create(HouseLocation.RIMMINGTON);\r\n                player.getHouseManager().enter(player, true);\r\n                return true;\r\n            case \"debug\":\r\n                player.toggleDebug();\r\n                return true;\r\n            case \"copycoords\":\r\n                String coords = player.getLocation().getX() + \", \" + player.getLocation().getY() + \", \" + player.getLocation().getZ();\r\n                Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\r\n                clipboard.setContents(new StringSelection(coords), null);\r\n                break;\r\n            case \"zones\":\r\n                for (RegionZone z : player.getZoneMonitor().getZones()) {\r\n                    player.getPacketDispatch().sendMessage(\"Region zone \" + z.getZone().getName() + \" active...\");\r\n                }\r\n                return true;\r\n            case \"additem\":\r\n            case \"deleteitem\":\r\n            case \"deleteitemb\":\r\n                if (name.equals(\"additem\")) {\r\n                    addItem(player, args);\r\n                } else {\r\n                    deleteItem(player, args);\r\n                }\r\n                break;\r\n            case \"roar\":\r\n                player.getPacketDispatch().sendInterfaceConfig(762, 20, false);\r\n                break;\r\n            case \"setstage\":\r\n                if(args.length < 2) {\r\n                    player.getPacketDispatch().sendMessage(\"Syntax: setstage stage# quest name\");\r\n                } else {\r\n                    int stageId = 0;\r\n                    stageId = toInteger(args[1]);\r\n                    String questName = \"\";\r\n                    for (int i = 2; i < args.length; i++) {\r\n                        questName += (i == 2 ? \"\" : \" \") + args[i];\r\n                    }\r\n                    questName = StringUtils.formatDisplayName(questName);\r\n                    Quest quest = player.getQuestRepository().getQuest(questName);\r\n                    if (quest == null) {\r\n                        player.debug(\"err or: invalid quest - \" + questName);\r\n                        return true;\r\n                    }\r\n                    player.debug(\"Setting quest \" + questName + \" to stage \" + stageId);\r\n                    player.getQuestRepository().setStage(quest,stageId);\r\n                    player.getQuestRepository().syncronizeTab(player);\r\n                }\r\n                break;\r\n            case \"finishtask\":\r\n                player.debug(\"Kill the npc that spawned to finish your task.\");\r\n                player.getSlayer().setAmount(1);\r\n                NPC finisher = new NPC(player.getSlayer().getTask().getNpcs()[0],player.getLocation());\r\n                finisher.setRespawn(false);\r\n                finisher.init();\r\n                break;\r\n            case \"setslayerpoints\":\r\n                player.getSlayer().setSlayerPoints(toInteger(args[1]));\r\n                player.debug(\"Set slayer points to \" + args[1]);\r\n                break;\r\n            }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Adds an item to a players item.\r\n     *\r\n     * @param player the player.\r\n     * @param args   the args.\r\n     */\r\n    private void addItem(Player player, String[] args) {\r\n        Player t = Repository.getPlayer(args[1]);\r\n        if (t == null) {\r\n            return;\r\n        }\r\n        int id = toInteger(args[2]);\r\n        int amount = toInteger(args[3]);\r\n        Item item = new Item(id, amount);\r\n        t.getInventory().add(item);\r\n        player.getPacketDispatch().sendMessage(\"You just gave \" + t.getUsername() + \" the item - \" + item);\r\n    }\r\n\r\n    /**\r\n     * Deletes an item from a players item.\r\n     *\r\n     * @param player the player.\r\n     * @param args   the args.\r\n     */\r\n    private void deleteItem(Player player, String[] args) {\r\n        Player t = Repository.getPlayer(args[1]);\r\n        if (t == null) {\r\n            return;\r\n        }\r\n        int id = toInteger(args[2]);\r\n        int amount = toInteger(args[3]);\r\n        Item item = new Item(id, amount);\r\n        if (args[0].equals(\"deleteitemb\")) {\r\n            t.getBank().remove(item);\r\n        } else {\r\n            t.getInventory().remove(item);\r\n        }\r\n        player.getPacketDispatch().sendMessage(\"You just removed\" + t.getUsername() + \" the item - \" + item);\r\n    }\r\n\r\n\r\n    private Location generateLocation(Player player) {\r\n        Location random_location = new Location(3075 + RandomFunction.random(-15, 15), 3954 + RandomFunction.random(-15, 15), 0);\r\n        if (!RegionManager.isTeleportPermitted(random_location)) {\r\n            return generateLocation(player);\r\n        }\r\n        if (!Pathfinder.find(player, random_location, false, Pathfinder.DUMB).isSuccessful()) {\r\n            return generateLocation(player);\r\n        }\r\n        if (RegionManager.getObject(random_location) != null) {\r\n            return generateLocation(player);\r\n        }\r\n        return random_location;\r\n    }\r\n\r\n    private void dump(Player player, Container container) {\r\n        for (Item i : container.toArray()) {\r\n            if (i == null) {\r\n                continue;\r\n            }\r\n            if (!player.getBank().canAdd(i)) {\r\n                player.getPacketDispatch().sendMessage(\"A magical force prevents you from banking your equipment.\");\r\n                return;\r\n            }\r\n            if (!player.getBank().hasSpaceFor(i)) {\r\n                player.getPacketDispatch().sendMessage(\"There is not enough space left in your bank.\");\r\n                return;\r\n            }\r\n            if (container.remove(i)) {\r\n                player.getBank().add(i.getDefinition().isUnnoted() ? i : new Item(i.getNoteChange(), i.getAmount()));\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/command/DeveloperCommandPlugin.java	(revision 25177c7389a44663bd7623221b75d446b8940c03)
+++ Server/src/main/java/Server/plugin/command/DeveloperCommandPlugin.java	(date 1594952667975)
@@ -101,17 +101,21 @@
     @Override
     public boolean parse(final Player player, String name, String[] args) {
         switch (name) {
-        	case "unlockmusic":
-        		for (MusicEntry me : MusicEntry.getSongs().values()) {
-        			player.getMusicPlayer().unlock(me.getId());
-        		}
-        		
-        	break;
-        	
-        	case "setlevel":
-        		player.getSkills().setLevel(Integer.parseInt(args[1]), Integer.parseInt(args[2]));
-        		player.getSkills().setStaticLevel(Integer.parseInt(args[1]), Integer.parseInt(args[2]));
-        		break;
+            case "unlockmusic":
+                for (MusicEntry me : MusicEntry.getSongs().values()) {
+                    player.getMusicPlayer().unlock(me.getId());
+                }
+
+                break;
+
+            case "killall":
+                RegionManager.getLocalNpcs(player).forEach(n -> n.getImpactHandler().manualHit(player,1000,HitsplatType.NORMAL));
+                break;
+
+            case "setlevel":
+                player.getSkills().setLevel(Integer.parseInt(args[1]), Integer.parseInt(args[2]));
+                player.getSkills().setStaticLevel(Integer.parseInt(args[1]), Integer.parseInt(args[2]));
+                break;
             case "attr":
                 player.setAttribute("/save:test",true);
                 break;
@@ -125,10 +129,10 @@
             case "remattr":
                 player.removeAttribute("test");
                 break;
-        	case "playsong":
-        		player.getMusicPlayer().play(MusicEntry.getSongs().get(Integer.parseInt(args[1])));
-        		player.sendMessage("Playing song: " + MusicEntry.getSongs().get(Integer.parseInt(args[1])).getName());
-        		break;
+            case "playsong":
+                player.getMusicPlayer().play(MusicEntry.getSongs().get(Integer.parseInt(args[1])));
+                player.sendMessage("Playing song: " + MusicEntry.getSongs().get(Integer.parseInt(args[1])).getName());
+                break;
             case "doyellow":
                 player.sendMessage("Running quest..");
                 player.getQuestRepository().getQuest("What Quest").finish(player);
@@ -304,27 +308,27 @@
 
                 });
                 break;
-               
+
             case "tempsound":
-            	player.getPacketDispatch().sendTempMusic(Integer.parseInt(args[1]));
-            	break;
+                player.getPacketDispatch().sendTempMusic(Integer.parseInt(args[1]));
+                break;
             case "loopsounds":
                 GameWorld.Pulser.submit(new Pulse(5) {
-            		int i = Integer.parseInt(args[2]);
-            		int j = Integer.parseInt(args[1]);
-            		@Override
-            		public boolean pulse() {
-                		player.sendMessage("Sound: " + i);
-                		player.getPacketDispatch().sendTempMusic(i);
-            			i++;
-            			if (i >= j) {
-            				return true;
-            			}
-            			return false;
-            		}
-            	});
-            	break;
-                
+                    int i = Integer.parseInt(args[2]);
+                    int j = Integer.parseInt(args[1]);
+                    @Override
+                    public boolean pulse() {
+                        player.sendMessage("Sound: " + i);
+                        player.getPacketDispatch().sendTempMusic(i);
+                        i++;
+                        if (i >= j) {
+                            return true;
+                        }
+                        return false;
+                    }
+                });
+                break;
+
             case "c":
                 for (Bar bar : Bar.values()) {
                     System.out.println(bar.getProduct().getId() + ",");
@@ -542,19 +546,19 @@
                 player.getBank().open();
                 return true;
             case "peekbank":
-            	try {
-            		Player pl = new Player(PlayerDetails.getDetails(args[1]));
-            		player.sendMessage("penis");
-            		PlayerParser.parse(pl);
-            		pl.getBank().open(player);
-            		player.getPacketDispatch().sendString(pl.getUsername()+ "'s bank.",762,24);
-            	} catch (Exception e) {player.sendMessage("damn"); e.printStackTrace();}
-            	return true;
+                try {
+                    Player pl = new Player(PlayerDetails.getDetails(args[1]));
+                    player.sendMessage("penis");
+                    PlayerParser.parse(pl);
+                    pl.getBank().open(player);
+                    player.getPacketDispatch().sendString(pl.getUsername()+ "'s bank.",762,24);
+                } catch (Exception e) {player.sendMessage("damn"); e.printStackTrace();}
+                return true;
             case "iii":
-            	for (int i = 0; i < Integer.parseInt(args[1]); ++i) {
-            		player.getPacketDispatch().sendString("" + i, Integer.parseInt(args[2]), i);
-            	}
-            	return true;
+                for (int i = 0; i < Integer.parseInt(args[1]); ++i) {
+                    player.getPacketDispatch().sendString("" + i, Integer.parseInt(args[2]), i);
+                }
+                return true;
             case "debugil":
                 for (int itemIdv : ItemLimitation.getItems().keySet()) {
                     player.getPacketDispatch().sendMessage(itemIdv + ": " + ItemDefinition.forId(itemIdv).getName() + " is limited to " + ItemLimitation.getItems().get(itemIdv) + ".");
@@ -573,9 +577,6 @@
                 player.unlock();
                 return true;
             case "task":
-                ResourceAIPManager.get().runTask(player, "Willow Logs");
-                break;
-            case "gettask":
                 ResourceAIPManager.get().runTask(player, "Willow Logs");
                 break;
             case "modroom":
@@ -650,7 +651,7 @@
                 player.getSlayer().setSlayerPoints(toInteger(args[1]));
                 player.debug("Set slayer points to " + args[1]);
                 break;
-            }
+        }
         return false;
     }
 
Index: Server/src/main/java/Server/plugin/trivia/TriviaQuestions.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.trivia\r\n\r\nimport core.game.system.SystemLogger\r\nimport java.io.File\r\n\r\nclass QuestionLoader{\r\n    class TriviaQuestion(val question:  String?,val answer: String?)\r\n\r\n    val qfile = System.getProperty(\"user.dir\") + \"/src/main/java/Server/plugin/trivia-kotlin/questions.txt\"\r\n    val questions = arrayListOf<TriviaQuestion>()\r\n\r\n    fun loadQuestions(): List<TriviaQuestion> {\r\n        var count = 0\r\n        File(qfile).forEachLine { line ->\r\n            val args = line.split(\"::\")\r\n            questions.add(TriviaQuestion(args[0],args[1]))\r\n            count++;\r\n        }\r\n        SystemLogger.log(\"[Trivia] Loaded $count questions.\")\r\n        return questions\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/trivia/TriviaQuestions.kt	(revision 25177c7389a44663bd7623221b75d446b8940c03)
+++ Server/src/main/java/Server/plugin/trivia/TriviaQuestions.kt	(date 1594773564370)
@@ -6,7 +6,7 @@
 class QuestionLoader{
     class TriviaQuestion(val question:  String?,val answer: String?)
 
-    val qfile = System.getProperty("user.dir") + "/src/main/java/Server/plugin/trivia-kotlin/questions.txt"
+    val qfile = System.getProperty("user.dir") + "/src/main/java/Server/plugin/trivia/questions.txt"
     val questions = arrayListOf<TriviaQuestion>()
 
     fun loadQuestions(): List<TriviaQuestion> {
Index: Server/src/main/java/Server/core/game/content/global/action/EquipHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.content.global.action;\r\n\r\nimport core.cache.def.impl.ItemDefinition;\r\nimport core.game.container.impl.EquipmentContainer;\r\nimport plugin.tutorial.TutorialSession;\r\nimport plugin.tutorial.TutorialStage;\r\nimport core.game.interaction.OptionHandler;\r\nimport core.game.node.Node;\r\nimport core.game.node.entity.lock.Lock;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.link.audio.Audio;\r\nimport core.game.node.item.Item;\r\nimport core.game.world.GameWorld;\r\nimport core.plugin.Plugin;\r\n\r\n/**\r\n * Represents the equipment equipping handler plugin.\r\n * @author Emperor\r\n * @author Vexia\r\n * \r\n */\r\npublic class EquipHandler extends OptionHandler {\r\n\r\n\t/**\r\n\t * Represents the singleton.\r\n\t */\r\n\tpublic static final EquipHandler SINGLETON = new EquipHandler();\r\n\r\n\t/**\r\n\t * The sound to send.\r\n\t */\r\n\tprivate static final Audio SOUND = new Audio(2242, 1, 0);\r\n\r\n\t/**\r\n\t * Constructs a new {@code EquipHandler} {@code Object}.\r\n\t */\r\n\tpublic EquipHandler() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Plugin<Object> newInstance(Object arg) throws Throwable {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean handle(final Player player, Node node, String option) {\r\n\t\tfinal Item item = ((Item) node);\r\n\t\tif (item == null || player.getInventory().get(item.getSlot()) != item) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (TutorialSession.getExtension(player).getStage() < 46) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"You'll be told how to equip items later.\");\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (TutorialSession.getExtension(player).getStage() == 46 && item.getId() == 1205) {\r\n\t\t\tTutorialStage.load(player, 47, false);\r\n\t\t}\r\n\t\tPlugin<Object> plugin = item.getDefinition().getConfiguration(\"equipment\", null);\r\n\t\tif (plugin != null) {\r\n\t\t\tBoolean bool = (Boolean) plugin.fireEvent(\"equip\", player, item);\r\n\t\t\tif (bool != null && !bool) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tLock lock = player.getLocks().getEquipmentLock();\r\n\t\tif (lock != null && lock.isLocked()) {\r\n\t\t\tif (lock.getMessage() != null) {\r\n\t\t\t\tplayer.getPacketDispatch().sendMessage(lock.getMessage());\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tplayer.setAttribute(\"equipLock:\" + item.getId(), GameWorld.getTicks() + 2);\r\n\t\tif (player.getEquipment().add(item, item.getSlot(), true, true)) {\r\n\t\t\t//check if a brawling glove is being equipped and register it\r\n\t\t\tif(item.getId() >= 13845 && item.getId() <= 13857) {\r\n\t\t\t\tplayer.debug(\"Registering gloves... ID: \" + item.getId());\r\n\t\t\t\tplayer.getBrawlingGlovesManager().registerGlove(item.getId());\r\n\t\t\t}\r\n\t\t\tplayer.getDialogueInterpreter().close();\r\n\t\t\tplayer.getAudioManager().send(SOUND);\r\n\t\t}\r\n\t\tItemDefinition.statsUpdate(player);\r\n\t\tif (TutorialSession.getExtension(player).getStage() == 48) {\r\n\t\t\tif (player.getEquipment().containItems(1171, 1277)) {\r\n\t\t\t\tTutorialStage.load(player, 49, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Unequips an item.\r\n\t * @param player the player.\r\n\t * @param slot the slot.\r\n\t * @param itemId the item id.\r\n\t */\r\n\tpublic static void unequip(Player player, int slot, int itemId) {\r\n\t\tif (slot < 0 || slot > 13) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tItem item = player.getEquipment().get(slot);\r\n\t\tif (item == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tLock lock = player.getLocks().getEquipmentLock();\r\n\t\tif (lock != null && lock.isLocked()) {\r\n\t\t\tif (lock.getMessage() != null) {\r\n\t\t\t\tplayer.getPacketDispatch().sendMessage(lock.getMessage());\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (slot == EquipmentContainer.SLOT_WEAPON) {\r\n\t\t\tplayer.getPacketDispatch().sendString(\"\", 92, 0);\r\n\t\t}\r\n\t\tint maximumAdd = player.getInventory().getMaximumAdd(item);\r\n\t\tif (maximumAdd < item.getAmount()) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"Not enough free space in your inventory.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tPlugin<Object> plugin = item.getDefinition().getConfiguration(\"equipment\", null);\r\n\t\tif (plugin != null) {\r\n\t\t\tif (!(boolean) plugin.fireEvent(\"unequip\", player, item)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (player.getEquipment().remove(item)) {\r\n\t\t\tplayer.getAudioManager().send(new Audio(2238, 10, 1));\r\n\t\t\tplayer.getDialogueInterpreter().close();\r\n\t\t\tplayer.getInventory().add(item);\r\n\t\t}\r\n\t}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/content/global/action/EquipHandler.java	(revision 25177c7389a44663bd7623221b75d446b8940c03)
+++ Server/src/main/java/Server/core/game/content/global/action/EquipHandler.java	(date 1594888621008)
@@ -1,9 +1,7 @@
 package core.game.content.global.action;
 
-import core.cache.def.impl.ItemDefinition;
 import core.game.container.impl.EquipmentContainer;
-import plugin.tutorial.TutorialSession;
-import plugin.tutorial.TutorialStage;
+import core.game.content.EquipSoundsKt;
 import core.game.interaction.OptionHandler;
 import core.game.node.Node;
 import core.game.node.entity.lock.Lock;
@@ -15,8 +13,8 @@
 
 /**
  * Represents the equipment equipping handler plugin.
- * @author Emperor
- * @author Vexia
+ * @author Ceikry
+ * @author Woah
  * 
  */
 public class EquipHandler extends OptionHandler {
@@ -29,7 +27,7 @@
 	/**
 	 * The sound to send.
 	 */
-	private static final Audio SOUND = new Audio(2242, 1, 0);
+	private static final Audio DEFAULT = new Audio(2242, 1, 0);
 
 	/**
 	 * Constructs a new {@code EquipHandler} {@code Object}.
@@ -49,13 +47,6 @@
 		if (item == null || player.getInventory().get(item.getSlot()) != item) {
 			return true;
 		}
-		if (TutorialSession.getExtension(player).getStage() < 46) {
-			player.getPacketDispatch().sendMessage("You'll be told how to equip items later.");
-			return true;
-		}
-		if (TutorialSession.getExtension(player).getStage() == 46 && item.getId() == 1205) {
-			TutorialStage.load(player, 47, false);
-		}
 		Plugin<Object> plugin = item.getDefinition().getConfiguration("equipment", null);
 		if (plugin != null) {
 			Boolean bool = (Boolean) plugin.fireEvent("equip", player, item);
@@ -78,13 +69,7 @@
 				player.getBrawlingGlovesManager().registerGlove(item.getId());
 			}
 			player.getDialogueInterpreter().close();
-			player.getAudioManager().send(SOUND);
-		}
-		ItemDefinition.statsUpdate(player);
-		if (TutorialSession.getExtension(player).getStage() == 48) {
-			if (player.getEquipment().containItems(1171, 1277)) {
-				TutorialStage.load(player, 49, false);
-			}
+			player.getAudioManager().send(EquipSoundsKt.gibAudio(item.getId()), 1);
 		}
 		return true;
 	}
Index: Server/src/main/java/Server/core/Server.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core;\r\n\r\nimport core.game.system.SystemLogger;\r\nimport core.game.system.SystemShutdownHook;\r\nimport core.game.system.mysql.SQLManager;\r\nimport core.game.world.GameSettings;\r\nimport core.game.world.GameWorld;\r\nimport core.gui.ConsoleFrame;\r\nimport core.net.NioReactor;\r\nimport core.net.amsc.WorldCommunicator;\r\nimport core.tools.TimeStamp;\r\nimport core.tools.backup.AutoBackup;\r\nimport org.runite.Configurations;\r\nimport plugin.ge.GEAutoStock;\r\n\r\nimport java.io.File;\r\nimport java.net.BindException;\r\n\r\n/**\r\n * The main class, for those that are unable to read the class' name.\r\n * @author Emperor\r\n * @author Vexia\r\n * \r\n */\r\npublic final class Server {\r\n\r\n\t/**\r\n\t * The time stamp of when the server started running.\r\n\t */\r\n\tpublic static long startTime;\r\n\r\n\t/**\r\n\t * The NIO reactor.\r\n\t */\r\n\tpublic static NioReactor reactor;\r\n\r\n\tprivate static AutoBackup backup;\r\n\r\n\t/**\r\n\t * The main method, in this method we load background utilities such as\r\n\t * cache and our world, then end with starting networking.\r\n\t * @param args The arguments cast on runtime.\r\n\t * @throws Throwable When an exception occurs.\r\n\t */\r\n\tpublic static void main(String... args) throws Throwable {\r\n\t\tif (args.length > 0) {\r\n\t\t\tGameWorld.setSettings(GameSettings.parse(args));\r\n\t\t}\r\n\t\tif (GameWorld.getSettings().isGui()) {\r\n\t\t\ttry {\r\n\t\t\t\tConsoleFrame.getInstance().init();\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tSystem.out.println(\"X11 server missing - launching server with no GUI!\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tstartTime = System.currentTimeMillis();\r\n\t\tfinal TimeStamp t = new TimeStamp();\r\n//\t\tbackup = new AutoBackup();\r\n\t\tGameWorld.prompt(true);\r\n\t\tSQLManager.init();\r\n\t\tRuntime.getRuntime().addShutdownHook(new Thread(new SystemShutdownHook()));\r\n\t\tSystemLogger.log(\"Starting NIO reactor...\");\r\n\r\n\t\ttry {\r\n\t\t\treactor = NioReactor.configure(43594 + GameWorld.getSettings().getWorldId());\r\n\t\t} catch (BindException e) {\r\n\t\t\tSystem.out.println(\"Port \" + 43594 + GameWorld.getSettings().getWorldId() + \" is already in use!\");\r\n\t\t\tthrow e;\r\n\t\t}\r\n\r\n\t\tWorldCommunicator.connect();\r\n\t\treactor.start();\r\n\t\tSystemLogger.log(GameWorld.getName() + \" flags \" + GameWorld.getSettings().toString());\r\n\t\tSystemLogger.log(GameWorld.getName() + \" started in \" + t.duration(false, \"\") + \" milliseconds.\");\r\n\t\tGEAutoStock.parse(\"data\" + File.separator + \"eco\" + File.separator + \"itemstostock.xml\");\r\n\t\t// TODO Run the eco kick starter 1 time for the live server then comment it out\r\n//\t\tResourceManager.kickStartEconomy();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the startTime.\r\n\t * @return the startTime\r\n\t */\r\n\tpublic static long getStartTime() {\r\n\t\treturn startTime;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the bastartTime.ZZ\r\n\t * @param startTime the startTime to set.\r\n\t */\r\n\tpublic static void setStartTime(long startTime) {\r\n\t\tServer.startTime = startTime;\r\n\t}\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/Server.java	(revision 25177c7389a44663bd7623221b75d446b8940c03)
+++ Server/src/main/java/Server/core/Server.java	(date 1594863281332)
@@ -10,7 +10,6 @@
 import core.net.amsc.WorldCommunicator;
 import core.tools.TimeStamp;
 import core.tools.backup.AutoBackup;
-import org.runite.Configurations;
 import plugin.ge.GEAutoStock;
 
 import java.io.File;
Index: Server/src/main/java/Server/core/game/content/EquipSounds.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/content/EquipSounds.kt	(date 1594888768702)
+++ Server/src/main/java/Server/core/game/content/EquipSounds.kt	(date 1594888768702)
@@ -0,0 +1,2714 @@
+package core.game.content
+
+import core.game.content.global.action.EquipHandler
+import core.game.node.entity.player.link.audio.Audio
+import core.game.node.item.Item
+
+
+/**
+ * Represents the equipment equipping handler plugin.
+ * @author Woah
+ */
+
+    fun gibAudio(itemId: Int): Int? {
+        return equipSound.getOrDefault(itemId, 2242)
+    }
+
+    val equipSound = hashMapOf(
+            0 to 2242,
+            35 to 2248,
+            74 to 2240,
+            75 to 2239,
+            78 to 2244,
+            88 to 2237,
+            89 to 2237,
+            278 to 2247,
+            295 to 2238,
+            421 to 2238,
+            430 to 2238,
+            466 to 2232,
+            468 to 2232,
+            470 to 2232,
+            472 to 2232,
+            474 to 2232,
+            476 to 2232,
+            478 to 2232,
+            492 to 2229,
+            494 to 2229,
+            496 to 2229,
+            498 to 2229,
+            500 to 2229,
+            502 to 2229,
+            504 to 2229,
+            506 to 2229,
+            552 to 2238,
+            589 to 2238,
+            598 to 2244,
+            667 to 2248,
+            746 to 2248,
+            747 to 2248,
+            767 to 2244,
+            768 to 2244,
+            772 to 2247,
+            773 to 2238,
+            800 to 2232,
+            801 to 2232,
+            802 to 2232,
+            803 to 2232,
+            804 to 2232,
+            805 to 2232,
+            806 to 2244,
+            807 to 2244,
+            808 to 2244,
+            809 to 2244,
+            810 to 2244,
+            811 to 2244,
+            812 to 2244,
+            813 to 2244,
+            814 to 2244,
+            815 to 2244,
+            816 to 2244,
+            817 to 2244,
+            818 to 2244,
+            825 to 2247,
+            826 to 2247,
+            827 to 2247,
+            828 to 2247,
+            829 to 2247,
+            830 to 2247,
+            831 to 2247,
+            832 to 2247,
+            833 to 2247,
+            834 to 2247,
+            835 to 2247,
+            836 to 2247,
+            837 to 2244,
+            838 to 2244,
+            839 to 2244,
+            840 to 2244,
+            841 to 2244,
+            842 to 2244,
+            843 to 2244,
+            844 to 2244,
+            845 to 2244,
+            846 to 2244,
+            847 to 2244,
+            848 to 2244,
+            849 to 2244,
+            850 to 2244,
+            851 to 2244,
+            852 to 2244,
+            853 to 2244,
+            854 to 2244,
+            855 to 2244,
+            856 to 2244,
+            857 to 2244,
+            858 to 2244,
+            859 to 2244,
+            860 to 2244,
+            861 to 2244,
+            862 to 2244,
+            863 to 2244,
+            864 to 2244,
+            865 to 2244,
+            866 to 2244,
+            867 to 2244,
+            868 to 2244,
+            869 to 2244,
+            870 to 2244,
+            871 to 2244,
+            872 to 2244,
+            873 to 2244,
+            874 to 2244,
+            875 to 2244,
+            876 to 2244,
+            877 to 2235,
+            878 to 2235,
+            879 to 2235,
+            880 to 2235,
+            881 to 2235,
+            882 to 2244,
+            883 to 2244,
+            884 to 2244,
+            885 to 2244,
+            886 to 2244,
+            887 to 2244,
+            888 to 2244,
+            889 to 2244,
+            890 to 2244,
+            891 to 2244,
+            892 to 2244,
+            893 to 2244,
+            942 to 2244,
+            975 to 2248,
+            976 to 2248,
+            1007 to 2238,
+            1008 to 2238,
+            1019 to 2238,
+            1020 to 2238,
+            1021 to 2238,
+            1022 to 2238,
+            1023 to 2238,
+            1024 to 2238,
+            1027 to 2238,
+            1028 to 2238,
+            1029 to 2238,
+            1030 to 2238,
+            1031 to 2238,
+            1032 to 2238,
+            1052 to 2238,
+            1063 to 2241,
+            1064 to 2241,
+            1065 to 2241,
+            1066 to 2241,
+            1067 to 2242,
+            1068 to 2242,
+            1069 to 2242,
+            1070 to 2242,
+            1071 to 2242,
+            1072 to 2242,
+            1073 to 2242,
+            1074 to 2242,
+            1075 to 2242,
+            1076 to 2242,
+            1077 to 2242,
+            1078 to 2242,
+            1079 to 2242,
+            1080 to 2242,
+            1081 to 2242,
+            1082 to 2242,
+            1083 to 2242,
+            1084 to 2242,
+            1085 to 2242,
+            1086 to 2242,
+            1087 to 2242,
+            1088 to 2242,
+            1089 to 2242,
+            1090 to 2242,
+            1091 to 2242,
+            1092 to 2242,
+            1093 to 2242,
+            1094 to 2242,
+            1095 to 2241,
+            1096 to 2241,
+            1097 to 2241,
+            1098 to 2241,
+            1099 to 2241,
+            1100 to 2241,
+            1101 to 2239,
+            1102 to 2239,
+            1103 to 2239,
+            1104 to 2239,
+            1105 to 2239,
+            1106 to 2239,
+            1107 to 2239,
+            1108 to 2239,
+            1109 to 2239,
+            1110 to 2239,
+            1111 to 2239,
+            1112 to 2239,
+            1113 to 2239,
+            1114 to 2239,
+            1115 to 2239,
+            1116 to 2239,
+            1117 to 2239,
+            1118 to 2239,
+            1119 to 2239,
+            1120 to 2239,
+            1121 to 2239,
+            1122 to 2239,
+            1123 to 2239,
+            1124 to 2239,
+            1125 to 2239,
+            1126 to 2239,
+            1127 to 2239,
+            1128 to 2239,
+            1129 to 2241,
+            1130 to 2241,
+            1131 to 2241,
+            1132 to 2241,
+            1133 to 2241,
+            1134 to 2241,
+            1135 to 2241,
+            1136 to 2241,
+            1137 to 2240,
+            1138 to 2240,
+            1139 to 2240,
+            1140 to 2240,
+            1141 to 2240,
+            1142 to 2240,
+            1143 to 2240,
+            1144 to 2240,
+            1145 to 2240,
+            1146 to 2240,
+            1147 to 2240,
+            1148 to 2240,
+            1149 to 2240,
+            1150 to 2240,
+            1151 to 2240,
+            1152 to 2240,
+            1153 to 2240,
+            1154 to 2240,
+            1155 to 2240,
+            1156 to 2240,
+            1157 to 2240,
+            1158 to 2240,
+            1159 to 2240,
+            1160 to 2240,
+            1161 to 2240,
+            1162 to 2240,
+            1163 to 2240,
+            1164 to 2240,
+            1165 to 2240,
+            1166 to 2240,
+            1167 to 2240,
+            1168 to 2240,
+            1169 to 2240,
+            1170 to 2240,
+            1173 to 2245,
+            1174 to 2245,
+            1175 to 2245,
+            1176 to 2245,
+            1177 to 2245,
+            1178 to 2245,
+            1179 to 2245,
+            1180 to 2245,
+            1181 to 2245,
+            1182 to 2245,
+            1183 to 2245,
+            1184 to 2245,
+            1185 to 2245,
+            1186 to 2245,
+            1187 to 2245,
+            1188 to 2245,
+            1189 to 2245,
+            1190 to 2245,
+            1191 to 2245,
+            1192 to 2245,
+            1193 to 2245,
+            1194 to 2245,
+            1195 to 2245,
+            1196 to 2245,
+            1197 to 2245,
+            1198 to 2245,
+            1199 to 2245,
+            1200 to 2245,
+            1201 to 2245,
+            1202 to 2245,
+            1203 to 2248,
+            1204 to 2248,
+            1205 to 2248,
+            1206 to 2248,
+            1207 to 2248,
+            1208 to 2248,
+            1209 to 2248,
+            1210 to 2248,
+            1211 to 2248,
+            1212 to 2248,
+            1213 to 2248,
+            1214 to 2248,
+            1215 to 2248,
+            1216 to 2248,
+            1217 to 2248,
+            1218 to 2248,
+            1219 to 2248,
+            1220 to 2248,
+            1221 to 2248,
+            1222 to 2248,
+            1223 to 2248,
+            1224 to 2248,
+            1225 to 2248,
+            1226 to 2248,
+            1227 to 2248,
+            1228 to 2248,
+            1229 to 2248,
+            1230 to 2248,
+            1231 to 2248,
+            1232 to 2248,
+            1233 to 2248,
+            1234 to 2248,
+            1235 to 2248,
+            1236 to 2248,
+            1237 to 2247,
+            1238 to 2247,
+            1239 to 2247,
+            1240 to 2247,
+            1241 to 2247,
+            1242 to 2247,
+            1243 to 2247,
+            1244 to 2247,
+            1245 to 2247,
+            1246 to 2247,
+            1247 to 2247,
+            1248 to 2247,
+            1249 to 2247,
+            1250 to 2247,
+            1251 to 2247,
+            1252 to 2247,
+            1253 to 2247,
+            1254 to 2247,
+            1255 to 2247,
+            1256 to 2247,
+            1257 to 2247,
+            1258 to 2247,
+            1259 to 2247,
+            1260 to 2247,
+            1261 to 2247,
+            1262 to 2247,
+            1263 to 2247,
+            1264 to 2247,
+            1265 to 2232,
+            1267 to 2232,
+            1269 to 2232,
+            1271 to 2232,
+            1272 to 2232,
+            1273 to 2232,
+            1274 to 2232,
+            1275 to 2232,
+            1277 to 2248,
+            1278 to 2248,
+            1279 to 2248,
+            1280 to 2248,
+            1281 to 2248,
+            1282 to 2248,
+            1283 to 2248,
+            1284 to 2248,
+            1285 to 2248,
+            1286 to 2248,
+            1287 to 2248,
+            1288 to 2248,
+            1289 to 2248,
+            1290 to 2248,
+            1291 to 2248,
+            1292 to 2248,
+            1293 to 2248,
+            1294 to 2248,
+            1295 to 2248,
+            1296 to 2248,
+            1297 to 2248,
+            1298 to 2248,
+            1299 to 2248,
+            1300 to 2248,
+            1301 to 2248,
+            1302 to 2248,
+            1303 to 2248,
+            1304 to 2248,
+            1305 to 2248,
+            1306 to 2248,
+            1307 to 2248,
+            1308 to 2248,
+            1309 to 2248,
+            1310 to 2248,
+            1311 to 2248,
+            1312 to 2248,
+            1313 to 2248,
+            1314 to 2248,
+            1315 to 2248,
+            1316 to 2248,
+            1317 to 2248,
+            1318 to 2248,
+            1319 to 2248,
+            1320 to 2248,
+            1321 to 2248,
+            1322 to 2248,
+            1323 to 2248,
+            1324 to 2248,
+            1325 to 2248,
+            1326 to 2248,
+            1327 to 2248,
+            1328 to 2248,
+            1329 to 2248,
+            1330 to 2248,
+            1331 to 2248,
+            1332 to 2248,
+            1333 to 2248,
+            1334 to 2248,
+            1335 to 2243,
+            1336 to 2243,
+            1337 to 2243,
+            1338 to 2243,
+            1339 to 2243,
+            1340 to 2243,
+            1341 to 2243,
+            1342 to 2243,
+            1343 to 2243,
+            1344 to 2243,
+            1345 to 2243,
+            1346 to 2243,
+            1347 to 2243,
+            1348 to 2243,
+            1349 to 2229,
+            1350 to 2229,
+            1351 to 2229,
+            1353 to 2229,
+            1355 to 2229,
+            1357 to 2229,
+            1359 to 2229,
+            1361 to 2229,
+            1379 to 2247,
+            1380 to 2247,
+            1381 to 2247,
+            1382 to 2247,
+            1383 to 2247,
+            1384 to 2247,
+            1385 to 2247,
+            1386 to 2247,
+            1387 to 2247,
+            1388 to 2247,
+            1389 to 2247,
+            1390 to 2247,
+            1391 to 2247,
+            1392 to 2247,
+            1393 to 2247,
+            1394 to 2247,
+            1395 to 2247,
+            1396 to 2247,
+            1397 to 2247,
+            1398 to 2247,
+            1399 to 2247,
+            1400 to 2247,
+            1401 to 2247,
+            1402 to 2247,
+            1403 to 2247,
+            1404 to 2247,
+            1405 to 2247,
+            1406 to 2247,
+            1407 to 2247,
+            1408 to 2247,
+            1409 to 2247,
+            1419 to 2247,
+            1420 to 2246,
+            1421 to 2246,
+            1422 to 2246,
+            1423 to 2246,
+            1424 to 2246,
+            1425 to 2246,
+            1426 to 2246,
+            1427 to 2246,
+            1428 to 2246,
+            1429 to 2246,
+            1430 to 2246,
+            1431 to 2246,
+            1432 to 2246,
+            1433 to 2246,
+            1434 to 2246,
+            1435 to 2246,
+            1478 to 2238,
+            1540 to 2245,
+            1541 to 2245,
+            1635 to 2238,
+            1637 to 2238,
+            1639 to 2238,
+            1641 to 2238,
+            1643 to 2238,
+            1645 to 2238,
+            1692 to 2238,
+            1694 to 2238,
+            1696 to 2238,
+            1698 to 2238,
+            1700 to 2238,
+            1704 to 2238,
+            1706 to 2238,
+            1708 to 2238,
+            1710 to 2238,
+            1712 to 2238,
+            1725 to 2238,
+            1727 to 2238,
+            1729 to 2238,
+            1731 to 2238,
+            1833 to 2238,
+            1834 to 2238,
+            1844 to 2238,
+            1949 to 2238,
+            1950 to 2238,
+            2402 to 2248,
+            2405 to 2239,
+            2412 to 2238,
+            2413 to 2238,
+            2414 to 2238,
+            2415 to 2247,
+            2416 to 2247,
+            2417 to 2247,
+            2487 to 2241,
+            2488 to 2241,
+            2489 to 2241,
+            2490 to 2241,
+            2491 to 2241,
+            2492 to 2241,
+            2493 to 2241,
+            2494 to 2241,
+            2495 to 2241,
+            2496 to 2241,
+            2497 to 2241,
+            2498 to 2241,
+            2499 to 2241,
+            2500 to 2241,
+            2501 to 2241,
+            2502 to 2241,
+            2503 to 2241,
+            2504 to 2241,
+            2532 to 2244,
+            2533 to 2244,
+            2534 to 2244,
+            2535 to 2244,
+            2536 to 2244,
+            2537 to 2244,
+            2538 to 2244,
+            2539 to 2244,
+            2540 to 2244,
+            2541 to 2244,
+            2550 to 2238,
+            2552 to 2238,
+            2554 to 2238,
+            2556 to 2238,
+            2558 to 2238,
+            2560 to 2238,
+            2562 to 2238,
+            2564 to 2238,
+            2566 to 2238,
+            2568 to 2238,
+            2570 to 2238,
+            2572 to 2238,
+            2577 to 2238,
+            2578 to 2238,
+            2579 to 2238,
+            2580 to 2238,
+            2581 to 2238,
+            2582 to 2238,
+            2583 to 2239,
+            2584 to 2239,
+            2585 to 2242,
+            2586 to 2242,
+            2587 to 2240,
+            2588 to 2240,
+            2589 to 2245,
+            2590 to 2245,
+            2591 to 2239,
+            2592 to 2239,
+            2593 to 2242,
+            2594 to 2242,
+            2595 to 2240,
+            2596 to 2240,
+            2597 to 2245,
+            2598 to 2245,
+            2599 to 2239,
+            2600 to 2239,
+            2601 to 2242,
+            2602 to 2242,
+            2603 to 2245,
+            2604 to 2245,
+            2605 to 2240,
+            2606 to 2240,
+            2607 to 2239,
+            2608 to 2239,
+            2609 to 2242,
+            2610 to 2242,
+            2611 to 2245,
+            2612 to 2245,
+            2613 to 2240,
+            2614 to 2240,
+            2615 to 2239,
+            2616 to 2239,
+            2617 to 2242,
+            2618 to 2242,
+            2619 to 2240,
+            2620 to 2240,
+            2621 to 2245,
+            2622 to 2245,
+            2623 to 2239,
+            2624 to 2239,
+            2625 to 2242,
+            2626 to 2242,
+            2627 to 2240,
+            2628 to 2240,
+            2629 to 2245,
+            2630 to 2245,
+            2653 to 2239,
+            2654 to 2239,
+            2655 to 2242,
+            2656 to 2242,
+            2657 to 2240,
+            2658 to 2240,
+            2659 to 2245,
+            2660 to 2245,
+            2661 to 2239,
+            2662 to 2239,
+            2663 to 2242,
+            2664 to 2242,
+            2665 to 2240,
+            2666 to 2240,
+            2667 to 2245,
+            2668 to 2245,
+            2669 to 2239,
+            2670 to 2239,
+            2671 to 2242,
+            2672 to 2242,
+            2673 to 2240,
+            2674 to 2240,
+            2675 to 2245,
+            2676 to 2245,
+            2866 to 2244,
+            2883 to 2244,
+            2952 to 2248,
+            2961 to 2248,
+            2962 to 2248,
+            2963 to 2248,
+            3053 to 2247,
+            3054 to 2247,
+            3055 to 2247,
+            3056 to 2247,
+            3093 to 2244,
+            3094 to 2244,
+            3105 to 2237,
+            3106 to 2237,
+            3107 to 2237,
+            3122 to 2245,
+            3134 to 2245,
+            3140 to 2239,
+            3141 to 2239,
+            3170 to 2247,
+            3171 to 2247,
+            3172 to 2247,
+            3173 to 2247,
+            3174 to 2247,
+            3175 to 2247,
+            3176 to 2247,
+            3190 to 2247,
+            3191 to 2247,
+            3192 to 2247,
+            3193 to 2247,
+            3194 to 2247,
+            3195 to 2247,
+            3196 to 2247,
+            3197 to 2247,
+            3198 to 2247,
+            3199 to 2247,
+            3200 to 2247,
+            3201 to 2247,
+            3202 to 2247,
+            3203 to 2247,
+            3204 to 2247,
+            3205 to 2247,
+            3391 to 2237,
+            3392 to 2237,
+            3393 to 2237,
+            3394 to 2237,
+            3472 to 2242,
+            3473 to 2242,
+            3474 to 2242,
+            3475 to 2242,
+            3476 to 2242,
+            3477 to 2242,
+            3478 to 2242,
+            3479 to 2242,
+            3480 to 2242,
+            3481 to 2239,
+            3482 to 2239,
+            3483 to 2242,
+            3484 to 2242,
+            3485 to 2242,
+            3486 to 2240,
+            3487 to 2240,
+            3488 to 2245,
+            3489 to 2245,
+            3668 to 2242,
+            3669 to 2242,
+            3670 to 2242,
+            3671 to 2242,
+            3672 to 2242,
+            3673 to 2242,
+            3674 to 2242,
+            3675 to 2242,
+            3676 to 2242,
+            3677 to 2242,
+            3748 to 2240,
+            3749 to 2240,
+            3750 to 2240,
+            3751 to 2240,
+            3752 to 2240,
+            3753 to 2240,
+            3754 to 2240,
+            3755 to 2240,
+            3756 to 2240,
+            3757 to 2248,
+            3758 to 2245,
+            3759 to 2238,
+            3760 to 2238,
+            3761 to 2238,
+            3762 to 2238,
+            3763 to 2238,
+            3764 to 2238,
+            3765 to 2238,
+            3766 to 2238,
+            3767 to 2238,
+            3768 to 2238,
+            3769 to 2238,
+            3770 to 2238,
+            3771 to 2238,
+            3772 to 2238,
+            3773 to 2238,
+            3774 to 2238,
+            3775 to 2238,
+            3776 to 2238,
+            3777 to 2238,
+            3778 to 2238,
+            3779 to 2238,
+            3780 to 2238,
+            3781 to 2238,
+            3782 to 2238,
+            3783 to 2238,
+            3784 to 2238,
+            3785 to 2238,
+            3786 to 2238,
+            3787 to 2238,
+            3788 to 2238,
+            3789 to 2238,
+            3790 to 2238,
+            3791 to 2237,
+            3792 to 2237,
+            3899 to 2248,
+            4021 to 2238,
+            4041 to 2238,
+            4042 to 2238,
+            4068 to 2248,
+            4069 to 2239,
+            4070 to 2242,
+            4071 to 2240,
+            4072 to 2245,
+            4081 to 2238,
+            4087 to 2242,
+            4088 to 2242,
+            4089 to 2238,
+            4090 to 2238,
+            4091 to 2238,
+            4092 to 2238,
+            4093 to 2238,
+            4094 to 2238,
+            4095 to 2238,
+            4096 to 2238,
+            4097 to 2238,
+            4098 to 2238,
+            4099 to 2238,
+            4100 to 2238,
+            4101 to 2238,
+            4102 to 2238,
+            4103 to 2238,
+            4104 to 2238,
+            4105 to 2238,
+            4106 to 2238,
+            4107 to 2238,
+            4108 to 2238,
+            4109 to 2238,
+            4110 to 2238,
+            4111 to 2238,
+            4112 to 2238,
+            4113 to 2238,
+            4114 to 2238,
+            4115 to 2238,
+            4116 to 2238,
+            4117 to 2238,
+            4118 to 2238,
+            4119 to 2237,
+            4120 to 2237,
+            4121 to 2237,
+            4122 to 2237,
+            4123 to 2237,
+            4124 to 2237,
+            4125 to 2237,
+            4126 to 2237,
+            4127 to 2237,
+            4128 to 2237,
+            4129 to 2237,
+            4130 to 2237,
+            4131 to 2237,
+            4132 to 2237,
+            4151 to 2249,
+            4152 to 2249,
+            4153 to 2243,
+            4154 to 2243,
+            4156 to 2245,
+            4157 to 2245,
+            4158 to 2247,
+            4160 to 2244,
+            4162 to 2243,
+            4163 to 2243,
+            4170 to 2247,
+            4171 to 2247,
+            4172 to 2244,
+            4173 to 2244,
+            4174 to 2244,
+            4175 to 2244,
+            4202 to 2238,
+            4236 to 2244,
+            4250 to 2238,
+            4298 to 2238,
+            4299 to 2238,
+            4304 to 2238,
+            4305 to 2238,
+            4315 to 2238,
+            4316 to 2238,
+            4317 to 2238,
+            4318 to 2238,
+            4319 to 2238,
+            4320 to 2238,
+            4321 to 2238,
+            4322 to 2238,
+            4323 to 2238,
+            4324 to 2238,
+            4325 to 2238,
+            4326 to 2238,
+            4327 to 2238,
+            4328 to 2238,
+            4329 to 2238,
+            4330 to 2238,
+            4331 to 2238,
+            4332 to 2238,
+            4333 to 2238,
+            4334 to 2238,
+            4335 to 2238,
+            4336 to 2238,
+            4337 to 2238,
+            4338 to 2238,
+            4339 to 2238,
+            4340 to 2238,
+            4341 to 2238,
+            4342 to 2238,
+            4343 to 2238,
+            4344 to 2238,
+            4345 to 2238,
+            4346 to 2238,
+            4347 to 2238,
+            4348 to 2238,
+            4349 to 2238,
+            4350 to 2238,
+            4351 to 2238,
+            4352 to 2238,
+            4353 to 2238,
+            4354 to 2238,
+            4355 to 2238,
+            4356 to 2238,
+            4357 to 2238,
+            4358 to 2238,
+            4359 to 2238,
+            4360 to 2238,
+            4361 to 2238,
+            4362 to 2238,
+            4363 to 2238,
+            4364 to 2238,
+            4365 to 2238,
+            4366 to 2238,
+            4367 to 2238,
+            4368 to 2238,
+            4369 to 2238,
+            4370 to 2238,
+            4371 to 2238,
+            4372 to 2238,
+            4373 to 2238,
+            4374 to 2238,
+            4375 to 2238,
+            4376 to 2238,
+            4377 to 2238,
+            4378 to 2238,
+            4379 to 2238,
+            4380 to 2238,
+            4381 to 2238,
+            4382 to 2238,
+            4383 to 2238,
+            4384 to 2238,
+            4385 to 2238,
+            4386 to 2238,
+            4387 to 2238,
+            4388 to 2238,
+            4389 to 2238,
+            4390 to 2238,
+            4391 to 2238,
+            4392 to 2238,
+            4393 to 2238,
+            4394 to 2238,
+            4395 to 2238,
+            4396 to 2238,
+            4397 to 2238,
+            4398 to 2238,
+            4399 to 2238,
+            4400 to 2238,
+            4401 to 2238,
+            4402 to 2238,
+            4403 to 2238,
+            4404 to 2238,
+            4405 to 2238,
+            4406 to 2238,
+            4407 to 2238,
+            4408 to 2238,
+            4409 to 2238,
+            4410 to 2238,
+            4411 to 2238,
+            4412 to 2238,
+            4413 to 2238,
+            4414 to 2238,
+            4502 to 2240,
+            4503 to 2248,
+            4504 to 2239,
+            4505 to 2242,
+            4506 to 2240,
+            4507 to 2245,
+            4508 to 2248,
+            4509 to 2239,
+            4510 to 2242,
+            4511 to 2240,
+            4512 to 2245,
+            4513 to 2238,
+            4514 to 2238,
+            4515 to 2238,
+            4516 to 2238,
+            4567 to 2240,
+            4580 to 2247,
+            4581 to 2247,
+            4582 to 2247,
+            4583 to 2247,
+            4584 to 2247,
+            4585 to 2242,
+            4586 to 2242,
+            4587 to 2248,
+            4588 to 2248,
+            4599 to 2243,
+            4600 to 2243,
+            4612 to 2243,
+            4657 to 2238,
+            4677 to 2238,
+            4708 to 2240,
+            4709 to 2240,
+            4710 to 2247,
+            4711 to 2247,
+            4712 to 2239,
+            4713 to 2239,
+            4714 to 2242,
+            4715 to 2242,
+            4716 to 2240,
+            4717 to 2240,
+            4718 to 2232,
+            4719 to 2232,
+            4720 to 2239,
+            4721 to 2239,
+            4724 to 2240,
+            4725 to 2240,
+            4726 to 2247,
+            4727 to 2247,
+            4728 to 2239,
+            4729 to 2239,
+            4730 to 2242,
+            4731 to 2242,
+            4734 to 2244,
+            4735 to 2244,
+            4736 to 2241,
+            4737 to 2241,
+            4738 to 2242,
+            4739 to 2242,
+            4740 to 2244,
+            4745 to 2240,
+            4746 to 2240,
+            4747 to 2243,
+            4748 to 2243,
+            4749 to 2239,
+            4750 to 2239,
+            4751 to 2242,
+            4752 to 2242,
+            4753 to 2240,
+            4754 to 2240,
+            4755 to 2246,
+            4756 to 2246,
+            4757 to 2241,
+            4758 to 2241,
+            4759 to 2242,
+            4760 to 2242,
+            4773 to 2244,
+            4778 to 2244,
+            4783 to 2244,
+            4788 to 2244,
+            4793 to 2244,
+            4798 to 2244,
+            4803 to 2244,
+            4827 to 2244,
+            4828 to 2244,
+            4856 to 2240,
+            4857 to 2240,
+            4858 to 2240,
+            4859 to 2240,
+            4862 to 2247,
+            4863 to 2247,
+            4864 to 2247,
+            4865 to 2247,
+            4868 to 2239,
+            4869 to 2239,
+            4870 to 2239,
+            4871 to 2239,
+            4872 to 2239,
+            4873 to 2239,
+            4874 to 2242,
+            4875 to 2242,
+            4876 to 2242,
+            4877 to 2242,
+            4878 to 2242,
+            4879 to 2242,
+            4880 to 2240,
+            4881 to 2240,
+            4882 to 2240,
+            4883 to 2240,
+            4884 to 2240,
+            4885 to 2240,
+            4886 to 2232,
+            4887 to 2232,
+            4888 to 2232,
+            4889 to 2232,
+            4890 to 2232,
+            4892 to 2239,
+            4893 to 2239,
+            4894 to 2239,
+            4895 to 2239,
+            4896 to 2239,
+            4897 to 2239,
+            4904 to 2240,
+            4905 to 2240,
+            4906 to 2240,
+            4907 to 2240,
+            4908 to 2240,
+            4909 to 2240,
+            4910 to 2247,
+            4911 to 2247,
+            4912 to 2247,
+            4913 to 2247,
+            4914 to 2247,
+            4915 to 2247,
+            4916 to 2239,
+            4917 to 2239,
+            4918 to 2239,
+            4919 to 2239,
+            4920 to 2239,
+            4921 to 2239,
+            4922 to 2242,
+            4923 to 2242,
+            4924 to 2242,
+            4925 to 2242,
+            4926 to 2242,
+            4927 to 2242,
+            4934 to 2244,
+            4935 to 2244,
+            4936 to 2244,
+            4937 to 2244,
+            4938 to 2244,
+            4939 to 2244,
+            4940 to 2241,
+            4941 to 2241,
+            4942 to 2241,
+            4943 to 2241,
+            4944 to 2241,
+            4945 to 2241,
+            4946 to 2242,
+            4947 to 2242,
+            4948 to 2242,
+            4949 to 2242,
+            4950 to 2242,
+            4951 to 2242,
+            4952 to 2240,
+            4953 to 2240,
+            4954 to 2240,
+            4955 to 2240,
+            4956 to 2240,
+            4957 to 2240,
+            4958 to 2243,
+            4959 to 2243,
+            4960 to 2243,
+            4961 to 2243,
+            4962 to 2243,
+            4963 to 2243,
+            4964 to 2239,
+            4965 to 2239,
+            4966 to 2239,
+            4967 to 2239,
+            4968 to 2239,
+            4969 to 2239,
+            4970 to 2242,
+            4971 to 2242,
+            4972 to 2242,
+            4973 to 2242,
+            4976 to 2240,
+            4977 to 2240,
+            4978 to 2240,
+            4979 to 2240,
+            4980 to 2240,
+            4981 to 2240,
+            4982 to 2246,
+            4983 to 2246,
+            4984 to 2246,
+            4985 to 2246,
+            4986 to 2246,
+            4987 to 2246,
+            4988 to 2241,
+            4989 to 2241,
+            4990 to 2241,
+            4991 to 2241,
+            4992 to 2241,
+            4993 to 2241,
+            4994 to 2242,
+            4995 to 2242,
+            4996 to 2242,
+            4997 to 2242,
+            4998 to 2242,
+            4999 to 2242,
+            5013 to 2240,
+            5014 to 2240,
+            5015 to 2240,
+            5016 to 2247,
+            5017 to 2247,
+            5018 to 2247,
+            5019 to 2247,
+            5030 to 2238,
+            5031 to 2238,
+            5032 to 2238,
+            5033 to 2238,
+            5034 to 2238,
+            5035 to 2238,
+            5056 to 2232,
+            5057 to 2232,
+            5058 to 2232,
+            5059 to 2232,
+            5060 to 2232,
+            5061 to 2232,
+            5062 to 2237,
+            5063 to 2237,
+            5064 to 2237,
+            5553 to 2241,
+            5554 to 2240,
+            5555 to 2242,
+            5557 to 2237,
+            5616 to 2244,
+            5617 to 2244,
+            5618 to 2244,
+            5619 to 2244,
+            5620 to 2244,
+            5621 to 2244,
+            5622 to 2244,
+            5623 to 2244,
+            5624 to 2244,
+            5625 to 2244,
+            5626 to 2244,
+            5627 to 2244,
+            5628 to 2244,
+            5629 to 2244,
+            5630 to 2244,
+            5631 to 2244,
+            5632 to 2244,
+            5633 to 2244,
+            5634 to 2244,
+            5635 to 2244,
+            5636 to 2244,
+            5637 to 2244,
+            5638 to 2244,
+            5639 to 2244,
+            5640 to 2244,
+            5641 to 2244,
+            5643 to 2247,
+            5644 to 2247,
+            5645 to 2247,
+            5646 to 2247,
+            5647 to 2247,
+            5648 to 2247,
+            5649 to 2247,
+            5650 to 2247,
+            5651 to 2247,
+            5652 to 2247,
+            5653 to 2247,
+            5654 to 2244,
+            5655 to 2244,
+            5656 to 2244,
+            5657 to 2244,
+            5658 to 2244,
+            5659 to 2244,
+            5660 to 2244,
+            5661 to 2244,
+            5662 to 2244,
+            5663 to 2244,
+            5664 to 2244,
+            5665 to 2244,
+            5666 to 2244,
+            5667 to 2244,
+            5668 to 2248,
+            5669 to 2248,
+            5670 to 2248,
+            5671 to 2248,
+            5672 to 2248,
+            5673 to 2248,
+            5674 to 2248,
+            5675 to 2248,
+            5676 to 2248,
+            5677 to 2248,
+            5678 to 2248,
+            5679 to 2248,
+            5680 to 2248,
+            5681 to 2248,
+            5682 to 2248,
+            5683 to 2248,
+            5684 to 2248,
+            5685 to 2248,
+            5686 to 2248,
+            5687 to 2248,
+            5688 to 2248,
+            5689 to 2248,
+            5690 to 2248,
+            5691 to 2248,
+            5692 to 2248,
+            5693 to 2248,
+            5694 to 2248,
+            5695 to 2248,
+            5696 to 2248,
+            5697 to 2248,
+            5698 to 2248,
+            5699 to 2248,
+            5700 to 2248,
+            5701 to 2248,
+            5702 to 2248,
+            5703 to 2248,
+            5704 to 2247,
+            5705 to 2247,
+            5706 to 2247,
+            5707 to 2247,
+            5708 to 2247,
+            5709 to 2247,
+            5710 to 2247,
+            5711 to 2247,
+            5712 to 2247,
+            5713 to 2247,
+            5714 to 2247,
+            5715 to 2247,
+            5716 to 2247,
+            5717 to 2247,
+            5718 to 2247,
+            5719 to 2247,
+            5720 to 2247,
+            5721 to 2247,
+            5722 to 2247,
+            5723 to 2247,
+            5724 to 2247,
+            5725 to 2247,
+            5726 to 2247,
+            5727 to 2247,
+            5728 to 2247,
+            5729 to 2247,
+            5730 to 2247,
+            5731 to 2247,
+            5734 to 2247,
+            5735 to 2247,
+            5736 to 2247,
+            5737 to 2247,
+            6040 to 2238,
+            6041 to 2238,
+            6061 to 2235,
+            6062 to 2235,
+            6065 to 2238,
+            6067 to 2238,
+            6068 to 2238,
+            6069 to 2238,
+            6070 to 2238,
+            6111 to 2238,
+            6208 to 2238,
+            6313 to 2248,
+            6314 to 2248,
+            6315 to 2248,
+            6316 to 2248,
+            6317 to 2248,
+            6318 to 2248,
+            6324 to 2242,
+            6325 to 2242,
+            6328 to 2237,
+            6329 to 2237,
+            6341 to 2238,
+            6342 to 2238,
+            6351 to 2238,
+            6352 to 2238,
+            6361 to 2238,
+            6362 to 2238,
+            6371 to 2238,
+            6372 to 2238,
+            6384 to 2238,
+            6385 to 2238,
+            6388 to 2238,
+            6389 to 2238,
+            6394 to 2238,
+            6395 to 2238,
+            6402 to 2238,
+            6403 to 2238,
+            6465 to 2238,
+            6523 to 2248,
+            6524 to 2245,
+            6525 to 2248,
+            6526 to 2247,
+            6527 to 2246,
+            6528 to 2243,
+            6535 to 2248,
+            6536 to 2245,
+            6537 to 2248,
+            6538 to 2247,
+            6539 to 2246,
+            6540 to 2243,
+            6544 to 2238,
+            6562 to 2247,
+            6563 to 2247,
+            6568 to 2238,
+            6569 to 2238,
+            6570 to 2238,
+            6575 to 2238,
+            6581 to 2238,
+            6585 to 2238,
+            6589 to 2232,
+            6590 to 2232,
+            6591 to 2248,
+            6592 to 2248,
+            6593 to 2248,
+            6594 to 2248,
+            6595 to 2248,
+            6596 to 2248,
+            6597 to 2248,
+            6598 to 2248,
+            6599 to 2248,
+            6600 to 2248,
+            6601 to 2246,
+            6602 to 2246,
+            6603 to 2247,
+            6604 to 2247,
+            6605 to 2248,
+            6606 to 2248,
+            6607 to 2248,
+            6608 to 2248,
+            6609 to 2248,
+            6610 to 2248,
+            6611 to 2248,
+            6612 to 2248,
+            6613 to 2243,
+            6614 to 2243,
+            6619 to 2237,
+            6620 to 2237,
+            6621 to 2240,
+            6622 to 2240,
+            6623 to 2240,
+            6624 to 2240,
+            6625 to 2242,
+            6626 to 2242,
+            6627 to 2242,
+            6628 to 2242,
+            6631 to 2245,
+            6632 to 2245,
+            6633 to 2245,
+            6634 to 2245,
+            6707 to 2238,
+            6724 to 2244,
+            6725 to 2244,
+            6726 to 2247,
+            6727 to 2247,
+            6731 to 2238,
+            6733 to 2238,
+            6735 to 2238,
+            6737 to 2238,
+            6739 to 2229,
+            6740 to 2229,
+            6741 to 2229,
+            6745 to 2248,
+            6746 to 2248,
+            6750 to 2238,
+            6773 to 2247,
+            6774 to 2247,
+            6775 to 2247,
+            6776 to 2247,
+            6777 to 2247,
+            6778 to 2247,
+            6779 to 2247,
+            6786 to 2238,
+            6787 to 2238,
+            6809 to 2242,
+            6813 to 2242,
+            6817 to 2248,
+            6818 to 2248,
+            6908 to 2247,
+            6909 to 2247,
+            6959 to 2238,
+            6960 to 2238,
+            7110 to 2238,
+            7111 to 2238,
+            7122 to 2238,
+            7123 to 2238,
+            7128 to 2238,
+            7129 to 2238,
+            7134 to 2238,
+            7135 to 2238,
+            7140 to 2248,
+            7141 to 2248,
+            7142 to 2248,
+            7158 to 2248,
+            7332 to 2245,
+            7333 to 2245,
+            7334 to 2245,
+            7335 to 2245,
+            7336 to 2245,
+            7337 to 2245,
+            7338 to 2245,
+            7339 to 2245,
+            7340 to 2245,
+            7341 to 2245,
+            7342 to 2245,
+            7343 to 2245,
+            7344 to 2245,
+            7345 to 2245,
+            7346 to 2245,
+            7347 to 2245,
+            7348 to 2245,
+            7349 to 2245,
+            7350 to 2245,
+            7351 to 2245,
+            7352 to 2245,
+            7353 to 2245,
+            7354 to 2245,
+            7355 to 2245,
+            7356 to 2245,
+            7357 to 2245,
+            7358 to 2245,
+            7359 to 2245,
+            7360 to 2245,
+            7361 to 2245,
+            7362 to 2241,
+            7363 to 2241,
+            7364 to 2241,
+            7365 to 2241,
+            7366 to 2241,
+            7367 to 2241,
+            7368 to 2241,
+            7369 to 2241,
+            7370 to 2241,
+            7371 to 2241,
+            7372 to 2241,
+            7373 to 2241,
+            7374 to 2241,
+            7375 to 2241,
+            7376 to 2241,
+            7377 to 2241,
+            7378 to 2241,
+            7379 to 2241,
+            7380 to 2241,
+            7381 to 2241,
+            7382 to 2241,
+            7383 to 2241,
+            7384 to 2241,
+            7385 to 2241,
+            7386 to 2238,
+            7387 to 2238,
+            7388 to 2238,
+            7389 to 2238,
+            7390 to 2238,
+            7391 to 2238,
+            7392 to 2238,
+            7393 to 2238,
+            7394 to 2238,
+            7395 to 2238,
+            7396 to 2238,
+            7397 to 2238,
+            7398 to 2238,
+            7399 to 2238,
+            7400 to 2238,
+            7401 to 2238,
+            7402 to 2238,
+            7403 to 2238,
+            7407 to 2248,
+            7433 to 2248,
+            7434 to 2248,
+            7435 to 2248,
+            7436 to 2248,
+            7437 to 2248,
+            7438 to 2248,
+            7439 to 2248,
+            7440 to 2248,
+            7443 to 2248,
+            7444 to 2248,
+            7445 to 2246,
+            7446 to 2246,
+            7447 to 2248,
+            7448 to 2248,
+            7449 to 2243,
+            7450 to 2243,
+            7451 to 2248,
+            7452 to 2248,
+            7592 to 2238,
+            7639 to 2247,
+            7640 to 2247,
+            7641 to 2247,
+            7642 to 2247,
+            7643 to 2247,
+            7644 to 2247,
+            7645 to 2247,
+            7646 to 2247,
+            7647 to 2247,
+            7648 to 2247,
+            7675 to 2248,
+            7679 to 2247,
+            7680 to 2247,
+            7682 to 2244,
+            7683 to 2244,
+            7684 to 2244,
+            7685 to 2244,
+            7686 to 2244,
+            7687 to 2244,
+            7803 to 2238,
+            7804 to 2247,
+            7805 to 2247,
+            7806 to 2248,
+            7807 to 2232,
+            7808 to 2246,
+            7918 to 2238,
+            7952 to 2229,
+            7957 to 2238,
+            8464 to 2240,
+            8466 to 2240,
+            8468 to 2240,
+            8470 to 2240,
+            8472 to 2240,
+            8474 to 2240,
+            8476 to 2240,
+            8478 to 2240,
+            8480 to 2240,
+            8482 to 2240,
+            8484 to 2240,
+            8486 to 2240,
+            8488 to 2240,
+            8490 to 2240,
+            8492 to 2240,
+            8494 to 2240,
+            8682 to 2240,
+            8684 to 2240,
+            8686 to 2240,
+            8688 to 2240,
+            8690 to 2240,
+            8692 to 2240,
+            8694 to 2240,
+            8696 to 2240,
+            8698 to 2240,
+            8700 to 2240,
+            8702 to 2240,
+            8704 to 2240,
+            8706 to 2240,
+            8708 to 2240,
+            8710 to 2240,
+            8712 to 2240,
+            8714 to 2245,
+            8716 to 2245,
+            8718 to 2245,
+            8720 to 2245,
+            8722 to 2245,
+            8724 to 2245,
+            8726 to 2245,
+            8728 to 2245,
+            8730 to 2245,
+            8732 to 2245,
+            8734 to 2245,
+            8736 to 2245,
+            8738 to 2245,
+            8740 to 2245,
+            8742 to 2245,
+            8744 to 2245,
+            8746 to 2245,
+            8748 to 2245,
+            8750 to 2245,
+            8752 to 2245,
+            8754 to 2245,
+            8756 to 2245,
+            8758 to 2245,
+            8760 to 2245,
+            8762 to 2245,
+            8764 to 2245,
+            8766 to 2245,
+            8768 to 2245,
+            8770 to 2245,
+            8772 to 2245,
+            8774 to 2245,
+            8776 to 2245,
+            8839 to 2239,
+            8841 to 2246,
+            8856 to 2245,
+            8872 to 2248,
+            8873 to 2248,
+            8874 to 2248,
+            8875 to 2248,
+            8876 to 2248,
+            8877 to 2248,
+            8878 to 2248,
+            8879 to 2248,
+            8880 to 2244,
+            8881 to 2244,
+            8882 to 2235,
+            8952 to 2238,
+            8953 to 2238,
+            8954 to 2238,
+            8955 to 2238,
+            8956 to 2238,
+            8957 to 2238,
+            8958 to 2238,
+            9005 to 2237,
+            9006 to 2237,
+            9013 to 2247,
+            9044 to 2247,
+            9045 to 2247,
+            9046 to 2247,
+            9047 to 2247,
+            9048 to 2247,
+            9049 to 2247,
+            9050 to 2247,
+            9051 to 2247,
+            9070 to 2241,
+            9073 to 2237,
+            9074 to 2238,
+            9096 to 2240,
+            9097 to 2241,
+            9098 to 2241,
+            9100 to 2237,
+            9101 to 2238,
+            9102 to 2238,
+            9104 to 2238,
+            9174 to 2244,
+            9175 to 2244,
+            9176 to 2244,
+            9177 to 2244,
+            9178 to 2244,
+            9179 to 2244,
+            9180 to 2244,
+            9181 to 2244,
+            9182 to 2244,
+            9183 to 2244,
+            9184 to 2244,
+            9185 to 2244,
+            9186 to 2244,
+            9236 to 2235,
+            9238 to 2235,
+            9636 to 2242,
+            9637 to 2242,
+            9638 to 2237,
+            9639 to 2237,
+            9678 to 2242,
+            9679 to 2242,
+            9703 to 2248,
+            9704 to 2245,
+            9705 to 2244,
+            9706 to 2244,
+            9747 to 2238,
+            9748 to 2238,
+            9749 to 2238,
+            9750 to 2238,
+            9751 to 2238,
+            9752 to 2238,
+            9753 to 2238,
+            9754 to 2238,
+            9755 to 2238,
+            9756 to 2238,
+            9757 to 2238,
+            9758 to 2238,
+            9759 to 2238,
+            9760 to 2238,
+            9761 to 2238,
+            9762 to 2238,
+            9763 to 2238,
+            9764 to 2238,
+            9765 to 2238,
+            9766 to 2238,
+            9767 to 2238,
+            9768 to 2238,
+            9769 to 2238,
+            9770 to 2238,
+            9771 to 2238,
+            9772 to 2238,
+            9773 to 2238,
+            9774 to 2238,
+            9775 to 2238,
+            9776 to 2238,
+            9777 to 2238,
+            9778 to 2238,
+            9779 to 2238,
+            9780 to 2238,
+            9781 to 2238,
+            9782 to 2238,
+            9783 to 2238,
+            9784 to 2238,
+            9785 to 2238,
+            9786 to 2238,
+            9787 to 2238,
+            9788 to 2238,
+            9789 to 2238,
+            9790 to 2238,
+            9791 to 2238,
+            9792 to 2238,
+            9793 to 2238,
+            9794 to 2238,
+            9795 to 2238,
+            9796 to 2238,
+            9797 to 2238,
+            9798 to 2238,
+            9799 to 2238,
+            9800 to 2238,
+            9801 to 2238,
+            9802 to 2238,
+            9803 to 2238,
+            9804 to 2238,
+            9805 to 2238,
+            9806 to 2238,
+            9807 to 2238,
+            9808 to 2238,
+            9809 to 2238,
+            9810 to 2238,
+            9811 to 2238,
+            9812 to 2238,
+            9813 to 2238,
+            9814 to 2238,
+            9921 to 2237,
+            9923 to 2242,
+            9924 to 2238,
+            9948 to 2238,
+            9949 to 2238,
+            9950 to 2238,
+            10069 to 2238,
+            10070 to 2238,
+            10071 to 2238,
+            10072 to 2238,
+            10073 to 2238,
+            10074 to 2238,
+            10079 to 2241,
+            10080 to 2241,
+            10081 to 2241,
+            10082 to 2241,
+            10083 to 2241,
+            10084 to 2241,
+            10085 to 2241,
+            10086 to 2241,
+            10129 to 2248,
+            10130 to 2248,
+            10156 to 2244,
+            10157 to 2244,
+            10158 to 2235,
+            10159 to 2235,
+            10171 to 2238,
+            10280 to 2244,
+            10281 to 2244,
+            10282 to 2244,
+            10283 to 2244,
+            10284 to 2244,
+            10285 to 2244,
+            10286 to 2240,
+            10287 to 2240,
+            10288 to 2240,
+            10289 to 2240,
+            10290 to 2240,
+            10291 to 2240,
+            10292 to 2240,
+            10293 to 2240,
+            10294 to 2240,
+            10295 to 2240,
+            10296 to 2240,
+            10297 to 2240,
+            10298 to 2240,
+            10299 to 2240,
+            10300 to 2240,
+            10301 to 2240,
+            10302 to 2240,
+            10303 to 2240,
+            10304 to 2240,
+            10305 to 2240,
+            10306 to 2240,
+            10307 to 2240,
+            10308 to 2240,
+            10309 to 2240,
+            10310 to 2240,
+            10311 to 2240,
+            10312 to 2240,
+            10313 to 2240,
+            10314 to 2240,
+            10315 to 2240,
+            10316 to 2238,
+            10317 to 2238,
+            10318 to 2238,
+            10319 to 2238,
+            10320 to 2238,
+            10321 to 2238,
+            10322 to 2238,
+            10323 to 2238,
+            10324 to 2238,
+            10325 to 2238,
+            10344 to 2238,
+            10346 to 2242,
+            10347 to 2242,
+            10350 to 2240,
+            10351 to 2240,
+            10352 to 2245,
+            10353 to 2245,
+            10354 to 2238,
+            10356 to 2238,
+            10358 to 2238,
+            10360 to 2238,
+            10362 to 2238,
+            10364 to 2238,
+            10366 to 2238,
+            10400 to 2238,
+            10401 to 2238,
+            10404 to 2238,
+            10405 to 2238,
+            10408 to 2238,
+            10409 to 2238,
+            10412 to 2238,
+            10413 to 2238,
+            10416 to 2238,
+            10417 to 2238,
+            10420 to 2238,
+            10421 to 2238,
+            10424 to 2238,
+            10425 to 2238,
+            10428 to 2238,
+            10429 to 2238,
+            10432 to 2238,
+            10433 to 2238,
+            10436 to 2238,
+            10437 to 2238,
+            10440 to 2247,
+            10441 to 2247,
+            10442 to 2247,
+            10443 to 2247,
+            10444 to 2247,
+            10445 to 2247,
+            10446 to 2238,
+            10447 to 2238,
+            10448 to 2238,
+            10449 to 2238,
+            10450 to 2238,
+            10451 to 2238,
+            10491 to 2229,
+            10500 to 2238,
+            10547 to 2238,
+            10548 to 2238,
+            10549 to 2238,
+            10550 to 2238,
+            10551 to 2239,
+            10552 to 2238,
+            10553 to 2238,
+            10554 to 2238,
+            10555 to 2238,
+            10564 to 2239,
+            10565 to 2239,
+            10566 to 2238,
+            10581 to 2248,
+            10582 to 2248,
+            10583 to 2248,
+            10584 to 2248,
+            10588 to 2238,
+            10589 to 2240,
+            10590 to 2240,
+            10609 to 2240,
+            10610 to 2239,
+            10611 to 2239,
+            10612 to 2240,
+            10621 to 2241,
+            10635 to 2238,
+            10636 to 2238,
+            10637 to 2238,
+            10638 to 2238,
+            10639 to 2238,
+            10640 to 2238,
+            10641 to 2238,
+            10642 to 2238,
+            10643 to 2238,
+            10644 to 2238,
+            10645 to 2238,
+            10646 to 2238,
+            10647 to 2238,
+            10648 to 2238,
+            10649 to 2238,
+            10650 to 2238,
+            10651 to 2238,
+            10652 to 2238,
+            10653 to 2238,
+            10654 to 2238,
+            10655 to 2238,
+            10656 to 2238,
+            10657 to 2238,
+            10658 to 2238,
+            10659 to 2238,
+            10660 to 2238,
+            10661 to 2238,
+            10662 to 2238,
+            10663 to 2238,
+            10664 to 2238,
+            10689 to 2237,
+            10690 to 2239,
+            10691 to 2239,
+            10696 to 2237,
+            10697 to 2239,
+            10698 to 2239,
+            10699 to 2240,
+            10700 to 2240,
+            10701 to 2240,
+            10702 to 2240,
+            10703 to 2240,
+            10704 to 2240,
+            10705 to 2240,
+            10706 to 2240,
+            10707 to 2240,
+            10708 to 2240,
+            10709 to 2240,
+            10710 to 2240,
+            10711 to 2240,
+            10712 to 2240,
+            10713 to 2240,
+            10719 to 2238,
+            10720 to 2238,
+            10724 to 2237,
+            10726 to 2242,
+            10735 to 2247,
+            10736 to 2238,
+            10738 to 2238,
+            10776 to 2239,
+            10778 to 2239,
+            10780 to 2239,
+            10782 to 2239,
+            10798 to 2239,
+            10800 to 2239,
+            10822 to 2241,
+            10823 to 2241,
+            10824 to 2241,
+            10825 to 2241,
+            10828 to 2240,
+            10843 to 2240,
+            10858 to 2248,
+            10863 to 2238,
+            10887 to 2246,
+            10954 to 2241,
+            10955 to 2241,
+            10956 to 2241,
+            10957 to 2241,
+            10958 to 2241,
+            10959 to 2241,
+            11014 to 2238,
+            11037 to 2248,
+            11038 to 2248,
+            11061 to 2246,
+            11064 to 2246,
+            11165 to 2244,
+            11166 to 2244,
+            11167 to 2244,
+            11168 to 2244,
+            11199 to 2240,
+            11200 to 2240,
+            11201 to 2240,
+            11212 to 2244,
+            11217 to 2244,
+            11222 to 2244,
+            11227 to 2244,
+            11228 to 2244,
+            11229 to 2244,
+            11230 to 2244,
+            11231 to 2244,
+            11233 to 2244,
+            11234 to 2244,
+            11259 to 2247,
+            11283 to 2245,
+            11284 to 2245,
+            11285 to 2245,
+            11367 to 2247,
+            11368 to 2247,
+            11369 to 2247,
+            11370 to 2247,
+            11371 to 2247,
+            11372 to 2247,
+            11373 to 2247,
+            11374 to 2247,
+            11375 to 2247,
+            11376 to 2247,
+            11377 to 2247,
+            11378 to 2247,
+            11379 to 2247,
+            11380 to 2247,
+            11381 to 2247,
+            11382 to 2247,
+            11383 to 2247,
+            11384 to 2247,
+            11385 to 2247,
+            11386 to 2247,
+            11387 to 2247,
+            11388 to 2247,
+            11389 to 2247,
+            11390 to 2247,
+            11391 to 2247,
+            11392 to 2247,
+            11393 to 2247,
+            11394 to 2247,
+            11395 to 2247,
+            11396 to 2247,
+            11397 to 2247,
+            11398 to 2247,
+            11399 to 2247,
+            11400 to 2247,
+            11401 to 2247,
+            11402 to 2247,
+            11403 to 2247,
+            11404 to 2247,
+            11405 to 2247,
+            11406 to 2247,
+            11407 to 2247,
+            11408 to 2247,
+            11409 to 2247,
+            11410 to 2247,
+            11411 to 2247,
+            11412 to 2247,
+            11413 to 2247,
+            11414 to 2247,
+            11415 to 2247,
+            11416 to 2247,
+            11417 to 2247,
+            11418 to 2247,
+            11419 to 2247,
+            11420 to 2247,
+            11694 to 2248,
+            11695 to 2248,
+            11696 to 2248,
+            11697 to 2248,
+            11698 to 2248,
+            11699 to 2248,
+            11700 to 2248,
+            11701 to 2248,
+            11716 to 2247,
+            11717 to 2247,
+            11718 to 2240,
+            11719 to 2240,
+            11720 to 2239,
+            11721 to 2239,
+            11722 to 2242,
+            11723 to 2242,
+            11724 to 2239,
+            11725 to 2239,
+            11726 to 2242,
+            11727 to 2242,
+            11728 to 2237,
+            11729 to 2237,
+            11730 to 2248,
+            11731 to 2248,
+            11732 to 2237,
+            11733 to 2237,
+            11736 to 2247,
+            11737 to 2247,
+            11738 to 2247,
+            11739 to 2247,
+            11756 to 2239,
+            11757 to 2239,
+            11758 to 2239,
+            12169 to 2238,
+            12170 to 2238,
+            12171 to 2238,
+            12204 to 2247,
+            12205 to 2247,
+            12206 to 2247,
+            12207 to 2247,
+            12208 to 2247,
+            12209 to 2247,
+            12210 to 2247,
+            12211 to 2247,
+            12212 to 2247,
+            12213 to 2247,
+            12214 to 2247,
+            12215 to 2247,
+            12216 to 2247,
+            12217 to 2247,
+            12218 to 2247,
+            12219 to 2247,
+            12220 to 2247,
+            12221 to 2247,
+            12222 to 2247,
+            12223 to 2247,
+            12224 to 2247,
+            12524 to 2238,
+            12578 to 2238,
+            12579 to 2238,
+            12580 to 2238,
+            12608 to 2238,
+            12610 to 2238,
+            12612 to 2238,
+            12614 to 2238,
+            12616 to 2238,
+            12618 to 2238,
+            12620 to 2238,
+            12622 to 2238,
+            12634 to 2238,
+            12645 to 2238,
+            12658 to 2240,
+            12659 to 2240,
+            12664 to 2240,
+            12665 to 2240,
+            12666 to 2240,
+            12667 to 2240,
+            12668 to 2240,
+            12669 to 2240,
+            12670 to 2240,
+            12671 to 2240,
+            12672 to 2240,
+            12673 to 2240,
+            12674 to 2240,
+            12675 to 2240,
+            12676 to 2240,
+            12677 to 2240,
+            12678 to 2240,
+            12679 to 2240,
+            12680 to 2240,
+            12681 to 2240,
+            12871 to 2240,
+            12872 to 2240,
+            12878 to 2239,
+            12879 to 2239,
+            12885 to 2242,
+            12886 to 2242,
+            12892 to 2240,
+            12893 to 2240,
+            12899 to 2239,
+            12900 to 2239,
+            12906 to 2242,
+            12907 to 2242,
+            12913 to 2245,
+            12914 to 2245,
+            12920 to 2245,
+            12921 to 2245,
+            12927 to 2245,
+            12928 to 2245,
+            12934 to 2245,
+            12935 to 2245,
+            12969 to 2240,
+            12970 to 2240,
+            12976 to 2239,
+            12977 to 2239,
+            12983 to 2242,
+            12984 to 2242,
+            13081 to 2244,
+            13082 to 2244,
+            13083 to 2244,
+            13084 to 2244,
+            13085 to 2244,
+            13086 to 2244,
+            13095 to 2247,
+            13096 to 2247,
+            13097 to 2247,
+            13098 to 2247,
+            13099 to 2247,
+            13100 to 2247,
+            13105 to 2240,
+            13106 to 2240,
+            13163 to 2247,
+            13164 to 2247,
+            13165 to 2247,
+            13166 to 2241,
+            13168 to 2240,
+            13281 to 2238,
+            13282 to 2238,
+            13283 to 2238,
+            13284 to 2238,
+            13285 to 2238,
+            13286 to 2238,
+            13287 to 2238,
+            13288 to 2238,
+            13290 to 2248,
+            13291 to 2248,
+            13297 to 2238,
+            13358 to 2238,
+            13359 to 2238,
+            13360 to 2238,
+            13361 to 2238,
+            13362 to 2238,
+            13363 to 2238,
+            13407 to 2240,
+            13408 to 2240,
+            13409 to 2240,
+            13410 to 2240,
+            13426 to 2238,
+            13427 to 2238,
+            13428 to 2238,
+            13429 to 2238,
+            13430 to 2248,
+            13442 to 2238,
+            13443 to 2238,
+            13444 to 2249,
+            13445 to 2243,
+            13450 to 2248,
+            13451 to 2248,
+            13452 to 2248,
+            13453 to 2248,
+            13454 to 2247,
+            13455 to 2240,
+            13456 to 2239,
+            13457 to 2242,
+            13458 to 2239,
+            13459 to 2242,
+            13460 to 2237,
+            13461 to 2248,
+            13462 to 2237,
+            13465 to 2248,
+            13469 to 2229,
+            13470 to 2229,
+            13473 to 2243,
+            13474 to 2248,
+            13475 to 2248,
+            13476 to 2248,
+            13477 to 2248,
+            13478 to 2247,
+            13479 to 2246,
+            13480 to 2232,
+            13481 to 2239,
+            13482 to 2239,
+            13483 to 2241,
+            13484 to 2241,
+            13485 to 2241,
+            13486 to 2241,
+            13487 to 2242,
+            13488 to 2242,
+            13489 to 2242,
+            13490 to 2242,
+            13491 to 2241,
+            13492 to 2241,
+            13493 to 2241,
+            13494 to 2241,
+            13495 to 2240,
+            13496 to 2240,
+            13497 to 2241,
+            13498 to 2241,
+            13499 to 2241,
+            13500 to 2241,
+            13504 to 2237,
+            13505 to 2237,
+            13506 to 2245,
+            13507 to 2245,
+            13508 to 2238,
+            13509 to 2238,
+            13510 to 2238,
+            13511 to 2238,
+            13512 to 2238,
+            13513 to 2238,
+            13514 to 2238,
+            13515 to 2238,
+            13516 to 2238,
+            13517 to 2238,
+            13518 to 2238,
+            13519 to 2238,
+            13520 to 2238,
+            13521 to 2238,
+            13522 to 2238,
+            13523 to 2244,
+            13524 to 2244,
+            13525 to 2244,
+            13526 to 2244,
+            13527 to 2244,
+            13528 to 2244,
+            13529 to 2244,
+            13530 to 2244,
+            13541 to 2244,
+            13542 to 2244,
+            13543 to 2244,
+            13551 to 2238,
+            13552 to 2242,
+            13554 to 2240,
+            13555 to 2245,
+            13556 to 2238,
+            13557 to 2238,
+            13558 to 2238,
+            13560 to 2238,
+            13561 to 2238,
+            13562 to 2238,
+            13566 to 2238,
+            13629 to 2247,
+            13630 to 2247,
+            13631 to 2247,
+            13632 to 2247,
+            13633 to 2247,
+            13634 to 2247,
+            13635 to 2247,
+            13636 to 2247,
+            13637 to 2247,
+            13638 to 2247,
+            13639 to 2247,
+            13640 to 2247,
+            13641 to 2247,
+            13642 to 2247,
+            13659 to 2238,
+            13661 to 2229,
+            13668 to 2238,
+            13673 to 2238,
+            13677 to 2238,
+            13681 to 2238,
+            13691 to 2238,
+            13692 to 2238,
+            13693 to 2238,
+            13694 to 2238,
+            13695 to 2238,
+            13696 to 2238,
+            13719 to 2244,
+            13720 to 2244,
+            13721 to 2232,
+            13722 to 2244,
+            13734 to 2245,
+            13735 to 2245,
+            13736 to 2245,
+            13737 to 2245,
+            13738 to 2245,
+            13739 to 2245,
+            13740 to 2245,
+            13741 to 2245,
+            13742 to 2245,
+            13743 to 2245,
+            13744 to 2245,
+            13745 to 2245,
+            13765 to 2248,
+            13769 to 2247,
+            13770 to 2247,
+            13777 to 2248,
+            13778 to 2248,
+            13779 to 2247,
+            13780 to 2246,
+            13781 to 2239,
+            13782 to 2237,
+            13783 to 2240,
+            13784 to 2240,
+            13785 to 2239,
+            13786 to 2242,
+            13787 to 2245,
+            13788 to 2245,
+            13793 to 2247,
+            13800 to 2239,
+            13801 to 2242,
+            13802 to 2242,
+            13803 to 2240,
+            13804 to 2245,
+            13805 to 2239,
+            13806 to 2242,
+            13807 to 2242,
+            13808 to 2240,
+            13809 to 2245,
+            13820 to 2239,
+            13821 to 2242,
+            13822 to 2242,
+            13823 to 2240,
+            13824 to 2245,
+            13825 to 2239,
+            13826 to 2242,
+            13827 to 2242,
+            13828 to 2240,
+            13829 to 2245,
+            13830 to 2239,
+            13831 to 2242,
+            13832 to 2242,
+            13833 to 2240,
+            13834 to 2245,
+            13835 to 2239,
+            13836 to 2242,
+            13837 to 2242,
+            13838 to 2240,
+            13839 to 2245,
+            13858 to 2241,
+            13859 to 2241,
+            13860 to 2241,
+            13861 to 2242,
+            13862 to 2242,
+            13863 to 2242,
+            13864 to 2240,
+            13865 to 2240,
+            13866 to 2240,
+            13867 to 2247,
+            13868 to 2247,
+            13869 to 2247,
+            13870 to 2241,
+            13871 to 2241,
+            13872 to 2241,
+            13873 to 2242,
+            13874 to 2242,
+            13875 to 2242,
+            13879 to 2247,
+            13880 to 2247,
+            13881 to 2247,
+            13882 to 2247,
+            13883 to 2232,
+            13884 to 2239,
+            13885 to 2239,
+            13886 to 2239,
+            13887 to 2239,
+            13888 to 2239,
+            13889 to 2239,
+            13890 to 2239,
+            13891 to 2239,
+            13892 to 2239,
+            13893 to 2239,
+            13894 to 2239,
+            13895 to 2239,
+            13896 to 2240,
+            13897 to 2240,
+            13898 to 2240,
+            13899 to 2248,
+            13900 to 2248,
+            13901 to 2248,
+            13902 to 2243,
+            13903 to 2243,
+            13904 to 2243,
+            13905 to 2247,
+            13906 to 2247,
+            13907 to 2247,
+            13908 to 2239,
+            13909 to 2239,
+            13910 to 2239,
+            13911 to 2239,
+            13912 to 2239,
+            13913 to 2239,
+            13914 to 2239,
+            13915 to 2239,
+            13916 to 2239,
+            13917 to 2239,
+            13918 to 2239,
+            13919 to 2239,
+            13920 to 2240,
+            13921 to 2240,
+            13922 to 2240,
+            13923 to 2248,
+            13924 to 2248,
+            13925 to 2248,
+            13926 to 2243,
+            13927 to 2243,
+            13928 to 2243,
+            13929 to 2247,
+            13930 to 2247,
+            13931 to 2247,
+            13932 to 2241,
+            13933 to 2241,
+            13934 to 2241,
+            13935 to 2242,
+            13936 to 2242,
+            13937 to 2242,
+            13938 to 2240,
+            13939 to 2240,
+            13940 to 2240,
+            13941 to 2247,
+            13942 to 2247,
+            13943 to 2247,
+            13944 to 2241,
+            13945 to 2241,
+            13946 to 2241,
+            13947 to 2242,
+            13948 to 2242,
+            13949 to 2242,
+            13953 to 2247,
+            13954 to 2247,
+            13955 to 2247,
+            13956 to 2247,
+            13957 to 2232,
+            13958 to 2239,
+            13959 to 2239,
+            13960 to 2239,
+            13961 to 2240,
+            13962 to 2240,
+            13963 to 2240,
+            13964 to 2245,
+            13965 to 2245,
+            13966 to 2245,
+            13967 to 2242,
+            13968 to 2242,
+            13969 to 2242,
+            13970 to 2242,
+            13971 to 2242,
+            13972 to 2242,
+            13973 to 2232,
+            13974 to 2232,
+            13975 to 2232,
+            13976 to 2248,
+            13977 to 2248,
+            13978 to 2248,
+            13979 to 2248,
+            13980 to 2248,
+            13981 to 2248,
+            13982 to 2248,
+            13983 to 2248,
+            13984 to 2248,
+            13985 to 2246,
+            13986 to 2246,
+            13987 to 2246,
+            13988 to 2247,
+            13989 to 2247,
+            13990 to 2247,
+            14057 to 2247,
+            14088 to 2238,
+            14094 to 2239,
+            14095 to 2242,
+            14096 to 2240,
+            14097 to 2248,
+            14099 to 2232,
+            14100 to 2229,
+            14107 to 2232,
+            14108 to 2229,
+            14117 to 2247,
+            14118 to 2241,
+            14119 to 2241,
+            14120 to 2240,
+            14121 to 2244,
+            14122 to 2232,
+            14123 to 2232,
+            14124 to 2232,
+            14125 to 2232,
+            14126 to 2232,
+            14127 to 2232,
+            14128 to 2232,
+            14129 to 2232,
+            14130 to 2232,
+            14131 to 2232,
+            14132 to 2229,
+            14133 to 2229,
+            14134 to 2229,
+            14135 to 2229,
+            14136 to 2229,
+            14137 to 2229,
+            14138 to 2229,
+            14139 to 2229,
+            14140 to 2229,
+            14141 to 2229,
+            14142 to 2248,
+            14143 to 2248,
+            14144 to 2248,
+            14145 to 2248,
+            14146 to 2248,
+            14147 to 2248,
+            14148 to 2248,
+            14149 to 2248,
+            14150 to 2248,
+            14151 to 2248,
+            14192 to 2244,
+            14193 to 2244,
+            14194 to 2244,
+            14195 to 2244,
+            14196 to 2244,
+            14197 to 2244,
+            14198 to 2244,
+            14199 to 2244,
+            14200 to 2244,
+            14201 to 2244,
+            14202 to 2244,
+            14203 to 2244,
+            14204 to 2244,
+            14205 to 2244,
+            14206 to 2244,
+            14287 to 2248,
+            14288 to 2248,
+            14289 to 2248,
+            14290 to 2248,
+            14291 to 2248,
+            14292 to 2248,
+            14293 to 2248,
+            14294 to 2248,
+            14295 to 2248,
+            14296 to 2248,
+            14297 to 2248,
+            14298 to 2248,
+            14299 to 2248,
+            14300 to 2248,
+            14301 to 2248,
+            14302 to 2248,
+            14303 to 2248,
+            14304 to 2248,
+            14305 to 2248,
+            14306 to 2248,
+            14307 to 2243,
+            14308 to 2243,
+            14309 to 2243,
+            14310 to 2243,
+            14311 to 2243,
+            14312 to 2243,
+            14313 to 2243,
+            14314 to 2243,
+            14315 to 2243,
+            14316 to 2243,
+            14347 to 2239,
+            14348 to 2239,
+            14349 to 2239,
+            14350 to 2239,
+            14351 to 2239,
+            14352 to 2239,
+            14353 to 2239,
+            14354 to 2239,
+            14355 to 2239,
+            14356 to 2239,
+            14357 to 2242,
+            14358 to 2242,
+            14359 to 2242,
+            14360 to 2242,
+            14361 to 2242,
+            14362 to 2242,
+            14363 to 2242,
+            14364 to 2242,
+            14365 to 2242,
+            14366 to 2242,
+            14367 to 2240,
+            14368 to 2240,
+            14369 to 2240,
+            14370 to 2240,
+            14371 to 2240,
+            14372 to 2240,
+            14373 to 2240,
+            14374 to 2240,
+            14375 to 2240,
+            14376 to 2240,
+            14377 to 2247,
+            14378 to 2247,
+            14379 to 2247,
+            14380 to 2247,
+            14381 to 2247,
+            14382 to 2247,
+            14383 to 2247,
+            14384 to 2247,
+            14385 to 2247,
+            14386 to 2247,
+            14387 to 2238,
+            14389 to 2238,
+            14391 to 2241,
+            14392 to 2241,
+            14393 to 2241,
+            14394 to 2241,
+            14395 to 2241,
+            14396 to 2241,
+            14397 to 2241,
+            14398 to 2241,
+            14399 to 2241,
+            14400 to 2241,
+            14403 to 2241,
+            14404 to 2241,
+            14405 to 2241,
+            14406 to 2241,
+            14407 to 2241,
+            14408 to 2241,
+            14409 to 2241,
+            14410 to 2241,
+            14411 to 2240,
+            14412 to 2240,
+            14413 to 2240,
+            14414 to 2240,
+            14415 to 2240,
+            14416 to 2240,
+            14417 to 2240,
+            14418 to 2240,
+            14419 to 2240,
+            14420 to 2240,
+            14479 to 2239,
+            14480 to 2239,
+            14481 to 2239,
+            14490 to 2242,
+            14491 to 2242,
+            14492 to 2239,
+            14493 to 2239,
+            14494 to 2240,
+            14495 to 2240,
+            14571 to 2237,
+            14572 to 2237,
+            14573 to 2237,
+            14577 to 2245,
+            14578 to 2245,
+            14579 to 2245,
+            14592 to 2242,
+            14593 to 2239,
+            14594 to 2240,
+            14596 to 2238,
+            14599 to 2238,
+            14632 to 2248)
\ No newline at end of file
Index: Server/src/main/java/Server/plugin/skill/agility/BarbarianOutpostCourse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.skill.agility;\r\n\r\nimport core.cache.def.impl.ItemDefinition;\r\nimport core.cache.def.impl.NPCDefinition;\r\nimport core.cache.def.impl.ObjectDefinition;\r\nimport plugin.dialogue.DialoguePlugin;\r\nimport core.game.content.global.action.ClimbActionHandler;\r\nimport core.game.content.global.action.DoorActionHandler;\r\nimport plugin.skill.Skills;\r\nimport core.game.node.Node;\r\nimport core.game.node.entity.combat.ImpactHandler.HitsplatType;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.link.BarcrawlManager;\r\nimport core.game.node.object.GameObject;\r\nimport core.game.system.task.Pulse;\r\nimport core.game.world.GameWorld;\r\nimport core.game.world.map.Location;\r\nimport core.game.world.update.flag.context.Animation;\r\nimport core.game.world.update.flag.context.Graphics;\r\nimport core.plugin.InitializablePlugin;\r\nimport core.plugin.PluginManager;\r\n\r\n/**\r\n * Handles the barbarian outpost course.\r\n * @author 'Vexia\r\n * @version 1.0\r\n */\r\n@InitializablePlugin\r\npublic final class BarbarianOutpostCourse extends AgilityCourse {\r\n\r\n\t/**\r\n\t * The rope delay.\r\n\t */\r\n\tprivate static int ropeDelay;\r\n\r\n\t/**\r\n\t * Constructs a new {@code BarbarianOutpostCourse} {@code Object}.\r\n\t */\r\n\tpublic BarbarianOutpostCourse() {\r\n\t\tthis(null);\r\n\t}\r\n\r\n\t/**\r\n\t * Constructs a new {@code BarbarianOutpostCourse} {@code Object}.\r\n\t * @param player the player.\r\n\t */\r\n\tpublic BarbarianOutpostCourse(Player player) {\r\n\t\tsuper(player, 6, 46.2);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic AgilityCourse createInstance(Player player) {\r\n\t\treturn new BarbarianOutpostCourse(player);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean handle(final Player player, final Node node, final String option) {\r\n\t\tfinal int id = node.getId();\r\n\t\tgetCourse(player);\r\n\t\tswitch (id) {\r\n\t\tcase 2115:\r\n\t\tcase 2116:\r\n\t\t\tif (!player.getBarcrawlManager().isFinished() || player.getBarcrawlManager().isStarted()) {\r\n\t\t\t\tplayer.getDialogueInterpreter().open(384);\r\n\t\t\t} else {\r\n\t\t\t\tDoorActionHandler.handleAutowalkDoor(player, (GameObject) node);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 20210:\r\n\t\t\thandlePipe(player, (GameObject) node);\r\n\t\t\tbreak;\r\n\t\tcase 2282:\r\n\t\t\thandleRopeSwing(player, (GameObject) node);\r\n\t\t\tbreak;\r\n\t\tcase 2294:\r\n\t\t\thandleLogBalance(player, (GameObject) node);\r\n\t\t\tbreak;\r\n\t\tcase 2302:\r\n\t\t\thandleLedgeBalance(player, (GameObject) node);\r\n\t\t\tbreak;\r\n\t\tcase 20211:\r\n\t\t\tif (player.getLocation().getX() < node.getLocation().getX()) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tAgilityHandler.climb(player, 2, ClimbActionHandler.CLIMB_UP, player.getLocation().transform(-1, 0, 1), 8, \"You climb the netting...\");\r\n\t\t\tbreak;\r\n\t\tcase 1948:\r\n\t\t\tif (player.getLocation().getX() > node.getLocation().getX()) {\r\n\t\t\t\tplayer.getPacketDispatch().sendMessage(\"You cannot climb from this side.\");\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tfinal int flag = node.getLocation().equals(new Location(2536, 3553, 0)) ? 4 : node.getLocation().equals(new Location(2539, 3553, 0)) ? 5 : 6;\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"You climb the low wall...\");\r\n\t\t\tAgilityHandler.forceWalk(player, flag, node.getLocation().transform(-1, 0, 0), node.getLocation().transform(1, 0, 0), Animation.create(839), 10, 13.5, null);\r\n\t\t\tbreak;\r\n\t\tcase 455:\r\n\t\t\tplayer.getBarcrawlManager().read();\r\n\t\t\tbreak;\r\n\t\tcase 385:\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"The scorpion stings you!\");\r\n\t\t\tplayer.getImpactHandler().manualHit(player, 3, HitsplatType.NORMAL);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the squeezing through of a pipe.\r\n\t * @param player the player.\r\n\t * @param object the object.\r\n\t */\r\n\tprivate void handlePipe(final Player player, final GameObject object) {\r\n\t\tif (player.getSkills().getStaticLevel(Skills.AGILITY) < 35) {\r\n\t\t\tplayer.getDialogueInterpreter().sendDialogue(\"You need an Agility level of at least 35 to enter.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tAgilityHandler.forceWalk(player, 0, player.getLocation(), player.getLocation().transform(0, getPipeTransform(player), 0), Animation.create(746), 25, 22, null, 1);\r\n\t\tGameWorld.Pulser.submit(new Pulse(2, player) {\r\n\t\t\t@Override\r\n\t\t\tpublic boolean pulse() {\r\n\t\t\t\tplayer.faceLocation(object.getLocation());\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the rope swing obstacle.\r\n\t * @param player the player.\r\n\t * @param object the object.\r\n\t */\r\n\tprivate void handleRopeSwing(final Player player, final GameObject object) {\r\n\t\tif (player.getLocation().getY() < 3554) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"You cannot do that from here.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (ropeDelay > GameWorld.getTicks()) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"The rope is being used.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (AgilityHandler.hasFailed(player, 1, 0.1)) {\r\n\t\t\tAgilityHandler.fail(player, 0, Location.create(2549, 9951, 0), null, getHitAmount(player), \"You slip and fall to the pit bellow.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tropeDelay = GameWorld.getTicks() + 2;\r\n\t\tplayer.getPacketDispatch().sendObjectAnimation(object, Animation.create(497), true);\r\n\t\tAgilityHandler.forceWalk(player, 0, player.getLocation(), Location.create(2551, 3549, 0), Animation.create(751), 50, 22, \"You skillfully swing across.\", 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the log balance obstacle.\r\n\t * @param player the player.\r\n\t * @param object the object.\r\n\t */\r\n\tprivate void handleLogBalance(final Player player, final GameObject object) {\r\n\t\tfinal boolean failed = AgilityHandler.hasFailed(player, 1, 0.5);\r\n\t\tfinal Location end = failed ? Location.create(2545, 3546, 0) : Location.create(2541, 3546, 0);\r\n\t\tplayer.getPacketDispatch().sendMessage(\"You walk carefully across the slippery log...\");\r\n\t\tAgilityHandler.walk(player, failed ? -1 : 1, Location.create(2551, 3546, 0), end, Animation.create(155), failed ? 0.0 : 13.5, failed ? null : \"...You make it safely to the other side.\");\r\n\t\tif (failed) {\r\n\t\t\tAgilityHandler.walk(player, -1, player.getLocation(), Location.create(2545, 3546, 0), Animation.create(155), 0.0, null);\r\n\t\t\tGameWorld.Pulser.submit(getSwimPulse(player));\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the ledge balance obstacle.\r\n\t * @param player the player.\r\n\t * @param object the object.\r\n\t */\r\n\tprivate void handleLedgeBalance(final Player player, final GameObject object) {\r\n\t\tfinal boolean failed = AgilityHandler.hasFailed(player, 1, 0.3);\r\n\t\tfinal Location end = failed ? Location.create(2534, 3547, 1) : Location.create(2532, 3547, 1);\r\n\t\tAgilityHandler.walk(player, failed ? -1 : 3, Location.create(2536, 3547, 1), end, Animation.create(157), failed ? 0.0 : 22, failed ? null : \"You skillfully edge across the gap.\");\r\n\t\tplayer.getPacketDispatch().sendMessage(\"You put your foot on the ledge and try to edge across..\");\r\n\t\tif (failed) {\r\n\t\t\tAgilityHandler.fail(player, 3, Location.create(2534, 3545, 0), new Animation(760), getHitAmount(player), \"You slip and fall to the pit bellow.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the pulse used to swim when failing the log balance.\r\n\t * @param player the player.\r\n\t * @return {@code Pulse} the pulse.\r\n\t */\r\n\tprivate Pulse getSwimPulse(final Player player) {\r\n\t\treturn new Pulse(1, player) {\r\n\t\t\tint counter;\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic boolean pulse() {\r\n\t\t\t\tswitch (++counter) {\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\tplayer.animate(Animation.create(771));\r\n\t\t\t\t\tplayer.getPacketDispatch().sendMessages(\"...You loose your footing and fall into the water.\", \"Something in the water bites you.\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\tplayer.graphics(Graphics.create(68));\r\n\t\t\t\t\tplayer.getProperties().setTeleportLocation(Location.create(2545, 3545, 0));\r\n\t\t\t\t\tplayer.getImpactHandler().manualHit(player, getHitAmount(player), HitsplatType.NORMAL);\r\n\t\t\t\t\tAgilityHandler.walk(player, -1, Location.create(2545, 3545, 0), Location.create(2545, 3543, 0), Animation.create(752), 0.0, null);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 11:\r\n\t\t\t\t\tplayer.getProperties().setTeleportLocation(Location.create(2545, 3542, 0));\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the pipe transformation.\r\n\t * @param player the player.\r\n\t * @return the transform.\r\n\t */\r\n\tprivate int getPipeTransform(final Player player) {\r\n\t\treturn (player.getLocation().getY() > 3558 ? -3 : 3);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void configure() {\r\n\t\tObjectDefinition.forId(2115).getConfigurations().put(\"option:open\", this);\r\n\t\tObjectDefinition.forId(2116).getConfigurations().put(\"option:open\", this);\r\n\t\tObjectDefinition.forId(20210).getConfigurations().put(\"option:squeeze-through\", this);\r\n\t\tObjectDefinition.forId(2282).getConfigurations().put(\"option:swing-on\", this);\r\n\t\tObjectDefinition.forId(2294).getConfigurations().put(\"option:walk-across\", this);\r\n\t\tObjectDefinition.forId(20211).getConfigurations().put(\"option:climb-over\", this);\r\n\t\tObjectDefinition.forId(2302).getConfigurations().put(\"option:walk-across\", this);\r\n\t\tObjectDefinition.forId(1948).getConfigurations().put(\"option:climb-over\", this);\r\n\t\tItemDefinition.forId(455).getConfigurations().put(\"option:read\", this);\r\n\t\tNPCDefinition.forId(385).getConfigurations().put(\"option:pick-up\", this);\r\n\t\tPluginManager.definePlugin(new BarbarianGuardDialogue());\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Location getDestination(Node node, Node n) {\r\n\t\tif (n instanceof GameObject) {\r\n\t\t\tswitch (n.getId()) {\r\n\t\t\tcase 2282:// rope.\r\n\t\t\t\treturn Location.create(2551, 3554, 0);\r\n\t\t\tcase 20210:\r\n\t\t\t\treturn node.getLocation().getY() > n.getLocation().getY() ? Location.create(2552, 3561, 0) : Location.create(2552, 3558, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * The barbarian guard dialogue plugin.\r\n\t * @author 'Vexia\r\n\t * @version 1.0\r\n\t */\r\n\tpublic static final class BarbarianGuardDialogue extends DialoguePlugin {\r\n\r\n\t\t/**\r\n\t\t * Constructs a new {@code BarbarianGuardDialogue} {@code Object}.\r\n\t\t */\r\n\t\tpublic BarbarianGuardDialogue() {\r\n\t\t\t/**\r\n\t\t\t * empty.\r\n\t\t\t */\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Constructs a new {@code BarbarianGuardDialogue} {@code Object}.\r\n\t\t * @param player the player.\r\n\t\t */\r\n\t\tpublic BarbarianGuardDialogue(final Player player) {\r\n\t\t\tsuper(player);\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic DialoguePlugin newInstance(Player player) {\r\n\t\t\treturn new BarbarianGuardDialogue(player);\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic boolean open(Object... args) {\r\n\t\t\tif (!player.getBarcrawlManager().isStarted()) {\r\n\t\t\t\tnpc(\"O, waddya want?\");\r\n\t\t\t} else if (player.getBarcrawlManager().isFinished() && !player.getBarcrawlManager().isStarted()) {\r\n\t\t\t\tnpc(\"'Ello friend.\");\r\n\t\t\t\tstage = 50;\r\n\t\t\t} else {\r\n\t\t\t\tnpc(\"So, how's the Barcrawl coming along?\");\r\n\t\t\t\tstage = 20;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic boolean handle(int interfaceId, int buttonId) {\r\n\t\t\tswitch (stage) {\r\n\t\t\tcase 0:\r\n\t\t\t\toptions(\"I want to come through this gate.\", \"I want some money.\");\r\n\t\t\t\tstage++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tswitch (buttonId) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tplayer(\"I want to come throught his gate.\");\r\n\t\t\t\t\tstage = 5;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tplayer(\"I want some money.\");\r\n\t\t\t\t\tstage = 3;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tnpc(\"Do I look like a bank to you?\");\r\n\t\t\t\tstage++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tend();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tif (player.getBarcrawlManager().isFinished()) {\r\n\t\t\t\t\tnpc(\"You may pass if you like. You are a true\", \"barbarian now.\");\r\n\t\t\t\t\tstage = 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnpc(\"Barbarians only. Are you a barbarian? You don't look\", \"like one.\");\r\n\t\t\t\t\tstage++;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\toptions(\"Hmm, yep you've got me there.\", \"Looks can be deceiving, I am in fact a barbarian.\");\r\n\t\t\t\tstage++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 7:\r\n\t\t\t\tswitch (buttonId) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tplayer(\"Hmm, yep you've got me there.\");\r\n\t\t\t\t\tstage = 4;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tplayer(\"Looks can be deceiving, I am in fact a barbarian.\");\r\n\t\t\t\t\tstage++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8:\r\n\t\t\t\tnpc(\"If you're a barbarian you need to be able to drink like\", \"one. We barbarians like a good drink.\");\r\n\t\t\t\tstage++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 9:\r\n\t\t\t\tnpc(\"I have the perfect challenge for you... the Alfred\", \"Grimhand Barcrawl! First completed by Alfred\", \"Grimhand.\");\r\n\t\t\t\tstage++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 10:\r\n\t\t\t\tplayer.getBarcrawlManager().reset();\r\n\t\t\t\tplayer.getBarcrawlManager().setStarted(true);\r\n\t\t\t\tplayer.getInventory().add(BarcrawlManager.BARCRAWL_CARD, player);\r\n\t\t\t\tinterpreter.sendDialogue(\"The guard hands you a Barcrawl card.\");\r\n\t\t\t\tstage++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 11:\r\n\t\t\t\tnpc(\"Take that card to each of the bards named on it. The\", \"bartenders will know what it means. We're kinda well\", \"known.\");\r\n\t\t\t\tstage++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 12:\r\n\t\t\t\tnpc(\"They'll give you their strongest drink and sign your\", \"card. When you've done all that, we'll be happy to let\", \"you in.\");\r\n\t\t\t\tstage++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13:\r\n\t\t\t\tend();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 20:\r\n\t\t\t\tif (!player.getBarcrawlManager().hasCard()) {\r\n\t\t\t\t\tplayer(\"I've lost my barcrawl card...\");\r\n\t\t\t\t\tstage = 23;\r\n\t\t\t\t} else if (player.getBarcrawlManager().isFinished()) {\r\n\t\t\t\t\tplayer(\"I tink I jusht 'bout done dem all... but I losht count...\");\r\n\t\t\t\t\tstage = 24;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tplayer(\"I haven't finished it yet.\");\r\n\t\t\t\t\tstage++;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 21:\r\n\t\t\t\tnpc(\"Well come back when you have, you lightweight.\");\r\n\t\t\t\tstage++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 22:\r\n\t\t\t\tend();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 23:\r\n\t\t\t\tnpc(\"What are you like? You're gonna have to start all over\", \"now.\");\r\n\t\t\t\tstage = 10;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 24:\r\n\t\t\t\tif (!player.getInventory().containsItem(BarcrawlManager.BARCRAWL_CARD)) {\r\n\t\t\t\t\tend();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tplayer.getBarcrawlManager().setStarted(false);\r\n\t\t\t\tplayer.getBank().remove(BarcrawlManager.BARCRAWL_CARD);\r\n\t\t\t\tplayer.getInventory().remove(BarcrawlManager.BARCRAWL_CARD);\r\n\t\t\t\tinterpreter.sendDialogue(\"You give the card to the barbarian.\");\r\n\t\t\t\tstage++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 25:\r\n\t\t\t\tnpc(\"Yep that seems fine, you can come in now. I never\", \"learned to read, but you look like you've drunk plenty.\");\r\n\t\t\t\tstage = 22;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 50:\r\n\t\t\t\tend();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic int[] getIds() {\r\n\t\t\treturn new int[] { 384 };\r\n\t\t}\r\n\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/skill/agility/BarbarianOutpostCourse.java	(revision 25177c7389a44663bd7623221b75d446b8940c03)
+++ Server/src/main/java/Server/plugin/skill/agility/BarbarianOutpostCourse.java	(date 1594771715523)
@@ -22,7 +22,7 @@
 
 /**
  * Handles the barbarian outpost course.
- * @author 'Vexia
+ * @author Woah
  * @version 1.0
  */
 @InitializablePlugin
@@ -58,48 +58,48 @@
 		final int id = node.getId();
 		getCourse(player);
 		switch (id) {
-		case 2115:
-		case 2116:
-			if (!player.getBarcrawlManager().isFinished() || player.getBarcrawlManager().isStarted()) {
-				player.getDialogueInterpreter().open(384);
-			} else {
-				DoorActionHandler.handleAutowalkDoor(player, (GameObject) node);
-			}
-			break;
-		case 20210:
-			handlePipe(player, (GameObject) node);
-			break;
-		case 2282:
-			handleRopeSwing(player, (GameObject) node);
-			break;
-		case 2294:
-			handleLogBalance(player, (GameObject) node);
-			break;
-		case 2302:
-			handleLedgeBalance(player, (GameObject) node);
-			break;
-		case 20211:
-			if (player.getLocation().getX() < node.getLocation().getX()) {
-				return true;
-			}
-			AgilityHandler.climb(player, 2, ClimbActionHandler.CLIMB_UP, player.getLocation().transform(-1, 0, 1), 8, "You climb the netting...");
-			break;
-		case 1948:
-			if (player.getLocation().getX() > node.getLocation().getX()) {
-				player.getPacketDispatch().sendMessage("You cannot climb from this side.");
-				break;
-			}
-			final int flag = node.getLocation().equals(new Location(2536, 3553, 0)) ? 4 : node.getLocation().equals(new Location(2539, 3553, 0)) ? 5 : 6;
-			player.getPacketDispatch().sendMessage("You climb the low wall...");
-			AgilityHandler.forceWalk(player, flag, node.getLocation().transform(-1, 0, 0), node.getLocation().transform(1, 0, 0), Animation.create(839), 10, 13.5, null);
-			break;
-		case 455:
-			player.getBarcrawlManager().read();
-			break;
-		case 385:
-			player.getPacketDispatch().sendMessage("The scorpion stings you!");
-			player.getImpactHandler().manualHit(player, 3, HitsplatType.NORMAL);
-			break;
+			case 2115:
+			case 2116:
+				if (!player.getBarcrawlManager().isFinished() || player.getBarcrawlManager().isStarted()) {
+					player.getDialogueInterpreter().open(384);
+				} else {
+					DoorActionHandler.handleAutowalkDoor(player, (GameObject) node);
+				}
+				break;
+			case 20210:
+				handlePipe(player, (GameObject) node);
+				break;
+			case 2282:
+				handleRopeSwing(player, (GameObject) node);
+				break;
+			case 2294:
+				handleLogBalance(player, (GameObject) node);
+				break;
+			case 2302:
+				handleLedgeBalance(player, (GameObject) node);
+				break;
+			case 20211:
+				if (player.getLocation().getX() < node.getLocation().getX()) {
+					return true;
+				}
+				AgilityHandler.climb(player, 2, ClimbActionHandler.CLIMB_UP, player.getLocation().transform(-1, 0, 1), 8, "You climb the netting...");
+				break;
+			case 1948:
+				if (player.getLocation().getX() > node.getLocation().getX()) {
+					player.getPacketDispatch().sendMessage("You cannot climb from this side.");
+					break;
+				}
+				final int flag = node.getLocation().equals(new Location(2536, 3553, 0)) ? 4 : node.getLocation().equals(new Location(2539, 3553, 0)) ? 5 : 6;
+				player.getPacketDispatch().sendMessage("You climb the low wall...");
+				AgilityHandler.forceWalk(player, flag, node.getLocation().transform(-1, 0, 0), node.getLocation().transform(1, 0, 0), Animation.create(839), 10, 13.5, null);
+				break;
+			case 455:
+				player.getBarcrawlManager().read();
+				break;
+			case 385:
+				player.getPacketDispatch().sendMessage("The scorpion stings you!");
+				player.getImpactHandler().manualHit(player, 3, HitsplatType.NORMAL);
+				break;
 		}
 		return true;
 	}
@@ -114,7 +114,7 @@
 			player.getDialogueInterpreter().sendDialogue("You need an Agility level of at least 35 to enter.");
 			return;
 		}
-		AgilityHandler.forceWalk(player, 0, player.getLocation(), player.getLocation().transform(0, getPipeTransform(player), 0), Animation.create(746), 25, 22, null, 1);
+		AgilityHandler.forceWalk(player, 0, player.getLocation(), player.getLocation().transform(0, getPipeTransform(player), 0), Animation.create(10580), 15, 22, null, 1);
 		GameWorld.Pulser.submit(new Pulse(2, player) {
 			@Override
 			public boolean pulse() {
@@ -156,9 +156,9 @@
 		final boolean failed = AgilityHandler.hasFailed(player, 1, 0.5);
 		final Location end = failed ? Location.create(2545, 3546, 0) : Location.create(2541, 3546, 0);
 		player.getPacketDispatch().sendMessage("You walk carefully across the slippery log...");
-		AgilityHandler.walk(player, failed ? -1 : 1, Location.create(2551, 3546, 0), end, Animation.create(155), failed ? 0.0 : 13.5, failed ? null : "...You make it safely to the other side.");
+		AgilityHandler.walk(player, failed ? -1 : 1, Location.create(2551, 3546, 0), end, Animation.create(764), failed ? 0.0 : 13.5, failed ? null : "...You make it safely to the other side.");
 		if (failed) {
-			AgilityHandler.walk(player, -1, player.getLocation(), Location.create(2545, 3546, 0), Animation.create(155), 0.0, null);
+			AgilityHandler.walk(player, -1, player.getLocation(), Location.create(2545, 3546, 0), Animation.create(764), 0.0, null);
 			GameWorld.Pulser.submit(getSwimPulse(player));
 			return;
 		}
@@ -192,19 +192,19 @@
 			@Override
 			public boolean pulse() {
 				switch (++counter) {
-				case 6:
-					player.animate(Animation.create(771));
-					player.getPacketDispatch().sendMessages("...You loose your footing and fall into the water.", "Something in the water bites you.");
-					break;
-				case 7:
-					player.graphics(Graphics.create(68));
-					player.getProperties().setTeleportLocation(Location.create(2545, 3545, 0));
-					player.getImpactHandler().manualHit(player, getHitAmount(player), HitsplatType.NORMAL);
-					AgilityHandler.walk(player, -1, Location.create(2545, 3545, 0), Location.create(2545, 3543, 0), Animation.create(752), 0.0, null);
-					break;
-				case 11:
-					player.getProperties().setTeleportLocation(Location.create(2545, 3542, 0));
-					return true;
+					case 6:
+						player.animate(Animation.create(771));
+						player.getPacketDispatch().sendMessages("...You loose your footing and fall into the water.", "Something in the water bites you.");
+						break;
+					case 7:
+						player.graphics(Graphics.create(68));
+						player.getProperties().setTeleportLocation(Location.create(2545, 3545, 0));
+						player.getImpactHandler().manualHit(player, getHitAmount(player), HitsplatType.NORMAL);
+						AgilityHandler.walk(player, -1, Location.create(2545, 3545, 0), Location.create(2545, 3543, 0), Animation.create(752), 0.0, null);
+						break;
+					case 11:
+						player.getProperties().setTeleportLocation(Location.create(2545, 3542, 0));
+						return true;
 				}
 				return false;
 			}
@@ -239,10 +239,10 @@
 	public Location getDestination(Node node, Node n) {
 		if (n instanceof GameObject) {
 			switch (n.getId()) {
-			case 2282:// rope.
-				return Location.create(2551, 3554, 0);
-			case 20210:
-				return node.getLocation().getY() > n.getLocation().getY() ? Location.create(2552, 3561, 0) : Location.create(2552, 3558, 0);
+				case 2282:// rope.
+					return Location.create(2551, 3554, 0);
+				case 20210:
+					return node.getLocation().getY() > n.getLocation().getY() ? Location.create(2552, 3561, 0) : Location.create(2552, 3558, 0);
 			}
 		}
 		return null;
@@ -294,121 +294,121 @@
 		@Override
 		public boolean handle(int interfaceId, int buttonId) {
 			switch (stage) {
-			case 0:
-				options("I want to come through this gate.", "I want some money.");
-				stage++;
-				break;
-			case 1:
-				switch (buttonId) {
-				case 1:
-					player("I want to come throught his gate.");
-					stage = 5;
-					break;
-				case 2:
-					player("I want some money.");
-					stage = 3;
-					break;
-				}
-				break;
-			case 3:
-				npc("Do I look like a bank to you?");
-				stage++;
-				break;
-			case 4:
-				end();
-				break;
-			case 5:
-				if (player.getBarcrawlManager().isFinished()) {
-					npc("You may pass if you like. You are a true", "barbarian now.");
-					stage = 4;
-				} else {
-					npc("Barbarians only. Are you a barbarian? You don't look", "like one.");
-					stage++;
-				}
-				break;
-			case 6:
-				options("Hmm, yep you've got me there.", "Looks can be deceiving, I am in fact a barbarian.");
-				stage++;
-				break;
-			case 7:
-				switch (buttonId) {
-				case 1:
-					player("Hmm, yep you've got me there.");
-					stage = 4;
-					break;
-				case 2:
-					player("Looks can be deceiving, I am in fact a barbarian.");
-					stage++;
-					break;
-				}
-				break;
-			case 8:
-				npc("If you're a barbarian you need to be able to drink like", "one. We barbarians like a good drink.");
-				stage++;
-				break;
-			case 9:
-				npc("I have the perfect challenge for you... the Alfred", "Grimhand Barcrawl! First completed by Alfred", "Grimhand.");
-				stage++;
-				break;
-			case 10:
-				player.getBarcrawlManager().reset();
-				player.getBarcrawlManager().setStarted(true);
-				player.getInventory().add(BarcrawlManager.BARCRAWL_CARD, player);
-				interpreter.sendDialogue("The guard hands you a Barcrawl card.");
-				stage++;
-				break;
-			case 11:
-				npc("Take that card to each of the bards named on it. The", "bartenders will know what it means. We're kinda well", "known.");
-				stage++;
-				break;
-			case 12:
-				npc("They'll give you their strongest drink and sign your", "card. When you've done all that, we'll be happy to let", "you in.");
-				stage++;
-				break;
-			case 13:
-				end();
-				break;
-			case 20:
-				if (!player.getBarcrawlManager().hasCard()) {
-					player("I've lost my barcrawl card...");
-					stage = 23;
-				} else if (player.getBarcrawlManager().isFinished()) {
-					player("I tink I jusht 'bout done dem all... but I losht count...");
-					stage = 24;
-				} else {
-					player("I haven't finished it yet.");
-					stage++;
-				}
-				break;
-			case 21:
-				npc("Well come back when you have, you lightweight.");
-				stage++;
-				break;
-			case 22:
-				end();
-				break;
-			case 23:
-				npc("What are you like? You're gonna have to start all over", "now.");
-				stage = 10;
-				break;
-			case 24:
-				if (!player.getInventory().containsItem(BarcrawlManager.BARCRAWL_CARD)) {
-					end();
-					break;
-				}
-				player.getBarcrawlManager().setStarted(false);
-				player.getBank().remove(BarcrawlManager.BARCRAWL_CARD);
-				player.getInventory().remove(BarcrawlManager.BARCRAWL_CARD);
-				interpreter.sendDialogue("You give the card to the barbarian.");
-				stage++;
-				break;
-			case 25:
-				npc("Yep that seems fine, you can come in now. I never", "learned to read, but you look like you've drunk plenty.");
-				stage = 22;
-				break;
-			case 50:
-				end();
-				break;
+				case 0:
+					options("I want to come through this gate.", "I want some money.");
+					stage++;
+					break;
+				case 1:
+					switch (buttonId) {
+						case 1:
+							player("I want to come throught his gate.");
+							stage = 5;
+							break;
+						case 2:
+							player("I want some money.");
+							stage = 3;
+							break;
+					}
+					break;
+				case 3:
+					npc("Do I look like a bank to you?");
+					stage++;
+					break;
+				case 4:
+					end();
+					break;
+				case 5:
+					if (player.getBarcrawlManager().isFinished()) {
+						npc("You may pass if you like. You are a true", "barbarian now.");
+						stage = 4;
+					} else {
+						npc("Barbarians only. Are you a barbarian? You don't look", "like one.");
+						stage++;
+					}
+					break;
+				case 6:
+					options("Hmm, yep you've got me there.", "Looks can be deceiving, I am in fact a barbarian.");
+					stage++;
+					break;
+				case 7:
+					switch (buttonId) {
+						case 1:
+							player("Hmm, yep you've got me there.");
+							stage = 4;
+							break;
+						case 2:
+							player("Looks can be deceiving, I am in fact a barbarian.");
+							stage++;
+							break;
+					}
+					break;
+				case 8:
+					npc("If you're a barbarian you need to be able to drink like", "one. We barbarians like a good drink.");
+					stage++;
+					break;
+				case 9:
+					npc("I have the perfect challenge for you... the Alfred", "Grimhand Barcrawl! First completed by Alfred", "Grimhand.");
+					stage++;
+					break;
+				case 10:
+					player.getBarcrawlManager().reset();
+					player.getBarcrawlManager().setStarted(true);
+					player.getInventory().add(BarcrawlManager.BARCRAWL_CARD, player);
+					interpreter.sendDialogue("The guard hands you a Barcrawl card.");
+					stage++;
+					break;
+				case 11:
+					npc("Take that card to each of the bards named on it. The", "bartenders will know what it means. We're kinda well", "known.");
+					stage++;
+					break;
+				case 12:
+					npc("They'll give you their strongest drink and sign your", "card. When you've done all that, we'll be happy to let", "you in.");
+					stage++;
+					break;
+				case 13:
+					end();
+					break;
+				case 20:
+					if (!player.getBarcrawlManager().hasCard()) {
+						player("I've lost my barcrawl card...");
+						stage = 23;
+					} else if (player.getBarcrawlManager().isFinished()) {
+						player("I tink I jusht 'bout done dem all... but I losht count...");
+						stage = 24;
+					} else {
+						player("I haven't finished it yet.");
+						stage++;
+					}
+					break;
+				case 21:
+					npc("Well come back when you have, you lightweight.");
+					stage++;
+					break;
+				case 22:
+					end();
+					break;
+				case 23:
+					npc("What are you like? You're gonna have to start all over", "now.");
+					stage = 10;
+					break;
+				case 24:
+					if (!player.getInventory().containsItem(BarcrawlManager.BARCRAWL_CARD)) {
+						end();
+						break;
+					}
+					player.getBarcrawlManager().setStarted(false);
+					player.getBank().remove(BarcrawlManager.BARCRAWL_CARD);
+					player.getInventory().remove(BarcrawlManager.BARCRAWL_CARD);
+					interpreter.sendDialogue("You give the card to the barbarian.");
+					stage++;
+					break;
+				case 25:
+					npc("Yep that seems fine, you can come in now. I never", "learned to read, but you look like you've drunk plenty.");
+					stage = 22;
+					break;
+				case 50:
+					end();
+					break;
 			}
 			return true;
 		}
@@ -419,4 +419,4 @@
 		}
 
 	}
-}
+}
\ No newline at end of file
Index: Server/src/main/java/Server/plugin/skill/agility/GnomeStrongholdCourse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.skill.agility;\r\n\r\nimport core.cache.def.impl.ObjectDefinition;\r\nimport core.game.node.Node;\r\nimport core.game.node.entity.npc.NPC;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.object.GameObject;\r\nimport core.game.system.task.LocationLogoutTask;\r\nimport core.game.system.task.LogoutTask;\r\nimport core.game.world.GameWorld;\r\nimport core.game.world.map.Location;\r\nimport core.game.world.update.flag.context.Animation;\r\nimport core.plugin.InitializablePlugin;\r\n\r\n/**\r\n * Handles the gnome stronghold agility course.\r\n * @author Emperor\r\n */\r\n@InitializablePlugin\r\npublic final class GnomeStrongholdCourse extends AgilityCourse {\r\n\r\n\t/**\r\n\t * The pipes currently in usage.\r\n\t */\r\n\tprivate static final int[] USED_PIPES = new int[2];\r\n\r\n\t/**\r\n\t * The trainer NPCs.\r\n\t */\r\n\tprivate static final NPC[] TRAINERS = new NPC[5];\r\n\r\n\t/**\r\n\t * Constructs a new {@code GnomeStrongholdCourse} {@code Object}.\r\n\t */\r\n\tpublic GnomeStrongholdCourse() {\r\n\t\tthis(null);\r\n\t}\r\n\r\n\t/**\r\n\t * Constructs a new {@code GnomeStrongholdCourse} {@code Object}.\r\n\t * @param player The player.\r\n\t */\r\n\tpublic GnomeStrongholdCourse(Player player) {\r\n\t\tsuper(player, 7, 39.0);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean handle(final Player player, Node node, String option) {\r\n\t\tgetCourse(player); // Sets the extension.\r\n\t\tGameObject object = (GameObject) node;\r\n\t\tswitch (object.getId()) {\r\n\r\n\t\t\t//Log Cross\r\n\t\t\tcase 2295:\r\n\t\t\t\tTRAINERS[0].sendChat(\"Okay get over that log, quick quick!\");\r\n\t\t\t\tplayer.getPacketDispatch().sendMessage(\"You walk carefully across the slippery log...\");\r\n\t\t\t\tAgilityHandler.walk(player, 0, Location.create(2474, 3436, 0), Location.create(2474, 3429, 0), Animation.create(155), 7.5, \"...You make it safely to the other side.\");\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t//Net Climb\r\n\t\t\tcase 2285:\r\n\t\t\t\tTRAINERS[1].sendChat(\"Move it, move it, move it!\");\r\n\t\t\t\tplayer.getPacketDispatch().sendMessage(\"You climb the netting...\");\r\n\t\t\t\tAgilityHandler.climb(player, 1, Animation.create(828), object.getLocation().transform(0, -1, 1), 7.5, null);\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t//branch climb\r\n\t\t\tcase 35970:\r\n\t\t\t\tTRAINERS[2].sendChat(\"That's it - straight up.\");\r\n\t\t\t\tplayer.getPacketDispatch().sendMessage(\"You climb the tree..\");\r\n\t\t\t\tAgilityHandler.climb(player, 2, Animation.create(828), Location.create(2473, 3420, 2), 5.0, \"...To the platform above.\");\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t//tight-rope\r\n\t\t\tcase 2312:\r\n\t\t\t\tTRAINERS[3].sendChat(\"Come on scaredy cat, get across that rope!\");\r\n\t\t\t\tplayer.getPacketDispatch().sendMessage(\"You carefully cross the tightrope.\");\r\n\t\t\t\tAgilityHandler.walk(player, 3, Location.create(2477, 3420, 2), Location.create(2483, 3420, 2), Animation.create(155), 7.5, null);\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t//Other side of tight-rope\r\n\t\t\tcase 4059:\r\n\t\t\t\tplayer.getPacketDispatch().sendMessage(\"You can't do that from here.\");\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t//Branches on the other side of tight-rope\r\n\t\t\tcase 2314:\r\n\t\t\tcase 2315:\r\n\t\t\t\tplayer.getPacketDispatch().sendMessage(\"You climb down the tree..\");\r\n\t\t\t\tAgilityHandler.climb(player, 4, Animation.create(828), Location.create(2487, 3420, 0), 5.0, \"You land on the ground.\");\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t//Second Net Climb\r\n\t\t\tcase 2286:\r\n\t\t\t\tTRAINERS[4].sendChat(\"My Granny can move faster than you.\");\r\n\t\t\t\tplayer.faceLocation(player.getLocation().transform(0, 2, 0));\r\n\t\t\t\tplayer.getPacketDispatch().sendMessage(\"You climb the netting...\");\r\n\t\t\t\tAgilityHandler.climb(player, 5, Animation.create(828), player.getLocation().transform(0, 2, 0), 7.5, null);\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t//Pipe Squeeze\r\n\t\t\tcase 4058:\r\n\t\t\tcase 154:\r\n\t\t\t\tfinal int index = object.getId() == 154 ? 0 : 1; //If the player clicks on the left pipe, set index to 0, otherwise 1\r\n\t\t\t\tfinal int x = 2484 + (index * 3); //change the x coordinates for walking/animations depending on index multiplier\r\n\t\t\t\tif (object.getLocation().getY() == 3435) {\r\n\t\t\t\t\tplayer.getPacketDispatch().sendMessage(\"You can't do that from here.\");\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tif (USED_PIPES[index] > GameWorld.getTicks()) {\r\n\t\t\t\t\tplayer.getPacketDispatch().sendMessage(\"The pipe is being used.\");\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tUSED_PIPES[index] = GameWorld.getTicks() + 10;\r\n\t\t\t\tplayer.lock(12);\r\n\r\n\t\t\t\t//Animations and force walking\r\n\t\t\t\t//X variable is determined by both index and x variables before\r\n\t\t\t\tAgilityHandler.forceWalk(player, -1, Location.create(x, 3430, 0), Location.create(x, 3433, 0), Animation.create(749), 10, 0, null);\r\n\t\t\t\tAgilityHandler.forceWalk(player, -1, Location.create(x, 3433, 0), Location.create(x, 3435, 0), Animation.create(844), 10, 0, null, 5);\r\n\t\t\t\tAgilityHandler.forceWalk(player, 6, Location.create(x, 3435, 0), Location.create(x, 3437, 0), Animation.create(748), 20, 7.5, null, 8);\r\n\t\t\t\tplayer.addExtension(LogoutTask.class, new LocationLogoutTask(12, Location.create(x, 3430, 0)));\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Location getDestination(Node node, Node n) {\r\n\t\tGameObject object = (GameObject) n;\r\n\t\tswitch (object.getId()) {\r\n\t\tcase 2295:\r\n\t\t\treturn Location.create(2474, 3436, 0);\r\n\t\tcase 2286:\r\n\t\t\tint x = node.getLocation().getX();\r\n\t\t\tif (x < n.getLocation().getX()) {\r\n\t\t\t\tx = n.getLocation().getX();\r\n\t\t\t} else if (x > n.getLocation().getX() + 1) {\r\n\t\t\t\tx = n.getLocation().getX() + 1;\r\n\t\t\t}\r\n\t\t\treturn Location.create(x, n.getLocation().getY() - 1, 0);\r\n\t\tcase 4058:\r\n\t\tcase 154:\r\n\t\t\tif (n.getLocation().getY() == 3431) {\r\n\t\t\t\treturn n.getLocation().transform(0, -1, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void configure() {\r\n\t\tTRAINERS[0] = NPC.create(162, Location.create(2473, 3438, 0));\r\n\t\tTRAINERS[1] = NPC.create(162, Location.create(2478, 3426, 0));\r\n\t\tTRAINERS[2] = NPC.create(162, Location.create(2474, 3422, 1));\r\n\t\tTRAINERS[3] = NPC.create(162, Location.create(2472, 3419, 2));\r\n\t\tTRAINERS[4] = NPC.create(162, Location.create(2489, 3425, 0));\r\n\t\tfor (NPC npc : TRAINERS) {\r\n\t\t\tnpc.init();\r\n\t\t\tnpc.setWalkRadius(3);\r\n\t\t}\r\n\t\tObjectDefinition.forId(2295).getConfigurations().put(\"option:walk-across\", this);\r\n\t\tObjectDefinition.forId(2285).getConfigurations().put(\"option:climb-over\", this);\r\n\t\tObjectDefinition.forId(35970).getConfigurations().put(\"option:climb\", this);\r\n\t\tObjectDefinition.forId(2312).getConfigurations().put(\"option:walk-on\", this);\r\n\t\tObjectDefinition.forId(4059).getConfigurations().put(\"option:walk-on\", this);\r\n\t\tObjectDefinition.forId(2314).getConfigurations().put(\"option:climb-down\", this);\r\n\t\tObjectDefinition.forId(2315).getConfigurations().put(\"option:climb-down\", this);\r\n\t\tObjectDefinition.forId(2286).getConfigurations().put(\"option:climb-over\", this);\r\n\t\tObjectDefinition.forId(4058).getConfigurations().put(\"option:squeeze-through\", this);\r\n\t\tObjectDefinition.forId(154).getConfigurations().put(\"option:squeeze-through\", this);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic AgilityCourse createInstance(Player player) {\r\n\t\treturn new GnomeStrongholdCourse(player);\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/skill/agility/GnomeStrongholdCourse.java	(revision 25177c7389a44663bd7623221b75d446b8940c03)
+++ Server/src/main/java/Server/plugin/skill/agility/GnomeStrongholdCourse.java	(date 1594771872453)
@@ -14,7 +14,7 @@
 
 /**
  * Handles the gnome stronghold agility course.
- * @author Emperor
+ * @author Woah
  */
 @InitializablePlugin
 public final class GnomeStrongholdCourse extends AgilityCourse {
@@ -116,9 +116,9 @@
 
 				//Animations and force walking
 				//X variable is determined by both index and x variables before
-				AgilityHandler.forceWalk(player, -1, Location.create(x, 3430, 0), Location.create(x, 3433, 0), Animation.create(749), 10, 0, null);
+				AgilityHandler.forceWalk(player, -1, Location.create(x, 3430, 0), Location.create(x, 3433, 0), Animation.create(10580), 10, 0, null);
 				AgilityHandler.forceWalk(player, -1, Location.create(x, 3433, 0), Location.create(x, 3435, 0), Animation.create(844), 10, 0, null, 5);
-				AgilityHandler.forceWalk(player, 6, Location.create(x, 3435, 0), Location.create(x, 3437, 0), Animation.create(748), 20, 7.5, null, 8);
+				AgilityHandler.forceWalk(player, 6, Location.create(x, 3435, 0), Location.create(x, 3437, 0), Animation.create(10579), 20, 7.5, null, 8);
 				player.addExtension(LogoutTask.class, new LocationLogoutTask(12, Location.create(x, 3430, 0)));
 				return true;
 		}
@@ -129,21 +129,21 @@
 	public Location getDestination(Node node, Node n) {
 		GameObject object = (GameObject) n;
 		switch (object.getId()) {
-		case 2295:
-			return Location.create(2474, 3436, 0);
-		case 2286:
-			int x = node.getLocation().getX();
-			if (x < n.getLocation().getX()) {
-				x = n.getLocation().getX();
-			} else if (x > n.getLocation().getX() + 1) {
-				x = n.getLocation().getX() + 1;
-			}
-			return Location.create(x, n.getLocation().getY() - 1, 0);
-		case 4058:
-		case 154:
-			if (n.getLocation().getY() == 3431) {
-				return n.getLocation().transform(0, -1, 0);
-			}
+			case 2295:
+				return Location.create(2474, 3436, 0);
+			case 2286:
+				int x = node.getLocation().getX();
+				if (x < n.getLocation().getX()) {
+					x = n.getLocation().getX();
+				} else if (x > n.getLocation().getX() + 1) {
+					x = n.getLocation().getX() + 1;
+				}
+				return Location.create(x, n.getLocation().getY() - 1, 0);
+			case 4058:
+			case 154:
+				if (n.getLocation().getY() == 3431) {
+					return n.getLocation().transform(0, -1, 0);
+				}
 		}
 		return null;
 	}
@@ -176,4 +176,4 @@
 		return new GnomeStrongholdCourse(player);
 	}
 
-}
+}
\ No newline at end of file
Index: Server/src/main/java/Server/core/game/node/entity/player/link/TeleportManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.node.entity.player.link;\r\n\r\nimport core.ServerConstants;\r\nimport plugin.ame.AntiMacroHandler;\r\nimport plugin.tutorial.TutorialSession;\r\nimport plugin.skill.Skills;\r\nimport core.game.node.entity.Entity;\r\nimport core.game.node.entity.impl.Animator.Priority;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.link.quest.Quest;\r\nimport core.game.system.task.Pulse;\r\nimport core.game.world.GameWorld;\r\nimport core.game.world.map.Location;\r\nimport core.game.world.update.flag.context.Animation;\r\nimport core.game.world.update.flag.context.Graphics;\r\n\r\n/**\r\n * Handles the entity teleport.\r\n * @author SonicForce41\r\n */\r\npublic class TeleportManager {\r\n\r\n\t/**\r\n\t * The wildy teleport type.\r\n\t */\r\n\tpublic static final int WILDY_TELEPORT = 1 << 16 | 8;\r\n\t\r\n\t/**\r\n\t * The animations used in the home teleport.\r\n\t */\r\n\tprivate final static int[] HOME_ANIMATIONS = {1722, 1723, 1724, 1725, 2798, 2799, 2800, 3195, 4643, 4645, 4646, 4847, 4848, 4849, 4850, 4851, 4852, 65535};\r\n\t\r\n\t/**\r\n\t * The graphics used in the home teleport.\r\n\t */\r\n\tprivate final static int[] HOME_GRAPHICS = {775, 800, 801, 802, 803, 804, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 65535};\r\n\r\n\t/**\r\n\t * The entity being handled.\r\n\t */\r\n\tprivate final Entity entity;\r\n\r\n\t/**\r\n\t * The last teleport of this <b>Entity</b>\r\n\t */\r\n\tprivate Pulse lastTeleport;\r\n\r\n\t/**\r\n\t * The current teleport of this <b>Entity</b>\r\n\t */\r\n\tprivate Pulse currentTeleport;\r\n\r\n\t/**\r\n\t * The current teleport type.\r\n\t */\r\n\tprivate int teleportType;\r\n\r\n\t/**\r\n\t * Constructs a new {@code Teleporter.java} {@Code Object}.\r\n\t * @param entity the Entity\r\n\t */\r\n\tpublic TeleportManager(Entity entity) {\r\n\t\tthis.entity = entity;\r\n\t\tlastTeleport = TeleportType.HOME.getPulse(entity, ServerConstants.HOME_LOCATION);\r\n\t}\r\n\r\n\t/**\r\n\t * Sends the teleport.\r\n\t * @param location the Location.\r\n\t * @return {@code True} if the player successfully started teleporting.\r\n\t */\r\n\tpublic boolean send(Location location) {\r\n\t\treturn send(location, entity instanceof Player ? getType((Player) entity) : TeleportType.NORMAL, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Sends the teleport.\r\n\t * @param location the Location.\r\n\t * @param type the NodeType.\r\n\t * @return {@code True} if the player successfully started teleporting.\r\n\t */\r\n\tpublic boolean send(Location location, TeleportType type) {\r\n\t\treturn send(location, type, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Sends the teleport.\r\n\t * @param location the Location.\r\n\t * @param type the NodeType.\r\n\t * @param teleportType The teleporting type. (0=spell, 1=item, 2=object,\r\n\t * 3=npc -1= force)\r\n\t * @return {@code True} if the player successfully started teleporting.\r\n\t */\r\n\tpublic boolean send(Location location, TeleportType type, int teleportType) {\r\n\t\tif (teleportType != -1 && entity.isTeleBlocked()) {\r\n\t\t\tif (entity.isPlayer()) {\r\n\t\t\t\tentity.asPlayer().sendMessage(\"A magical force has stopped you from teleporting.\");\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((teleportType != WILDY_TELEPORT && type != TeleportType.OBELISK) && !entity.getZoneMonitor().teleport(teleportType, null)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (teleportType != -1) {\r\n\t\t\tif (entity instanceof Player) {\r\n\t\t\t\tPlayer p = (Player) entity;\r\n\t\t\t\tp.getDialogueInterpreter().close();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.teleportType = teleportType;\r\n\t\tentity.getWalkingQueue().reset();\r\n\t\tlastTeleport = currentTeleport;\r\n\t\tcurrentTeleport = type.getPulse(entity, location);\r\n\t\tentity.getPulseManager().clear();\r\n\t\tif (type == TeleportType.HOME) {\r\n\t\t\tentity.getPulseManager().run(type.getPulse(entity, location));\r\n\t\t} else {\r\n\t\t\tentity.lock(12);\r\n\t\t\tentity.getImpactHandler().setDisabledTicks(teleportType == -1 ? 5 : 12);\r\n\t\t\tGameWorld.Pulser.submit(currentTeleport);\r\n\t\t}\r\n\t\tif (entity instanceof Player) {\r\n\t\t\t((Player) entity).getInterfaceManager().close();\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Fires a random event.\r\n\t * @param entity The entity teleporting.\r\n\t * @param location The destination lcoation.\r\n\t */\r\n\tpublic static void fireRandom(Entity entity, Location location) {\r\n\t\tif (entity instanceof Player && entity.getTeleporter().getTeleportType() == 0) {\r\n\t\t\tPlayer p = (Player) entity;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get the home teleport audio based on tick count.\r\n\t * @param count\r\n\t */\r\n\tprivate static int getAudio(int count){\r\n\t\tswitch(count){\r\n\t\tcase 0:\r\n\t\t\treturn 193;\r\n\t\tcase 4:\r\n\t\t\treturn 194;\r\n\t\tcase 11:\r\n\t\t\treturn 195;\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the entity.\r\n\t * @return the Entity\r\n\t */\r\n\tpublic final Entity getEntity() {\r\n\t\treturn entity;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the last teleport pulse.\r\n\t * @return the Pulse\r\n\t */\r\n\tpublic final Pulse getLastTeleport() {\r\n\t\treturn lastTeleport;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the current teleport pulse.\r\n\t * @return the Pulse\r\n\t */\r\n\tpublic final Pulse getCurrentTeleport() {\r\n\t\treturn currentTeleport;\r\n\t}\r\n\r\n\t/**\r\n\t * Represents a NodeType for Teleporter\r\n\t * @author SonicForce41\r\n\t */\r\n\tpublic enum TeleportType {\r\n\r\n\t\t/**\r\n\t\t * The value types\r\n\t\t */\r\n\t\tNORMAL(new TeleportSettings(8939, 8941, 1576, 1577)) {\r\n\t\t\t@Override\r\n\t\t\tpublic Pulse getPulse(final Entity entity, final Location location) {\r\n\t\t\t\treturn new Pulse(1) {\r\n\t\t\t\t\tint delay = 0;\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic boolean pulse() {\r\n\t\t\t\t\t\tif (delay == 0) {\r\n\t\t\t\t\t\t\tif (entity instanceof Player) {\r\n\t\t\t\t\t\t\t\tentity.asPlayer().getAudioManager().send(200);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(getSettings().getStartEmote()));\r\n\t\t\t\t\t\t\tentity.graphics(new Graphics(getSettings().getStartGfx()));\r\n\t\t\t\t\t\t} else if (delay == 3) {\r\n\t\t\t\t\t\t\tentity.getProperties().setTeleportLocation(Location.create(location));\r\n\t\t\t\t\t\t\tfireRandom(entity, location);\r\n\t\t\t\t\t\t} else if (delay == 4) {\r\n\t\t\t\t\t\t\tif (entity instanceof Player) {\r\n\t\t\t\t\t\t\t\tentity.asPlayer().getAudioManager().send(201);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(getSettings().getEndEmote(), Priority.HIGH));\r\n\t\t\t\t\t\t\tentity.graphics(new Graphics(getSettings().getEndGfx()));\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelay++;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void stop() {\r\n\t\t\t\t\t\tsuper.stop();\r\n\t\t\t\t\t\tentity.unlock();\r\n\t\t\t\t\t\tentity.lock(4);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\tANCIENT(new TeleportSettings(1979, -1, 392, -1)) {\r\n\t\t\t@Override\r\n\t\t\tpublic Pulse getPulse(final Entity entity, final Location location) {\r\n\t\t\t\treturn new Pulse(1) {\r\n\t\t\t\t\tint delay = 0;\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic boolean pulse() {\r\n\t\t\t\t\t\tif (delay == 0) {\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(getSettings().getStartEmote()));\r\n\t\t\t\t\t\t\tentity.graphics(new Graphics(getSettings().getStartGfx()));\r\n\t\t\t\t\t\t} else if (delay == 4) {\r\n\t\t\t\t\t\t\tentity.getProperties().setTeleportLocation(Location.create(location));\r\n\t\t\t\t\t\t\tfireRandom(entity, location);\r\n\t\t\t\t\t\t} else if (delay == 5) {\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(getSettings().getEndEmote(), Priority.HIGH));\r\n\t\t\t\t\t\t\tentity.graphics(new Graphics(getSettings().getEndGfx()));\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelay++;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void stop() {\r\n\t\t\t\t\t\tsuper.stop();\r\n\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(-1));\r\n\t\t\t\t\t\tentity.graphics(new Graphics(-1));\r\n\t\t\t\t\t\tentity.unlock();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\tLUNAR(new TeleportSettings(1816, -1, 747, -1)) {\r\n\t\t\t@Override\r\n\t\t\tpublic Pulse getPulse(final Entity entity, final Location location) {\r\n\t\t\t\treturn new Pulse(1) {\r\n\t\t\t\t\tint delay = 0;\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic boolean pulse() {\r\n\t\t\t\t\t\tif (delay == 0) {\r\n\t\t\t\t\t\t\tentity.graphics(new Graphics(getSettings().getStartGfx(), 120));\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(getSettings().getStartEmote()));\r\n\t\t\t\t\t\t} else if (delay == 3) {\r\n\t\t\t\t\t\t\tentity.getProperties().setTeleportLocation(Location.create(location));\r\n\t\t\t\t\t\t\tfireRandom(entity, location);\r\n\t\t\t\t\t\t} else if (delay == 4) {\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(getSettings().getEndEmote(), Priority.HIGH));\r\n\t\t\t\t\t\t\tentity.graphics(new Graphics(getSettings().getEndGfx()));\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelay++;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void stop() {\r\n\t\t\t\t\t\tsuper.stop();\r\n\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(-1));\r\n\t\t\t\t\t\tentity.graphics(new Graphics(-1));\r\n\t\t\t\t\t\tentity.unlock();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\tTELETABS(new TeleportSettings(4731, -1, 678, -1)) {\r\n\t\t\t@Override\r\n\t\t\tpublic Pulse getPulse(final Entity entity, final Location location) {\r\n\t\t\t\treturn new Pulse(1) {\r\n\t\t\t\t\tint delay = 0;\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic boolean pulse() {\r\n\t\t\t\t\t\tif (delay == 0) {\r\n\t\t\t\t\t\t\tif (entity instanceof Player) {\r\n\t\t\t\t\t\t\t\tentity.asPlayer().getAudioManager().send(979);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(4069));\r\n\t\t\t\t\t\t} else if (delay == 2) {\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(getSettings().getStartEmote(), Priority.HIGH));\r\n\t\t\t\t\t\t\tentity.graphics(new Graphics(getSettings().getStartGfx()));\r\n\t\t\t\t\t\t} else if (delay == 3) {\r\n\t\t\t\t\t\t\tentity.getProperties().setTeleportLocation(Location.create(location));\r\n\t\t\t\t\t\t} else if (delay == 4) {\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(getSettings().getEndEmote()));\r\n\t\t\t\t\t\t\tentity.graphics(new Graphics(getSettings().getEndGfx()));\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelay++;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void stop() {\r\n\t\t\t\t\t\tsuper.stop();\r\n\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(-1));\r\n\t\t\t\t\t\tentity.graphics(new Graphics(-1));\r\n\t\t\t\t\t\tentity.unlock();\r\n\t\t\t\t\t\tentity.lock(2);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\tHOME(new TeleportSettings(4847, 4857, 800, 804)) {\r\n\t\t\t@Override\r\n\t\t\tpublic Pulse getPulse(final Entity entity, final Location location) {\r\n\t\t\t\treturn new Pulse(1) {\r\n\t\t\t\t\tint count;\r\n\t\t\t\t\tPlayer player;\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic boolean pulse() {\r\n\t\t\t\t\t\tswitch (count) {\r\n\t\t\t\t\t\tcase 18:\r\n\t\t\t\t\t\t\tplayer.getProperties().setTeleportLocation(location);\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tentity.asPlayer().getAudioManager().send(getAudio(count));\r\n\t\t\t\t\t\t\t\tplayer.getPacketDispatch().sendGraphic(HOME_GRAPHICS[count]);\r\n\t\t\t\t\t\t\t\tplayer.getPacketDispatch().sendAnimation(HOME_ANIMATIONS[count]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t    @Override\r\n\t\t\t\t\t    public void start() {\r\n\t\t\t\t\t\tplayer = ((Player) entity);\r\n\t\t\t\t\t\tif (TutorialSession.getExtension(player).getStage() < TutorialSession.MAX_STAGE) {\r\n\t\t\t\t\t\t    stop();\r\n\t\t\t\t\t\t    return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/*if (player.getSavedData().getGlobalData().getHomeTeleportDelay() > System.currentTimeMillis() && !player.isDonator()) {\r\n\t\t\t\t\t\t    long milliseconds = player.getSavedData().getGlobalData().getHomeTeleportDelay() - System.currentTimeMillis();\r\n\t\t\t\t\t\t    int minutes = (int) Math.round(milliseconds / 120000);\r\n\t\t\t\t\t\t    if (minutes > 15) {\r\n\t\t\t\t\t\t    \tplayer.getSavedData().getGlobalData().setHomeTeleportDelay(System.currentTimeMillis() + 1200000);\r\n\t\t\t\t\t\t    \tmilliseconds = player.getSavedData().getGlobalData().getHomeTeleportDelay() - System.currentTimeMillis();\r\n\t\t\t\t\t\t    \tminutes = (int) Math.round(milliseconds / 120000);\r\n\t\t\t\t\t\t    }\r\n\t\t\t\t\t\t    if (minutes != 0) {\r\n\t\t\t\t\t\t    \tplayer.getPacketDispatch().sendMessage(\"You need to wait another \" + minutes + \" \" + (minutes == 1 ? \"minute\" : \"minutes\") + \" to cast this spell.\");\r\n\t\t\t\t\t\t    \tstop();\r\n\t\t\t\t\t\t    \treturn;\r\n\t\t\t\t\t\t    }\r\n\t\t\t\t\t\t}*/\r\n\t\t\t\t\t\tsuper.start();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void stop() {\r\n\t\t\t\t\t\tsuper.stop();\r\n\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(-1));\r\n\t\t\t\t\t\tplayer.graphics(new Graphics(-1));\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\tOBELISK(new TeleportSettings(8939, 8941, -1, -1)) {\r\n\t\t\t@Override\r\n\t\t\tpublic Pulse getPulse(final Entity entity, final Location location) {\r\n\t\t\t\treturn new Pulse(1) {\r\n\t\t\t\t\tint delay = 0;\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic boolean pulse() {\r\n\t\t\t\t\t\tif (delay == 0) {\r\n\t\t\t\t\t\t\tentity.lock();\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(1816));\r\n\t\t\t\t\t\t} else if (delay == 3) {\r\n\t\t\t\t\t\t\tentity.getProperties().setTeleportLocation(Location.create(location));\r\n\t\t\t\t\t\t} else if (delay == 4) {\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(Animation.RESET);\r\n\t\t\t\t\t\t\tentity.unlock();\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelay++;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\tTELE_OTHER(new TeleportSettings(1816, -1, 342, -1)) {\r\n\t\t\t@Override\r\n\t\t\tpublic Pulse getPulse(final Entity entity, final Location location) {\r\n\t\t\t\treturn new Pulse(1) {\r\n\t\t\t\t\tint delay = 0;\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic boolean pulse() {\r\n\t\t\t\t\t\tif (delay == 0) {\r\n\t\t\t\t\t\t\tif (entity instanceof Player) {\r\n\t\t\t\t\t\t\t\tentity.asPlayer().getAudioManager().send(199);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(getSettings().getStartEmote()));\r\n\t\t\t\t\t\t\tentity.graphics(new Graphics(getSettings().getStartGfx()));\r\n\t\t\t\t\t\t} else if (delay == 3) {\r\n\t\t\t\t\t\t\tentity.getProperties().setTeleportLocation(Location.create(location));\r\n\t\t\t\t\t\t} else if (delay == 4) {\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(-1));\r\n\t\t\t\t\t\t\tentity.unlock();\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelay++;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\tFAIRY_RING(new TeleportSettings(-1, -1, -1, -1)) {\r\n\t\t\t@Override\r\n\t\t\tpublic Pulse getPulse(final Entity entity, final Location location) {\r\n\t\t\t\tentity.graphics(Graphics.create(569));\r\n\t\t\t\treturn new Pulse(1, entity) {\r\n\t\t\t\t\tint delay;\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic boolean pulse() {\r\n\t\t\t\t\t\tswitch (++delay) {\r\n\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\tentity.animate(Animation.create(3265));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\tQuest quest = null;\r\n\t\t\t\t\t\t\tif (entity instanceof Player) {\r\n\t\t\t\t\t\t\t\tquest = ((Player) entity).getQuestRepository().getQuest(\"Lost City\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (quest != null) {\r\n\t\t\t\t\t\t\t\tif (quest.getStage(entity.asPlayer()) == 21) {\r\n\t\t\t\t\t\t\t\t\tquest.finish(entity.asPlayer());\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tentity.animate(Animation.create(3266));\r\n\t\t\t\t\t\t\tentity.getProperties().setTeleportLocation(location);\r\n\t\t\t\t\t\t\tentity.unlock();\r\n\t\t\t\t\t\t\tentity.lock(2);\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\tPURO_PURO(new TeleportSettings(6601, 1118, -1, -1)) {\r\n\t\t\t@Override\r\n\t\t\tpublic Pulse getPulse(final Entity entity, final Location location) {\r\n\t\t\t\treturn new Pulse(1) {\r\n\t\t\t\t\tint delay = 0;\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic boolean pulse() {\r\n\t\t\t\t\t\tif (delay == 0) {\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(getSettings().getStartEmote()));\r\n\t\t\t\t\t\t\tentity.graphics(new Graphics(1118));\r\n\t\t\t\t\t\t} else if (delay == 9) {\r\n\t\t\t\t\t\t\tentity.getProperties().setTeleportLocation(Location.create(location));\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(-1));\r\n\t\t\t\t\t\t\tentity.unlock();\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelay++;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\tECTOPHIAL(new TeleportSettings(8939, 8941, 1587, 1588)) {\r\n\t\t\t@Override\r\n\t\t\tpublic Pulse getPulse(final Entity entity, final Location location) {\r\n\t\t\t\treturn new Pulse(1) {\r\n\t\t\t\t\tint delay = 0;\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic boolean pulse() {\r\n\t\t\t\t\t\tif (delay == 0) {\r\n\t\t\t\t\t\t\tif (entity instanceof Player) {\r\n\t\t\t\t\t\t\t\tentity.asPlayer().getAudioManager().send(200);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(getSettings().getStartEmote()));\r\n\t\t\t\t\t\t\tentity.graphics(new Graphics(getSettings().getStartGfx()));\r\n\t\t\t\t\t\t} else if (delay == 3) {\r\n\t\t\t\t\t\t\tentity.getProperties().setTeleportLocation(Location.create(location));\r\n\t\t\t\t\t\t\tfireRandom(entity, location);\r\n\t\t\t\t\t\t} else if (delay == 4) {\r\n\t\t\t\t\t\t\tif (entity instanceof Player) {\r\n\t\t\t\t\t\t\t\tentity.asPlayer().getAudioManager().send(201);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(getSettings().getEndEmote(), Priority.HIGH));\r\n\t\t\t\t\t\t\tentity.graphics(new Graphics(getSettings().getEndGfx()));\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelay++;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void stop() {\r\n\t\t\t\t\t\tsuper.stop();\r\n\t\t\t\t\t\tentity.unlock();\r\n\t\t\t\t\t\tentity.lock(4);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\tCHRISTMAS(new TeleportSettings(7534, -1, 1292, -1)) {\r\n\t\t\t@Override\r\n\t\t\tpublic Pulse getPulse(final Entity entity, final Location location) {\r\n\t\t\t\treturn new Pulse(1) {\r\n\t\t\t\t\tint delay = 0;\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic boolean pulse() {\r\n\t\t\t\t\t\tif (delay == 0) {\r\n\t\t\t\t\t\t\tif (entity instanceof Player) {\r\n\t\t\t\t\t\t\t\tentity.asPlayer().getAudioManager().send(200);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(getSettings().getStartEmote()));\r\n\t\t\t\t\t\t\tentity.graphics(new Graphics(getSettings().getStartGfx()));\r\n\t\t\t\t\t\t} else if (delay == 3) {\r\n\t\t\t\t\t\t\tentity.getProperties().setTeleportLocation(Location.create(location));\r\n\t\t\t\t\t\t\tfireRandom(entity, location);\r\n\t\t\t\t\t\t} else if (delay == 4) {\r\n\t\t\t\t\t\t\tif (entity instanceof Player) {\r\n\t\t\t\t\t\t\t\tentity.asPlayer().getAudioManager().send(201);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(getSettings().getEndEmote(), Priority.HIGH));\r\n\t\t\t\t\t\t\tentity.graphics(new Graphics(getSettings().getEndGfx()));\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelay++;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void stop() {\r\n\t\t\t\t\t\tsuper.stop();\r\n\t\t\t\t\t\tentity.unlock();\r\n\t\t\t\t\t\tentity.lock(4);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\tCABBAGE(new TeleportSettings(804, 803, 1731, 1732)) {\r\n\t\t\t@Override\r\n\t\t\tpublic Pulse getPulse(final Entity entity, final Location location) {\r\n\t\t\t\treturn new Pulse(1) {\r\n\t\t\t\t\tint delay = 0;\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic boolean pulse() {\r\n\t\t\t\t\t\tif (delay == 0) {\r\n\t\t\t\t\t\t\tif (entity instanceof Player) {\r\n\t\t\t\t\t\t\t\tentity.asPlayer().getAudioManager().send(200);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(getSettings().getStartEmote()));\r\n\t\t\t\t\t\t\tentity.graphics(new Graphics(getSettings().getStartGfx()));\r\n\t\t\t\t\t\t} else if (delay == 3) {\r\n\t\t\t\t\t\t\tentity.getProperties().setTeleportLocation(Location.create(location));\r\n\t\t\t\t\t\t\tfireRandom(entity, location);\r\n\t\t\t\t\t\t} else if (delay == 4) {\r\n\t\t\t\t\t\t\tif (entity instanceof Player) {\r\n\t\t\t\t\t\t\t\tentity.asPlayer().getAudioManager().send(201);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(getSettings().getEndEmote(), Priority.HIGH));\r\n\t\t\t\t\t\t\tentity.graphics(new Graphics(getSettings().getEndGfx()));\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelay++;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void stop() {\r\n\t\t\t\t\t\tsuper.stop();\r\n\t\t\t\t\t\tentity.unlock();\r\n\t\t\t\t\t\tentity.lock(4);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\tMINIGAME(new TeleportSettings(6601, 1118, -1, -1)) {\r\n\t\t\t@Override\r\n\t\t\tpublic Pulse getPulse(final Entity entity, final Location location) {\r\n\t\t\t\treturn new Pulse(1) {\r\n\t\t\t\t\tint delay = 0;\r\n\t\t\t\t\tPlayer player;\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic boolean pulse() {\r\n\t\t\t\t\t\tif (delay == 0) {\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(getSettings().getStartEmote()));\r\n\t\t\t\t\t\t\tentity.graphics(new Graphics(1118));\r\n\t\t\t\t\t\t} else if (delay == 9) {\r\n\t\t\t\t\t\t\tentity.getProperties().setTeleportLocation(Location.create(location));\r\n\t\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(-1));\r\n\t\t\t\t\t\t\tentity.unlock();\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelay++;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void start() {\r\n\t\t\t\t\t\tplayer = ((Player) entity);\r\n\t\t\t\t\t\tif (TutorialSession.getExtension(player).getStage() < TutorialSession.MAX_STAGE) {\r\n\t\t\t\t\t\t\tstop();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (player.getSavedData().getGlobalData().getMinigameTeleportDelay() > System.currentTimeMillis()) {\r\n\t\t\t\t\t\t\tlong milliseconds = player.getSavedData().getGlobalData().getMinigameTeleportDelay() - System.currentTimeMillis();\r\n\t\t\t\t\t\t\tint minutes = (int) Math.round(milliseconds / 60000);\r\n\t\t\t\t\t\t\tif (minutes > 30) {\r\n\t\t\t\t\t\t\t\tplayer.getSavedData().getGlobalData().setMinigameTeleportDelay(System.currentTimeMillis() + 600000);\r\n\t\t\t\t\t\t\t\tmilliseconds = player.getSavedData().getGlobalData().getMinigameTeleportDelay() - System.currentTimeMillis();\r\n\t\t\t\t\t\t\t\tminutes = (int) Math.round(milliseconds / 60000);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (minutes != 0) {\r\n\t\t\t\t\t\t\t\tplayer.getPacketDispatch().sendMessage(\"You need to wait another \" + minutes + \" \" + (minutes == 1 ? \"minute\" : \"minutes\") + \" to use the finder again.\");\r\n\t\t\t\t\t\t\t\tstop();\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsuper.start();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void stop() {\r\n\t\t\t\t\t\tsuper.stop();\r\n\t\t\t\t\t\tentity.getAnimator().forceAnimation(new Animation(-1));\r\n\t\t\t\t\t\tplayer.graphics(new Graphics(-1));\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * The NodeSettings\r\n\t\t */\r\n\t\tprivate TeleportSettings settings;\r\n\r\n\t\t/**\r\n\t\t * @param entity\r\n\t\t * @param location\r\n\t\t * @return the Pulse\r\n\t\t */\r\n\t\tpublic abstract Pulse getPulse(final Entity entity, final Location location);\r\n\r\n\t\t/**\r\n\t\t * Constructs a new {@code Teleporter.java} {@Code Object}.\r\n\t\t * @param settings the NodeSettings\r\n\t\t */\r\n\t\tTeleportType(TeleportSettings settings) {\r\n\t\t\tthis.settings = settings;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Gets the NodeSettings\r\n\t\t * @return the NodeSettings\r\n\t\t */\r\n\t\tpublic final TeleportSettings getSettings() {\r\n\t\t\treturn settings;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Represents teleport node settings\r\n\t * @author SonicForce41\r\n\t */\r\n\tstatic class TeleportSettings {\r\n\r\n\t\t/**\r\n\t\t * The start animation.\r\n\t\t */\r\n\t\tprivate int startAnim;\r\n\r\n\t\t/**\r\n\t\t * The end animation.\r\n\t\t */\r\n\t\tprivate int endAnim;\r\n\r\n\t\t/**\r\n\t\t * The start graphics.\r\n\t\t */\r\n\t\tprivate int startGFX;\r\n\r\n\t\t/**\r\n\t\t * The end gfx.\r\n\t\t */\r\n\t\tprivate int endGFX;\r\n\r\n\t\t/**\r\n\t\t * Constructs a new {@code Teleporter.java} {@code Object}.\r\n\t\t * @param startAnim the start animation.\r\n\t\t * @param endAnim the end animation.\r\n\t\t * @param startGfx the start graphics.\r\n\t\t * @param endGfx the end graphiics.\r\n\t\t * @param type the end type.\r\n\t\t */\r\n\t\tpublic TeleportSettings(int startAnim, int endAnim, int startGfx, int endGfx) {\r\n\t\t\tthis.startAnim = startAnim;\r\n\t\t\tthis.endAnim = endAnim;\r\n\t\t\tthis.startGFX = startGfx;\r\n\t\t\tthis.endGFX = endGfx;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @return the anim.\r\n\t\t */\r\n\t\tpublic final int getStartEmote() {\r\n\t\t\treturn startAnim;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @return the anim.\r\n\t\t */\r\n\t\tpublic final int getEndEmote() {\r\n\t\t\treturn endAnim;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @return the start graphics.\r\n\t\t */\r\n\t\tpublic final int getStartGfx() {\r\n\t\t\treturn startGFX;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @return the end gfx.\r\n\t\t */\r\n\t\tpublic final int getEndGfx() {\r\n\t\t\treturn endGFX;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the teleporting type for the player depending on his/her current\r\n\t * spellbook.\r\n\t * @param player The player.\r\n\t * @return The teleport type.\r\n\t */\r\n\tpublic static TeleportType getType(Player player) {\r\n\t\tswitch (player.getSpellBookManager().getSpellBook()) {\r\n\t\tcase 193:\r\n\t\t\treturn TeleportType.ANCIENT;\r\n\t\tcase 430:\r\n\t\t\treturn TeleportType.LUNAR;\r\n\t\t}\r\n\t\treturn TeleportType.NORMAL;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the teleportType.\r\n\t * @return The teleportType.\r\n\t */\r\n\tpublic int getTeleportType() {\r\n\t\treturn teleportType;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the teleportType.\r\n\t * @param teleportType The teleportType to set.\r\n\t */\r\n\tpublic void setTeleportType(int teleportType) {\r\n\t\tthis.teleportType = teleportType;\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/player/link/TeleportManager.java	(revision 25177c7389a44663bd7623221b75d446b8940c03)
+++ Server/src/main/java/Server/core/game/node/entity/player/link/TeleportManager.java	(date 1594771856218)
@@ -17,6 +17,7 @@
 /**
  * Handles the entity teleport.
  * @author SonicForce41
+ * @author Woah
  */
 public class TeleportManager {
 
@@ -24,12 +25,12 @@
 	 * The wildy teleport type.
 	 */
 	public static final int WILDY_TELEPORT = 1 << 16 | 8;
-	
+
 	/**
 	 * The animations used in the home teleport.
 	 */
 	private final static int[] HOME_ANIMATIONS = {1722, 1723, 1724, 1725, 2798, 2799, 2800, 3195, 4643, 4645, 4646, 4847, 4848, 4849, 4850, 4851, 4852, 65535};
-	
+
 	/**
 	 * The graphics used in the home teleport.
 	 */
@@ -135,19 +136,19 @@
 			Player p = (Player) entity;
 		}
 	}
-	
+
 	/**
 	 * Get the home teleport audio based on tick count.
 	 * @param count
 	 */
 	private static int getAudio(int count){
 		switch(count){
-		case 0:
-			return 193;
-		case 4:
-			return 194;
-		case 11:
-			return 195;
+			case 0:
+				return 193;
+			case 4:
+				return 194;
+			case 11:
+				return 195;
 		}
 		return -1;
 	}
@@ -337,9 +338,9 @@
 					@Override
 					public boolean pulse() {
 						switch (count) {
-						case 18:
-							player.getProperties().setTeleportLocation(location);
-							return true;
+							case 18:
+								player.getProperties().setTeleportLocation(location);
+								return true;
 							default:
 								entity.asPlayer().getAudioManager().send(getAudio(count));
 								player.getPacketDispatch().sendGraphic(HOME_GRAPHICS[count]);
@@ -349,12 +350,12 @@
 						count++;
 						return false;
 					}
-					    @Override
-					    public void start() {
+					@Override
+					public void start() {
 						player = ((Player) entity);
 						if (TutorialSession.getExtension(player).getStage() < TutorialSession.MAX_STAGE) {
-						    stop();
-						    return;
+							stop();
+							return;
 						}
 						/*if (player.getSavedData().getGlobalData().getHomeTeleportDelay() > System.currentTimeMillis() && !player.isDonator()) {
 						    long milliseconds = player.getSavedData().getGlobalData().getHomeTeleportDelay() - System.currentTimeMillis();
@@ -382,7 +383,7 @@
 				};
 			}
 		},
-		OBELISK(new TeleportSettings(8939, 8941, -1, -1)) {
+		OBELISK(new TeleportSettings(8939, 8941, 661, -1)) {
 			@Override
 			public Pulse getPulse(final Entity entity, final Location location) {
 				return new Pulse(1) {
@@ -443,24 +444,24 @@
 					@Override
 					public boolean pulse() {
 						switch (++delay) {
-						case 2:
-							entity.animate(Animation.create(3265));
-							break;
-						case 4:
-							Quest quest = null;
-							if (entity instanceof Player) {
-								quest = ((Player) entity).getQuestRepository().getQuest("Lost City");
-							}
-							if (quest != null) {
-								if (quest.getStage(entity.asPlayer()) == 21) {
-									quest.finish(entity.asPlayer());
-								}
-							}
-							entity.animate(Animation.create(3266));
-							entity.getProperties().setTeleportLocation(location);
-							entity.unlock();
-							entity.lock(2);
-							return true;
+							case 2:
+								entity.animate(Animation.create(3265));
+								break;
+							case 4:
+								Quest quest = null;
+								if (entity instanceof Player) {
+									quest = ((Player) entity).getQuestRepository().getQuest("Lost City");
+								}
+								if (quest != null) {
+									if (quest.getStage(entity.asPlayer()) == 21) {
+										quest.finish(entity.asPlayer());
+									}
+								}
+								entity.animate(Animation.create(3266));
+								entity.getProperties().setTeleportLocation(location);
+								entity.unlock();
+								entity.lock(2);
+								return true;
 						}
 						return false;
 					}
@@ -659,6 +660,29 @@
 					}
 				};
 			}
+		},
+		INSTANT(new TeleportSettings(-1, -1, -1, -1)) {
+			@Override
+			public Pulse getPulse(final Entity entity, final Location location) {
+				return new Pulse(1) {
+					int delay = 0;
+
+					@Override
+					public boolean pulse() {
+						if (delay == 0) {
+							entity.lock();
+						} else if (delay == 3) {
+							entity.getProperties().setTeleportLocation(Location.create(location));
+						} else if (delay == 4) {
+							entity.getAnimator().forceAnimation(Animation.RESET);
+							entity.unlock();
+							return true;
+						}
+						delay++;
+						return false;
+					}
+				};
+			}
 		};
 
 		/**
@@ -768,10 +792,10 @@
 	 */
 	public static TeleportType getType(Player player) {
 		switch (player.getSpellBookManager().getSpellBook()) {
-		case 193:
-			return TeleportType.ANCIENT;
-		case 430:
-			return TeleportType.LUNAR;
+			case 193:
+				return TeleportType.ANCIENT;
+			case 430:
+				return TeleportType.LUNAR;
 		}
 		return TeleportType.NORMAL;
 	}
@@ -791,4 +815,4 @@
 	public void setTeleportType(int teleportType) {
 		this.teleportType = teleportType;
 	}
-}
+}
\ No newline at end of file
